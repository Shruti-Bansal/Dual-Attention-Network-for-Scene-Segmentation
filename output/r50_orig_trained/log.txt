[04/15 16:25:23] detectron2 INFO: Rank of current process: 0. World size: 1
[04/15 16:25:26] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/15 16:25:26] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=[])
[04/15 16:25:26] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/15 16:25:26] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/15 16:25:26] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/15 16:25:26] d2.utils.env INFO: Using a generated random seed 26582648
[04/15 16:25:33] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/15 16:25:33] d2.data.datasets.cityscapes INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train/'.
[04/15 16:26:36] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 832, 864, 896, 928, 960), max_size=960, sample_style='choice'), RandomFlip()]
[04/15 16:26:36] d2.data.build INFO: Using training sampler TrainingSampler
[04/15 16:26:36] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 16:26:36] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[04/15 16:26:36] d2.data.common INFO: Serialized dataset takes 0.71 MiB
[04/15 16:26:36] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 16:26:39] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /jet/home/bansals/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 16:26:39] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[04/15 16:26:39] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[04/15 16:26:39] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34msem_seg_head.predictor.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.weight[0m
[34msem_seg_head.res5_pam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_pam.0.weight[0m
[04/15 16:26:39] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[04/15 16:26:39] d2.engine.train_loop INFO: Starting training from iteration 0
[04/15 16:26:51] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 155, in train
    self.run_step()
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 298, in run_step
    loss_dict = self.model(data)
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/modeling/meta_arch/semantic_seg.py", line 120, in forward
    results, losses = self.sem_seg_head(features, targets)
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ocean/projects/cis230005p/bansals/DANet_new/DANet/danet/head.py", line 98, in forward
    weighted_pam = torch.matmul(pam_weight, pam.view(b, c, h * w, 1)).view(b, c, h, w)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 98.88 GiB (GPU 0; 31.74 GiB total capacity; 14.61 GiB already allocated; 15.82 GiB free; 14.76 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[04/15 16:26:51] d2.engine.hooks INFO: Total training time: 0:00:11 (0:00:00 on hooks)
[04/15 16:26:51] d2.utils.events INFO:  iter: 0       lr: N/A  max_mem: 16542M
[04/15 16:34:54] detectron2 INFO: Rank of current process: 0. World size: 4
[04/15 16:34:57] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2,3                      Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/15 16:34:57] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=False, num_gpus=4, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=[])
[04/15 16:34:57] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/15 16:34:57] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/15 16:34:57] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/15 16:34:57] d2.utils.env INFO: Using a generated random seed 57898299
[04/15 16:34:58] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/15 16:34:58] d2.data.datasets.cityscapes INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train/'.
[04/15 16:36:00] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 832, 864, 896, 928, 960), max_size=960, sample_style='choice'), RandomFlip()]
[04/15 16:36:00] d2.data.build INFO: Using training sampler TrainingSampler
[04/15 16:36:01] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 16:36:01] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[04/15 16:36:01] d2.data.common INFO: Serialized dataset takes 0.71 MiB
[04/15 16:36:01] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 16:36:01] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /jet/home/bansals/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 16:36:01] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[04/15 16:36:01] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[04/15 16:36:01] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34msem_seg_head.predictor.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.weight[0m
[34msem_seg_head.res5_pam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_pam.0.weight[0m
[04/15 16:36:02] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[04/15 16:36:02] d2.engine.train_loop INFO: Starting training from iteration 0
[04/15 16:36:15] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 155, in train
    self.run_step()
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 310, in run_step
    losses.backward()
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 24.72 GiB (GPU 0; 31.74 GiB total capacity; 28.55 GiB already allocated; 1.59 GiB free; 28.80 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[04/15 16:36:16] d2.engine.hooks INFO: Total training time: 0:00:13 (0:00:00 on hooks)
[04/15 16:36:16] d2.utils.events INFO:  iter: 0       lr: N/A  max_mem: 29696M
[04/15 16:44:07] detectron2 INFO: Rank of current process: 0. World size: 4
[04/15 16:44:08] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2,3                      Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/15 16:44:08] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=False, num_gpus=4, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=[])
[04/15 16:44:08] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/15 16:44:08] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/15 16:44:08] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/15 16:44:08] d2.utils.env INFO: Using a generated random seed 8565849
[04/15 16:44:08] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/15 16:44:08] d2.data.datasets.cityscapes INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train/'.
[04/15 16:44:13] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 832, 864, 896, 928, 960), max_size=960, sample_style='choice'), RandomFlip()]
[04/15 16:44:13] d2.data.build INFO: Using training sampler TrainingSampler
[04/15 16:44:13] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 16:44:13] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[04/15 16:44:13] d2.data.common INFO: Serialized dataset takes 0.71 MiB
[04/15 16:44:13] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 16:44:13] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /jet/home/bansals/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 16:44:13] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[04/15 16:44:13] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[04/15 16:44:13] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34msem_seg_head.predictor.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.weight[0m
[34msem_seg_head.res5_pam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_pam.0.weight[0m
[04/15 16:44:13] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[04/15 16:44:13] d2.engine.train_loop INFO: Starting training from iteration 0
[04/15 16:44:18] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 155, in train
    self.run_step()
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 310, in run_step
    losses.backward()
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 24.72 GiB (GPU 0; 31.74 GiB total capacity; 28.55 GiB already allocated; 1.59 GiB free; 28.80 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
[04/15 16:44:18] d2.engine.hooks INFO: Total training time: 0:00:05 (0:00:00 on hooks)
[04/15 16:44:18] d2.utils.events INFO:  iter: 0       lr: N/A  max_mem: 29696M
[04/15 17:27:19] detectron2 INFO: Rank of current process: 0. World size: 4
[04/15 17:27:27] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2,3                      Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/15 17:27:27] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=False, num_gpus=4, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=[])
[04/15 17:27:27] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/15 17:27:27] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/15 17:27:27] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/15 17:27:27] d2.utils.env INFO: Using a generated random seed 27273816
[04/15 17:27:29] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/15 17:27:29] d2.data.datasets.cityscapes INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train/'.
[04/15 17:28:34] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 832, 864, 896, 928, 960), max_size=960, sample_style='choice'), RandomFlip()]
[04/15 17:28:34] d2.data.build INFO: Using training sampler TrainingSampler
[04/15 17:28:39] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 17:28:39] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[04/15 17:28:39] d2.data.common INFO: Serialized dataset takes 0.71 MiB
[04/15 17:28:41] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 17:28:41] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /jet/home/bansals/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 17:28:41] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[04/15 17:28:42] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[04/15 17:28:42] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34msem_seg_head.predictor.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.weight[0m
[34msem_seg_head.res5_pam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_pam.0.weight[0m
[04/15 17:28:42] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[04/15 17:28:42] d2.engine.train_loop INFO: Starting training from iteration 0
[04/15 17:30:43] d2.utils.events INFO:  eta: 3:29:02  iter: 19  total_loss: 9.658    time: 0.5707  last_time: 0.5296  data_time: 4.4607  last_data_time: 0.0016   lr: 0.00019981  max_mem: 15030M
[04/15 17:31:04] d2.utils.events INFO:  eta: 3:31:47  iter: 39  total_loss: 3.456    time: 0.6864  last_time: 0.7134  data_time: 0.0298  last_data_time: 0.0019   lr: 0.00039961  max_mem: 15030M
[04/15 17:31:15] d2.utils.events INFO:  eta: 3:31:52  iter: 59  total_loss: 1.985    time: 0.6471  last_time: 1.0459  data_time: 0.0053  last_data_time: 0.0020   lr: 0.00059941  max_mem: 15030M
[04/15 17:31:27] d2.utils.events INFO:  eta: 3:31:24  iter: 79  total_loss: 1.42    time: 0.6281  last_time: 0.5509  data_time: 0.0139  last_data_time: 0.0022   lr: 0.00079921  max_mem: 15030M
[04/15 17:31:39] d2.utils.events INFO:  eta: 3:31:35  iter: 99  total_loss: 1.229    time: 0.6231  last_time: 1.3569  data_time: 0.0032  last_data_time: 0.0019   lr: 0.00099901  max_mem: 15030M
[04/15 17:31:53] d2.utils.events INFO:  eta: 3:31:23  iter: 119  total_loss: 0.8429    time: 0.6326  last_time: 0.5009  data_time: 0.0129  last_data_time: 0.0020   lr: 0.0011988  max_mem: 15030M
[04/15 17:32:05] d2.utils.events INFO:  eta: 3:31:14  iter: 139  total_loss: 0.9403    time: 0.6257  last_time: 0.5242  data_time: 0.0060  last_data_time: 0.0019   lr: 0.0013986  max_mem: 15030M
[04/15 17:32:21] d2.utils.events INFO:  eta: 3:32:12  iter: 159  total_loss: 0.7164    time: 0.6463  last_time: 0.4865  data_time: 0.0222  last_data_time: 0.0020   lr: 0.0015984  max_mem: 15030M
[04/15 17:32:32] d2.utils.events INFO:  eta: 3:31:37  iter: 179  total_loss: 0.7011    time: 0.6361  last_time: 0.5238  data_time: 0.0033  last_data_time: 0.0018   lr: 0.0017982  max_mem: 15030M
[04/15 17:32:45] d2.utils.events INFO:  eta: 3:32:03  iter: 199  total_loss: 0.5949    time: 0.6341  last_time: 0.5004  data_time: 0.0089  last_data_time: 0.0023   lr: 0.001998  max_mem: 15030M
[04/15 17:32:57] d2.utils.events INFO:  eta: 3:31:36  iter: 219  total_loss: 0.5332    time: 0.6342  last_time: 0.5099  data_time: 0.0044  last_data_time: 0.0019   lr: 0.0021978  max_mem: 15030M
[04/15 17:33:14] d2.utils.events INFO:  eta: 3:31:25  iter: 239  total_loss: 0.5446    time: 0.6515  last_time: 0.5323  data_time: 0.0169  last_data_time: 0.0021   lr: 0.0023976  max_mem: 15030M
[04/15 17:33:27] d2.utils.events INFO:  eta: 3:31:14  iter: 259  total_loss: 0.5355    time: 0.6486  last_time: 0.5276  data_time: 0.0077  last_data_time: 0.0018   lr: 0.0025974  max_mem: 15030M
[04/15 17:33:40] d2.utils.events INFO:  eta: 3:31:31  iter: 279  total_loss: 0.4865    time: 0.6501  last_time: 0.5309  data_time: 0.0049  last_data_time: 0.0020   lr: 0.0027972  max_mem: 15030M
[04/15 17:33:55] d2.utils.events INFO:  eta: 3:31:25  iter: 299  total_loss: 0.4743    time: 0.6556  last_time: 0.5227  data_time: 0.0285  last_data_time: 0.0018   lr: 0.002997  max_mem: 15030M
[04/15 17:34:08] d2.utils.events INFO:  eta: 3:31:26  iter: 319  total_loss: 0.4805    time: 0.6523  last_time: 0.5271  data_time: 0.0109  last_data_time: 0.0020   lr: 0.0031968  max_mem: 15030M
[04/15 17:34:20] d2.utils.events INFO:  eta: 3:31:26  iter: 339  total_loss: 0.4996    time: 0.6498  last_time: 0.5024  data_time: 0.0181  last_data_time: 0.0020   lr: 0.0033966  max_mem: 15030M
[04/15 17:34:36] d2.utils.events INFO:  eta: 3:31:26  iter: 359  total_loss: 0.4327    time: 0.6568  last_time: 0.5566  data_time: 0.0115  last_data_time: 0.0121   lr: 0.0035964  max_mem: 15030M
[04/15 17:34:49] d2.utils.events INFO:  eta: 3:31:10  iter: 379  total_loss: 0.443    time: 0.6555  last_time: 0.9085  data_time: 0.0088  last_data_time: 0.0021   lr: 0.0037962  max_mem: 15030M
[04/15 17:35:01] d2.utils.events INFO:  eta: 3:31:00  iter: 399  total_loss: 0.4902    time: 0.6519  last_time: 0.5221  data_time: 0.0051  last_data_time: 0.0019   lr: 0.003996  max_mem: 15030M
[04/15 17:35:14] d2.utils.events INFO:  eta: 3:30:51  iter: 419  total_loss: 0.4195    time: 0.6534  last_time: 0.5528  data_time: 0.0044  last_data_time: 0.0019   lr: 0.0041958  max_mem: 15030M
[04/15 17:35:28] d2.utils.events INFO:  eta: 3:30:30  iter: 439  total_loss: 0.423    time: 0.6551  last_time: 0.5327  data_time: 0.0117  last_data_time: 0.0023   lr: 0.0043956  max_mem: 15030M
[04/15 17:35:41] d2.utils.events INFO:  eta: 3:30:28  iter: 459  total_loss: 0.4858    time: 0.6544  last_time: 0.5462  data_time: 0.0122  last_data_time: 0.0192   lr: 0.0045954  max_mem: 15030M
[04/15 17:35:54] d2.utils.events INFO:  eta: 3:30:13  iter: 479  total_loss: 0.4641    time: 0.6538  last_time: 0.5005  data_time: 0.0083  last_data_time: 0.0021   lr: 0.0047952  max_mem: 15030M
[04/15 17:36:08] d2.utils.events INFO:  eta: 3:30:00  iter: 499  total_loss: 0.3715    time: 0.6539  last_time: 0.6071  data_time: 0.0057  last_data_time: 0.0294   lr: 0.004995  max_mem: 15030M
[04/15 17:36:21] d2.utils.events INFO:  eta: 3:29:47  iter: 519  total_loss: 0.3743    time: 0.6541  last_time: 0.5321  data_time: 0.0062  last_data_time: 0.0021   lr: 0.0051948  max_mem: 15030M
[04/15 17:36:33] d2.utils.events INFO:  eta: 3:29:36  iter: 539  total_loss: 0.3152    time: 0.6508  last_time: 0.5380  data_time: 0.0028  last_data_time: 0.0021   lr: 0.0053946  max_mem: 15030M
[04/15 17:36:46] d2.utils.events INFO:  eta: 3:29:30  iter: 559  total_loss: 0.3591    time: 0.6495  last_time: 0.5597  data_time: 0.0070  last_data_time: 0.0037   lr: 0.0055944  max_mem: 15030M
[04/15 17:37:00] d2.utils.events INFO:  eta: 3:29:11  iter: 579  total_loss: 0.366    time: 0.6517  last_time: 0.5362  data_time: 0.0047  last_data_time: 0.0020   lr: 0.0057942  max_mem: 15030M
[04/15 17:37:11] d2.utils.events INFO:  eta: 3:28:54  iter: 599  total_loss: 0.4212    time: 0.6480  last_time: 0.5397  data_time: 0.0027  last_data_time: 0.0020   lr: 0.005994  max_mem: 15030M
[04/15 17:37:24] d2.utils.events INFO:  eta: 3:28:53  iter: 619  total_loss: 0.3255    time: 0.6474  last_time: 0.5262  data_time: 0.0052  last_data_time: 0.0021   lr: 0.0061938  max_mem: 15030M
[04/15 17:37:36] d2.utils.events INFO:  eta: 3:28:43  iter: 639  total_loss: 0.3522    time: 0.6466  last_time: 0.5239  data_time: 0.0076  last_data_time: 0.0020   lr: 0.0063936  max_mem: 15030M
[04/15 17:37:50] d2.utils.events INFO:  eta: 3:28:18  iter: 659  total_loss: 0.3318    time: 0.6468  last_time: 0.5056  data_time: 0.0039  last_data_time: 0.0025   lr: 0.0065934  max_mem: 15030M
[04/15 17:38:06] d2.utils.events INFO:  eta: 3:28:11  iter: 679  total_loss: 0.3156    time: 0.6504  last_time: 0.5291  data_time: 0.0055  last_data_time: 0.0020   lr: 0.0067932  max_mem: 15030M
[04/15 17:38:19] d2.utils.events INFO:  eta: 3:27:56  iter: 699  total_loss: 0.341    time: 0.6500  last_time: 0.5208  data_time: 0.0040  last_data_time: 0.0022   lr: 0.006993  max_mem: 15030M
[04/15 17:38:32] d2.utils.events INFO:  eta: 3:27:50  iter: 719  total_loss: 0.3166    time: 0.6502  last_time: 0.5191  data_time: 0.0182  last_data_time: 0.0020   lr: 0.0071928  max_mem: 15030M
[04/15 17:38:44] d2.utils.events INFO:  eta: 3:27:33  iter: 739  total_loss: 0.3436    time: 0.6481  last_time: 0.5350  data_time: 0.0051  last_data_time: 0.0020   lr: 0.0073926  max_mem: 15030M
[04/15 17:38:58] d2.utils.events INFO:  eta: 3:27:23  iter: 759  total_loss: 0.272    time: 0.6491  last_time: 0.5438  data_time: 0.0086  last_data_time: 0.0024   lr: 0.0075924  max_mem: 15030M
[04/15 17:39:12] d2.utils.events INFO:  eta: 3:27:18  iter: 779  total_loss: 0.3165    time: 0.6508  last_time: 0.5560  data_time: 0.0081  last_data_time: 0.0359   lr: 0.0077922  max_mem: 15030M
[04/15 17:39:24] d2.utils.events INFO:  eta: 3:27:13  iter: 799  total_loss: 0.3417    time: 0.6498  last_time: 0.5213  data_time: 0.0092  last_data_time: 0.0018   lr: 0.007992  max_mem: 15030M
[04/15 17:39:37] d2.utils.events INFO:  eta: 3:26:52  iter: 819  total_loss: 0.3064    time: 0.6494  last_time: 0.5072  data_time: 0.0132  last_data_time: 0.0301   lr: 0.0081918  max_mem: 15030M
[04/15 17:39:52] d2.utils.events INFO:  eta: 3:26:52  iter: 839  total_loss: 0.3759    time: 0.6508  last_time: 2.7031  data_time: 0.0128  last_data_time: 0.0019   lr: 0.0083916  max_mem: 15030M
[04/15 17:40:05] d2.utils.events INFO:  eta: 3:26:47  iter: 859  total_loss: 0.5518    time: 0.6505  last_time: 0.5754  data_time: 0.0055  last_data_time: 0.0115   lr: 0.0085914  max_mem: 15030M
[04/15 17:40:18] d2.utils.events INFO:  eta: 3:26:36  iter: 879  total_loss: 0.8984    time: 0.6509  last_time: 0.5467  data_time: 0.0056  last_data_time: 0.0019   lr: 0.0087912  max_mem: 15030M
[04/15 17:40:32] d2.utils.events INFO:  eta: 3:26:26  iter: 899  total_loss: 1.566    time: 0.6518  last_time: 0.5085  data_time: 0.0262  last_data_time: 0.0020   lr: 0.008991  max_mem: 15030M
[04/15 17:40:46] d2.utils.events INFO:  eta: 3:26:15  iter: 919  total_loss: 1.478    time: 0.6524  last_time: 0.5459  data_time: 0.0080  last_data_time: 0.0092   lr: 0.0091908  max_mem: 15030M
[04/15 17:40:59] d2.utils.events INFO:  eta: 3:26:04  iter: 939  total_loss: 1.13    time: 0.6525  last_time: 0.5114  data_time: 0.0053  last_data_time: 0.0020   lr: 0.0093906  max_mem: 15030M
[04/15 17:41:15] d2.utils.events INFO:  eta: 3:25:56  iter: 959  total_loss: 1.023    time: 0.6554  last_time: 1.1853  data_time: 0.0100  last_data_time: 0.0024   lr: 0.0095904  max_mem: 15030M
[04/15 17:41:27] d2.utils.events INFO:  eta: 3:25:49  iter: 979  total_loss: 0.9145    time: 0.6535  last_time: 0.5664  data_time: 0.0047  last_data_time: 0.0018   lr: 0.0097902  max_mem: 15030M
[04/15 17:41:40] d2.utils.events INFO:  eta: 3:25:40  iter: 999  total_loss: 0.9388    time: 0.6541  last_time: 0.5261  data_time: 0.0078  last_data_time: 0.0021   lr: 0.00999  max_mem: 15030M
[04/15 17:41:53] d2.utils.events INFO:  eta: 3:25:35  iter: 1019  total_loss: 0.7187    time: 0.6533  last_time: 0.5431  data_time: 0.0080  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:42:06] d2.utils.events INFO:  eta: 3:25:33  iter: 1039  total_loss: 0.7413    time: 0.6536  last_time: 0.9749  data_time: 0.0051  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:42:20] d2.utils.events INFO:  eta: 3:25:30  iter: 1059  total_loss: 0.6203    time: 0.6536  last_time: 0.5490  data_time: 0.0057  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:42:33] d2.utils.events INFO:  eta: 3:25:32  iter: 1079  total_loss: 0.6604    time: 0.6542  last_time: 0.6007  data_time: 0.0159  last_data_time: 0.0579   lr: 0.01  max_mem: 15030M
[04/15 17:42:47] d2.utils.events INFO:  eta: 3:25:25  iter: 1099  total_loss: 0.6977    time: 0.6548  last_time: 0.7661  data_time: 0.0033  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:43:01] d2.utils.events INFO:  eta: 3:25:18  iter: 1119  total_loss: 0.657    time: 0.6549  last_time: 0.5331  data_time: 0.0089  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:43:13] d2.utils.events INFO:  eta: 3:25:14  iter: 1139  total_loss: 0.6356    time: 0.6545  last_time: 0.5089  data_time: 0.0060  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:43:27] d2.utils.events INFO:  eta: 3:25:00  iter: 1159  total_loss: 0.6504    time: 0.6544  last_time: 0.8266  data_time: 0.0055  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 17:43:38] d2.utils.events INFO:  eta: 3:25:00  iter: 1179  total_loss: 0.5447    time: 0.6530  last_time: 0.5413  data_time: 0.0058  last_data_time: 0.0174   lr: 0.01  max_mem: 15030M
[04/15 17:43:53] d2.utils.events INFO:  eta: 3:24:46  iter: 1199  total_loss: 0.5346    time: 0.6544  last_time: 0.5682  data_time: 0.0199  last_data_time: 0.0145   lr: 0.01  max_mem: 15030M
[04/15 17:44:06] d2.utils.events INFO:  eta: 3:24:41  iter: 1219  total_loss: 0.5145    time: 0.6543  last_time: 0.5234  data_time: 0.0397  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:44:19] d2.utils.events INFO:  eta: 3:24:44  iter: 1239  total_loss: 0.4648    time: 0.6538  last_time: 0.7378  data_time: 0.0051  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:44:31] d2.utils.events INFO:  eta: 3:24:24  iter: 1259  total_loss: 0.5667    time: 0.6528  last_time: 0.5464  data_time: 0.0055  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:44:43] d2.utils.events INFO:  eta: 3:24:24  iter: 1279  total_loss: 0.5709    time: 0.6518  last_time: 0.5402  data_time: 0.0043  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:44:55] d2.utils.events INFO:  eta: 3:24:19  iter: 1299  total_loss: 0.4915    time: 0.6509  last_time: 0.5067  data_time: 0.0045  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 17:45:07] d2.utils.events INFO:  eta: 3:24:15  iter: 1319  total_loss: 0.4805    time: 0.6503  last_time: 0.5121  data_time: 0.0145  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:45:20] d2.utils.events INFO:  eta: 3:24:05  iter: 1339  total_loss: 0.5311    time: 0.6504  last_time: 0.7593  data_time: 0.0101  last_data_time: 0.0035   lr: 0.01  max_mem: 15030M
[04/15 17:45:34] d2.utils.events INFO:  eta: 3:23:54  iter: 1359  total_loss: 0.5073    time: 0.6505  last_time: 1.6479  data_time: 0.0129  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:45:47] d2.utils.events INFO:  eta: 3:23:55  iter: 1379  total_loss: 0.4641    time: 0.6510  last_time: 1.4621  data_time: 0.0102  last_data_time: 0.0175   lr: 0.01  max_mem: 15030M
[04/15 17:46:00] d2.utils.events INFO:  eta: 3:23:49  iter: 1399  total_loss: 0.5023    time: 0.6508  last_time: 1.0459  data_time: 0.0105  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 17:46:13] d2.utils.events INFO:  eta: 3:23:44  iter: 1419  total_loss: 0.4903    time: 0.6506  last_time: 0.5281  data_time: 0.0269  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:46:25] d2.utils.events INFO:  eta: 3:23:54  iter: 1439  total_loss: 0.4369    time: 0.6497  last_time: 0.5491  data_time: 0.0052  last_data_time: 0.0182   lr: 0.01  max_mem: 15030M
[04/15 17:46:37] d2.utils.events INFO:  eta: 3:23:43  iter: 1459  total_loss: 0.4718    time: 0.6493  last_time: 0.5618  data_time: 0.0202  last_data_time: 0.0136   lr: 0.01  max_mem: 15030M
[04/15 17:46:50] d2.utils.events INFO:  eta: 3:23:43  iter: 1479  total_loss: 0.4297    time: 0.6489  last_time: 0.5379  data_time: 0.0114  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 17:47:02] d2.utils.events INFO:  eta: 3:23:39  iter: 1499  total_loss: 0.4349    time: 0.6481  last_time: 0.5453  data_time: 0.0047  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 17:47:13] d2.utils.events INFO:  eta: 3:23:29  iter: 1519  total_loss: 0.4132    time: 0.6468  last_time: 0.5938  data_time: 0.0043  last_data_time: 0.0300   lr: 0.01  max_mem: 15030M
[04/15 17:47:25] d2.utils.events INFO:  eta: 3:23:18  iter: 1539  total_loss: 0.3728    time: 0.6461  last_time: 0.4846  data_time: 0.0150  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:47:36] d2.utils.events INFO:  eta: 3:23:04  iter: 1559  total_loss: 0.3877    time: 0.6452  last_time: 0.5498  data_time: 0.0141  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 17:47:48] d2.utils.events INFO:  eta: 3:22:57  iter: 1579  total_loss: 0.3627    time: 0.6445  last_time: 0.5413  data_time: 0.0106  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:48:00] d2.utils.events INFO:  eta: 3:22:46  iter: 1599  total_loss: 0.3801    time: 0.6435  last_time: 0.5249  data_time: 0.0043  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 17:48:16] d2.utils.events INFO:  eta: 3:22:35  iter: 1619  total_loss: 0.3672    time: 0.6454  last_time: 0.6724  data_time: 0.0153  last_data_time: 0.0673   lr: 0.01  max_mem: 15030M
[04/15 17:48:29] d2.utils.events INFO:  eta: 3:22:22  iter: 1639  total_loss: 0.367    time: 0.6453  last_time: 0.5279  data_time: 0.0135  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:48:43] d2.utils.events INFO:  eta: 3:22:13  iter: 1659  total_loss: 0.3567    time: 0.6459  last_time: 0.5524  data_time: 0.0293  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:48:59] d2.utils.events INFO:  eta: 3:22:06  iter: 1679  total_loss: 0.401    time: 0.6477  last_time: 0.9850  data_time: 0.0141  last_data_time: 0.0483   lr: 0.01  max_mem: 15030M
[04/15 17:49:12] d2.utils.events INFO:  eta: 3:22:00  iter: 1699  total_loss: 0.3546    time: 0.6476  last_time: 1.7133  data_time: 0.0108  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:49:29] d2.utils.events INFO:  eta: 3:21:42  iter: 1719  total_loss: 0.3397    time: 0.6495  last_time: 1.1306  data_time: 0.0100  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:49:41] d2.utils.events INFO:  eta: 3:21:36  iter: 1739  total_loss: 0.3964    time: 0.6488  last_time: 0.5270  data_time: 0.0047  last_data_time: 0.0118   lr: 0.01  max_mem: 15030M
[04/15 17:49:53] d2.utils.events INFO:  eta: 3:21:25  iter: 1759  total_loss: 0.3333    time: 0.6482  last_time: 0.5339  data_time: 0.0038  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:50:04] d2.utils.events INFO:  eta: 3:21:11  iter: 1779  total_loss: 0.3406    time: 0.6473  last_time: 0.5621  data_time: 0.0052  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 17:50:17] d2.utils.events INFO:  eta: 3:21:01  iter: 1799  total_loss: 0.3658    time: 0.6470  last_time: 0.6043  data_time: 0.0034  last_data_time: 0.0140   lr: 0.01  max_mem: 15030M
[04/15 17:50:28] d2.utils.events INFO:  eta: 3:20:55  iter: 1819  total_loss: 0.3781    time: 0.6460  last_time: 0.5506  data_time: 0.0028  last_data_time: 0.0029   lr: 0.01  max_mem: 15030M
[04/15 17:50:41] d2.utils.events INFO:  eta: 3:20:36  iter: 1839  total_loss: 0.415    time: 0.6461  last_time: 0.8494  data_time: 0.0169  last_data_time: 0.0326   lr: 0.01  max_mem: 15030M
[04/15 17:50:55] d2.utils.events INFO:  eta: 3:20:24  iter: 1859  total_loss: 0.3676    time: 0.6463  last_time: 0.5374  data_time: 0.0042  last_data_time: 0.0111   lr: 0.01  max_mem: 15030M
[04/15 17:51:08] d2.utils.events INFO:  eta: 3:20:12  iter: 1879  total_loss: 0.3766    time: 0.6461  last_time: 0.5911  data_time: 0.0073  last_data_time: 0.0466   lr: 0.01  max_mem: 15030M
[04/15 17:51:21] d2.utils.events INFO:  eta: 3:20:03  iter: 1899  total_loss: 0.3515    time: 0.6462  last_time: 0.5102  data_time: 0.0186  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:51:33] d2.utils.events INFO:  eta: 3:19:52  iter: 1919  total_loss: 0.3425    time: 0.6454  last_time: 0.5203  data_time: 0.0033  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:51:44] d2.utils.events INFO:  eta: 3:19:40  iter: 1939  total_loss: 0.3298    time: 0.6445  last_time: 0.4901  data_time: 0.0061  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:51:58] d2.utils.events INFO:  eta: 3:19:21  iter: 1959  total_loss: 0.3179    time: 0.6446  last_time: 0.6290  data_time: 0.0055  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 17:52:09] d2.utils.events INFO:  eta: 3:19:02  iter: 1979  total_loss: 0.333    time: 0.6437  last_time: 0.5356  data_time: 0.0041  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:52:23] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 17:52:34] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 17:52:34] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 17:52:34] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 17:52:34] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 17:52:34] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 17:52:35] d2.utils.events INFO:  eta: 3:18:50  iter: 1999  total_loss: 0.3334    time: 0.6443  last_time: 0.5666  data_time: 0.0053  last_data_time: 0.0138   lr: 0.01  max_mem: 15030M
[04/15 17:52:54] d2.utils.events INFO:  eta: 3:18:45  iter: 2019  total_loss: 0.2753    time: 0.6473  last_time: 0.6208  data_time: 0.0328  last_data_time: 0.0139   lr: 0.01  max_mem: 15030M
[04/15 17:53:06] d2.utils.events INFO:  eta: 3:18:24  iter: 2039  total_loss: 0.3242    time: 0.6468  last_time: 0.5437  data_time: 0.0049  last_data_time: 0.0121   lr: 0.01  max_mem: 15030M
[04/15 17:53:19] d2.utils.events INFO:  eta: 3:18:17  iter: 2059  total_loss: 0.3366    time: 0.6467  last_time: 0.5306  data_time: 0.0061  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:53:33] d2.utils.events INFO:  eta: 3:18:05  iter: 2079  total_loss: 0.3293    time: 0.6468  last_time: 0.7310  data_time: 0.0186  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:53:45] d2.utils.events INFO:  eta: 3:17:54  iter: 2099  total_loss: 0.3122    time: 0.6463  last_time: 0.6559  data_time: 0.0064  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 17:53:57] d2.utils.events INFO:  eta: 3:17:47  iter: 2119  total_loss: 0.2787    time: 0.6458  last_time: 0.6542  data_time: 0.0047  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:54:10] d2.utils.events INFO:  eta: 3:17:42  iter: 2139  total_loss: 0.3006    time: 0.6459  last_time: 0.7243  data_time: 0.0102  last_data_time: 0.0151   lr: 0.01  max_mem: 15030M
[04/15 17:54:22] d2.utils.events INFO:  eta: 3:17:32  iter: 2159  total_loss: 0.2873    time: 0.6453  last_time: 0.9951  data_time: 0.0051  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:54:34] d2.utils.events INFO:  eta: 3:17:24  iter: 2179  total_loss: 0.3033    time: 0.6452  last_time: 0.5691  data_time: 0.0057  last_data_time: 0.0119   lr: 0.01  max_mem: 15030M
[04/15 17:54:48] d2.utils.events INFO:  eta: 3:17:17  iter: 2199  total_loss: 0.3059    time: 0.6456  last_time: 1.0607  data_time: 0.0111  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:55:01] d2.utils.events INFO:  eta: 3:17:09  iter: 2219  total_loss: 0.3156    time: 0.6455  last_time: 0.5146  data_time: 0.0062  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 17:55:16] d2.utils.events INFO:  eta: 3:16:49  iter: 2239  total_loss: 0.2627    time: 0.6462  last_time: 0.5302  data_time: 0.0119  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:55:29] d2.utils.events INFO:  eta: 3:16:47  iter: 2259  total_loss: 0.2756    time: 0.6461  last_time: 0.5657  data_time: 0.0232  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:55:42] d2.utils.events INFO:  eta: 3:16:35  iter: 2279  total_loss: 0.3053    time: 0.6463  last_time: 1.4152  data_time: 0.0175  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:55:56] d2.utils.events INFO:  eta: 3:16:23  iter: 2299  total_loss: 0.2576    time: 0.6464  last_time: 0.7166  data_time: 0.0060  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 17:56:09] d2.utils.events INFO:  eta: 3:16:13  iter: 2319  total_loss: 0.2696    time: 0.6465  last_time: 0.5225  data_time: 0.0128  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 17:56:21] d2.utils.events INFO:  eta: 3:15:56  iter: 2339  total_loss: 0.2761    time: 0.6461  last_time: 0.5420  data_time: 0.0161  last_data_time: 0.0032   lr: 0.01  max_mem: 15030M
[04/15 17:56:33] d2.utils.events INFO:  eta: 3:15:44  iter: 2359  total_loss: 0.2862    time: 0.6456  last_time: 0.5105  data_time: 0.0065  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 17:56:44] d2.utils.events INFO:  eta: 3:15:29  iter: 2379  total_loss: 0.3254    time: 0.6449  last_time: 0.5351  data_time: 0.0035  last_data_time: 0.0103   lr: 0.01  max_mem: 15030M
[04/15 17:56:56] d2.utils.events INFO:  eta: 3:15:13  iter: 2399  total_loss: 0.2721    time: 0.6445  last_time: 0.5312  data_time: 0.0092  last_data_time: 0.0213   lr: 0.01  max_mem: 15030M
[04/15 17:57:08] d2.utils.events INFO:  eta: 3:14:41  iter: 2419  total_loss: 0.278    time: 0.6438  last_time: 0.4968  data_time: 0.0035  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 17:57:23] d2.utils.events INFO:  eta: 3:14:32  iter: 2439  total_loss: 0.2824    time: 0.6446  last_time: 0.8338  data_time: 0.0088  last_data_time: 0.0151   lr: 0.01  max_mem: 15030M
[04/15 17:57:35] d2.utils.events INFO:  eta: 3:14:22  iter: 2459  total_loss: 0.3085    time: 0.6443  last_time: 0.6138  data_time: 0.0062  last_data_time: 0.0146   lr: 0.01  max_mem: 15030M
[04/15 17:57:49] d2.utils.events INFO:  eta: 3:14:15  iter: 2479  total_loss: 0.2698    time: 0.6446  last_time: 0.5623  data_time: 0.0097  last_data_time: 0.0156   lr: 0.01  max_mem: 15030M
[04/15 19:41:35] detectron2 INFO: Rank of current process: 0. World size: 4
[04/15 19:41:39] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2,3                      Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/15 19:41:39] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=False, num_gpus=4, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=[])
[04/15 19:41:39] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/15 19:41:39] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/15 19:41:39] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/15 19:41:39] d2.utils.env INFO: Using a generated random seed 39356281
[04/15 19:41:39] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/15 19:41:39] d2.data.datasets.cityscapes INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train/'.
[04/15 19:42:40] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 832, 864, 896, 928, 960), max_size=960, sample_style='choice'), RandomFlip()]
[04/15 19:42:40] d2.data.build INFO: Using training sampler TrainingSampler
[04/15 19:42:40] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 19:42:40] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[04/15 19:42:40] d2.data.common INFO: Serialized dataset takes 0.71 MiB
[04/15 19:42:41] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 19:42:41] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /jet/home/bansals/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[04/15 19:42:41] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[04/15 19:42:41] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[04/15 19:42:41] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34msem_seg_head.predictor.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_cam.0.weight[0m
[34msem_seg_head.res5_pam.0.norm.{bias, weight}[0m
[34msem_seg_head.res5_pam.0.weight[0m
[04/15 19:42:41] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[04/15 19:42:41] d2.engine.train_loop INFO: Starting training from iteration 0
[04/15 19:43:04] d2.utils.events INFO:  eta: 3:14:21  iter: 19  total_loss: 13.88    time: 0.4850  last_time: 0.4812  data_time: 0.1862  last_data_time: 0.0035   lr: 0.00019981  max_mem: 15030M
[04/15 19:43:16] d2.utils.events INFO:  eta: 3:13:49  iter: 39  total_loss: 5.38    time: 0.4795  last_time: 0.4968  data_time: 0.0045  last_data_time: 0.0043   lr: 0.00039961  max_mem: 15030M
[04/15 19:43:26] d2.utils.events INFO:  eta: 3:13:54  iter: 59  total_loss: 1.783    time: 0.4811  last_time: 0.4767  data_time: 0.0028  last_data_time: 0.0031   lr: 0.00059941  max_mem: 15030M
[04/15 19:43:36] d2.utils.events INFO:  eta: 3:13:57  iter: 79  total_loss: 1.463    time: 0.4837  last_time: 0.4832  data_time: 0.0051  last_data_time: 0.0022   lr: 0.00079921  max_mem: 15030M
[04/15 19:43:45] d2.utils.events INFO:  eta: 3:13:59  iter: 99  total_loss: 1.062    time: 0.4841  last_time: 0.4925  data_time: 0.0028  last_data_time: 0.0021   lr: 0.00099901  max_mem: 15030M
[04/15 19:43:55] d2.utils.events INFO:  eta: 3:13:49  iter: 119  total_loss: 0.8529    time: 0.4842  last_time: 0.5057  data_time: 0.0021  last_data_time: 0.0021   lr: 0.0011988  max_mem: 15030M
[04/15 19:44:05] d2.utils.events INFO:  eta: 3:13:23  iter: 139  total_loss: 0.7961    time: 0.4848  last_time: 0.5033  data_time: 0.0030  last_data_time: 0.0020   lr: 0.0013986  max_mem: 15030M
[04/15 19:44:15] d2.utils.events INFO:  eta: 3:13:24  iter: 159  total_loss: 0.8328    time: 0.4856  last_time: 0.4904  data_time: 0.0052  last_data_time: 0.0022   lr: 0.0015984  max_mem: 15030M
[04/15 19:44:24] d2.utils.events INFO:  eta: 3:13:08  iter: 179  total_loss: 0.6912    time: 0.4853  last_time: 0.4823  data_time: 0.0036  last_data_time: 0.0123   lr: 0.0017982  max_mem: 15030M
[04/15 19:44:34] d2.utils.events INFO:  eta: 3:12:51  iter: 199  total_loss: 0.6687    time: 0.4851  last_time: 0.4858  data_time: 0.0031  last_data_time: 0.0022   lr: 0.001998  max_mem: 15030M
[04/15 19:44:44] d2.utils.events INFO:  eta: 3:12:41  iter: 219  total_loss: 0.7161    time: 0.4851  last_time: 0.4554  data_time: 0.0049  last_data_time: 0.0020   lr: 0.0021978  max_mem: 15030M
[04/15 19:44:54] d2.utils.events INFO:  eta: 3:12:32  iter: 239  total_loss: 0.8305    time: 0.4853  last_time: 0.4745  data_time: 0.0032  last_data_time: 0.0023   lr: 0.0023976  max_mem: 15030M
[04/15 19:45:04] d2.utils.events INFO:  eta: 3:12:27  iter: 259  total_loss: 0.831    time: 0.4855  last_time: 0.4828  data_time: 0.0024  last_data_time: 0.0039   lr: 0.0025974  max_mem: 15030M
[04/15 19:45:13] d2.utils.events INFO:  eta: 3:12:26  iter: 279  total_loss: 0.7205    time: 0.4857  last_time: 0.4880  data_time: 0.0044  last_data_time: 0.0022   lr: 0.0027972  max_mem: 15030M
[04/15 19:45:23] d2.utils.events INFO:  eta: 3:12:10  iter: 299  total_loss: 0.5964    time: 0.4858  last_time: 0.4700  data_time: 0.0021  last_data_time: 0.0022   lr: 0.002997  max_mem: 15030M
[04/15 19:45:33] d2.utils.events INFO:  eta: 3:11:58  iter: 319  total_loss: 0.5542    time: 0.4858  last_time: 0.4916  data_time: 0.0028  last_data_time: 0.0021   lr: 0.0031968  max_mem: 15030M
[04/15 19:45:43] d2.utils.events INFO:  eta: 3:11:50  iter: 339  total_loss: 0.5849    time: 0.4865  last_time: 0.4896  data_time: 0.0024  last_data_time: 0.0021   lr: 0.0033966  max_mem: 15030M
[04/15 19:45:52] d2.utils.events INFO:  eta: 3:11:33  iter: 359  total_loss: 0.5194    time: 0.4862  last_time: 0.4978  data_time: 0.0027  last_data_time: 0.0020   lr: 0.0035964  max_mem: 15030M
[04/15 19:46:02] d2.utils.events INFO:  eta: 3:11:26  iter: 379  total_loss: 0.5397    time: 0.4866  last_time: 0.4998  data_time: 0.0032  last_data_time: 0.0025   lr: 0.0037962  max_mem: 15030M
[04/15 19:46:12] d2.utils.events INFO:  eta: 3:11:19  iter: 399  total_loss: 0.4394    time: 0.4869  last_time: 0.4744  data_time: 0.0038  last_data_time: 0.0021   lr: 0.003996  max_mem: 15030M
[04/15 19:46:22] d2.utils.events INFO:  eta: 3:11:22  iter: 419  total_loss: 0.6275    time: 0.4871  last_time: 0.5069  data_time: 0.0027  last_data_time: 0.0020   lr: 0.0041958  max_mem: 15030M
[04/15 19:46:32] d2.utils.events INFO:  eta: 3:11:13  iter: 439  total_loss: 1.063    time: 0.4871  last_time: 0.4932  data_time: 0.0024  last_data_time: 0.0023   lr: 0.0043956  max_mem: 15030M
[04/15 19:46:42] d2.utils.events INFO:  eta: 3:10:52  iter: 459  total_loss: 0.8862    time: 0.4870  last_time: 0.4807  data_time: 0.0026  last_data_time: 0.0018   lr: 0.0045954  max_mem: 15030M
[04/15 19:46:51] d2.utils.events INFO:  eta: 3:10:40  iter: 479  total_loss: 0.702    time: 0.4869  last_time: 0.4892  data_time: 0.0034  last_data_time: 0.0021   lr: 0.0047952  max_mem: 15030M
[04/15 19:47:01] d2.utils.events INFO:  eta: 3:10:32  iter: 499  total_loss: 0.7295    time: 0.4870  last_time: 0.4739  data_time: 0.0034  last_data_time: 0.0021   lr: 0.004995  max_mem: 15030M
[04/15 19:47:11] d2.utils.events INFO:  eta: 3:10:21  iter: 519  total_loss: 0.7801    time: 0.4870  last_time: 0.4908  data_time: 0.0057  last_data_time: 0.0035   lr: 0.0051948  max_mem: 15030M
[04/15 19:47:21] d2.utils.events INFO:  eta: 3:10:10  iter: 539  total_loss: 0.73    time: 0.4868  last_time: 0.4887  data_time: 0.0043  last_data_time: 0.0021   lr: 0.0053946  max_mem: 15030M
[04/15 19:47:30] d2.utils.events INFO:  eta: 3:09:57  iter: 559  total_loss: 0.5851    time: 0.4868  last_time: 0.5397  data_time: 0.0027  last_data_time: 0.0023   lr: 0.0055944  max_mem: 15030M
[04/15 19:47:40] d2.utils.events INFO:  eta: 3:09:47  iter: 579  total_loss: 0.5108    time: 0.4869  last_time: 0.4882  data_time: 0.0027  last_data_time: 0.0021   lr: 0.0057942  max_mem: 15030M
[04/15 19:47:50] d2.utils.events INFO:  eta: 3:09:37  iter: 599  total_loss: 0.4617    time: 0.4868  last_time: 0.5081  data_time: 0.0033  last_data_time: 0.0044   lr: 0.005994  max_mem: 15030M
[04/15 19:48:00] d2.utils.events INFO:  eta: 3:09:27  iter: 619  total_loss: 0.4728    time: 0.4868  last_time: 0.4989  data_time: 0.0025  last_data_time: 0.0023   lr: 0.0061938  max_mem: 15030M
[04/15 19:48:10] d2.utils.events INFO:  eta: 3:09:21  iter: 639  total_loss: 0.515    time: 0.4869  last_time: 0.4747  data_time: 0.0028  last_data_time: 0.0021   lr: 0.0063936  max_mem: 15030M
[04/15 19:48:19] d2.utils.events INFO:  eta: 3:09:10  iter: 659  total_loss: 0.4549    time: 0.4869  last_time: 0.4755  data_time: 0.0021  last_data_time: 0.0020   lr: 0.0065934  max_mem: 15030M
[04/15 19:48:29] d2.utils.events INFO:  eta: 3:09:02  iter: 679  total_loss: 0.4731    time: 0.4870  last_time: 0.4818  data_time: 0.0043  last_data_time: 0.0039   lr: 0.0067932  max_mem: 15030M
[04/15 19:48:39] d2.utils.events INFO:  eta: 3:08:53  iter: 699  total_loss: 0.4436    time: 0.4871  last_time: 0.4956  data_time: 0.0031  last_data_time: 0.0017   lr: 0.006993  max_mem: 15030M
[04/15 19:48:49] d2.utils.events INFO:  eta: 3:08:46  iter: 719  total_loss: 0.3909    time: 0.4872  last_time: 0.4953  data_time: 0.0028  last_data_time: 0.0022   lr: 0.0071928  max_mem: 15030M
[04/15 19:48:59] d2.utils.events INFO:  eta: 3:08:36  iter: 739  total_loss: 0.3897    time: 0.4872  last_time: 0.4837  data_time: 0.0024  last_data_time: 0.0019   lr: 0.0073926  max_mem: 15030M
[04/15 19:49:08] d2.utils.events INFO:  eta: 3:08:34  iter: 759  total_loss: 0.3767    time: 0.4872  last_time: 0.4918  data_time: 0.0054  last_data_time: 0.0025   lr: 0.0075924  max_mem: 15030M
[04/15 19:49:18] d2.utils.events INFO:  eta: 3:08:25  iter: 779  total_loss: 0.3786    time: 0.4874  last_time: 0.4987  data_time: 0.0041  last_data_time: 0.0019   lr: 0.0077922  max_mem: 15030M
[04/15 19:49:28] d2.utils.events INFO:  eta: 3:08:15  iter: 799  total_loss: 0.359    time: 0.4874  last_time: 0.4861  data_time: 0.0073  last_data_time: 0.0020   lr: 0.007992  max_mem: 15030M
[04/15 19:49:38] d2.utils.events INFO:  eta: 3:07:58  iter: 819  total_loss: 0.3446    time: 0.4873  last_time: 0.4831  data_time: 0.0055  last_data_time: 0.0022   lr: 0.0081918  max_mem: 15030M
[04/15 19:49:48] d2.utils.events INFO:  eta: 3:07:56  iter: 839  total_loss: 0.3276    time: 0.4873  last_time: 0.4797  data_time: 0.0043  last_data_time: 0.0019   lr: 0.0083916  max_mem: 15030M
[04/15 19:49:57] d2.utils.events INFO:  eta: 3:07:48  iter: 859  total_loss: 0.3302    time: 0.4874  last_time: 0.4905  data_time: 0.0043  last_data_time: 0.0020   lr: 0.0085914  max_mem: 15030M
[04/15 19:50:07] d2.utils.events INFO:  eta: 3:07:37  iter: 879  total_loss: 0.3482    time: 0.4874  last_time: 0.4831  data_time: 0.0059  last_data_time: 0.0019   lr: 0.0087912  max_mem: 15030M
[04/15 19:50:17] d2.utils.events INFO:  eta: 3:07:28  iter: 899  total_loss: 0.3292    time: 0.4875  last_time: 0.4681  data_time: 0.0068  last_data_time: 0.0019   lr: 0.008991  max_mem: 15030M
[04/15 19:50:27] d2.utils.events INFO:  eta: 3:07:19  iter: 919  total_loss: 0.359    time: 0.4876  last_time: 0.5134  data_time: 0.0052  last_data_time: 0.0022   lr: 0.0091908  max_mem: 15030M
[04/15 19:50:37] d2.utils.events INFO:  eta: 3:07:07  iter: 939  total_loss: 0.3478    time: 0.4876  last_time: 0.4837  data_time: 0.0031  last_data_time: 0.0023   lr: 0.0093906  max_mem: 15030M
[04/15 19:50:47] d2.utils.events INFO:  eta: 3:07:01  iter: 959  total_loss: 0.3729    time: 0.4877  last_time: 0.4899  data_time: 0.0102  last_data_time: 0.0260   lr: 0.0095904  max_mem: 15030M
[04/15 19:50:56] d2.utils.events INFO:  eta: 3:06:58  iter: 979  total_loss: 0.2936    time: 0.4877  last_time: 0.4883  data_time: 0.0043  last_data_time: 0.0022   lr: 0.0097902  max_mem: 15030M
[04/15 19:51:06] d2.utils.events INFO:  eta: 3:06:54  iter: 999  total_loss: 0.3912    time: 0.4879  last_time: 0.4798  data_time: 0.0067  last_data_time: 0.0020   lr: 0.00999  max_mem: 15030M
[04/15 19:51:16] d2.utils.events INFO:  eta: 3:06:47  iter: 1019  total_loss: 0.4345    time: 0.4879  last_time: 0.4971  data_time: 0.0044  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:51:26] d2.utils.events INFO:  eta: 3:06:39  iter: 1039  total_loss: 0.3686    time: 0.4880  last_time: 0.4826  data_time: 0.0061  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 19:51:36] d2.utils.events INFO:  eta: 3:06:30  iter: 1059  total_loss: 0.383    time: 0.4881  last_time: 0.5008  data_time: 0.0056  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 19:51:46] d2.utils.events INFO:  eta: 3:06:17  iter: 1079  total_loss: 0.47    time: 0.4880  last_time: 0.4846  data_time: 0.0052  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 19:51:56] d2.utils.events INFO:  eta: 3:06:10  iter: 1099  total_loss: 0.4174    time: 0.4881  last_time: 0.4918  data_time: 0.0060  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 19:52:05] d2.utils.events INFO:  eta: 3:06:01  iter: 1119  total_loss: 0.5486    time: 0.4881  last_time: 0.4915  data_time: 0.0055  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 19:52:15] d2.utils.events INFO:  eta: 3:05:53  iter: 1139  total_loss: 1.108    time: 0.4882  last_time: 0.4898  data_time: 0.0022  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 19:52:25] d2.utils.events INFO:  eta: 3:05:42  iter: 1159  total_loss: 1.397    time: 0.4882  last_time: 0.4966  data_time: 0.0097  last_data_time: 0.0189   lr: 0.01  max_mem: 15030M
[04/15 19:52:35] d2.utils.events INFO:  eta: 3:05:34  iter: 1179  total_loss: 1.207    time: 0.4882  last_time: 0.4884  data_time: 0.0043  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 19:52:45] d2.utils.events INFO:  eta: 3:05:32  iter: 1199  total_loss: 1.04    time: 0.4884  last_time: 0.5109  data_time: 0.0039  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 19:52:55] d2.utils.events INFO:  eta: 3:05:22  iter: 1219  total_loss: 0.7928    time: 0.4884  last_time: 0.4836  data_time: 0.0032  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 19:53:05] d2.utils.events INFO:  eta: 3:05:13  iter: 1239  total_loss: 0.872    time: 0.4884  last_time: 0.4953  data_time: 0.0085  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 19:53:14] d2.utils.events INFO:  eta: 3:05:04  iter: 1259  total_loss: 0.7157    time: 0.4884  last_time: 0.5050  data_time: 0.0055  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:53:24] d2.utils.events INFO:  eta: 3:04:54  iter: 1279  total_loss: 0.7255    time: 0.4885  last_time: 0.4744  data_time: 0.0049  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:53:34] d2.utils.events INFO:  eta: 3:04:47  iter: 1299  total_loss: 0.6893    time: 0.4885  last_time: 0.4942  data_time: 0.0037  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 19:53:44] d2.utils.events INFO:  eta: 3:04:36  iter: 1319  total_loss: 0.687    time: 0.4884  last_time: 0.5259  data_time: 0.0034  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 19:53:54] d2.utils.events INFO:  eta: 3:04:29  iter: 1339  total_loss: 0.7028    time: 0.4885  last_time: 0.4656  data_time: 0.0133  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:54:04] d2.utils.events INFO:  eta: 3:04:25  iter: 1359  total_loss: 0.5287    time: 0.4885  last_time: 0.4912  data_time: 0.0051  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:54:13] d2.utils.events INFO:  eta: 3:04:15  iter: 1379  total_loss: 0.5597    time: 0.4885  last_time: 0.4754  data_time: 0.0090  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 19:54:23] d2.utils.events INFO:  eta: 3:04:06  iter: 1399  total_loss: 0.5655    time: 0.4885  last_time: 0.4955  data_time: 0.0080  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 19:54:33] d2.utils.events INFO:  eta: 3:03:55  iter: 1419  total_loss: 0.4745    time: 0.4885  last_time: 0.4808  data_time: 0.0045  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 19:54:43] d2.utils.events INFO:  eta: 3:03:47  iter: 1439  total_loss: 0.4465    time: 0.4886  last_time: 0.5084  data_time: 0.0074  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:54:53] d2.utils.events INFO:  eta: 3:03:40  iter: 1459  total_loss: 0.496    time: 0.4886  last_time: 0.4956  data_time: 0.0120  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 19:55:03] d2.utils.events INFO:  eta: 3:03:34  iter: 1479  total_loss: 0.4777    time: 0.4886  last_time: 0.5028  data_time: 0.0051  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 19:55:12] d2.utils.events INFO:  eta: 3:03:23  iter: 1499  total_loss: 0.4428    time: 0.4886  last_time: 0.4845  data_time: 0.0045  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 19:55:22] d2.utils.events INFO:  eta: 3:03:12  iter: 1519  total_loss: 0.4287    time: 0.4886  last_time: 0.4778  data_time: 0.0075  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 19:55:32] d2.utils.events INFO:  eta: 3:03:05  iter: 1539  total_loss: 0.4341    time: 0.4886  last_time: 0.5003  data_time: 0.0069  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 19:55:42] d2.utils.events INFO:  eta: 3:02:58  iter: 1559  total_loss: 0.4131    time: 0.4885  last_time: 0.4713  data_time: 0.0063  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 19:55:51] d2.utils.events INFO:  eta: 3:02:48  iter: 1579  total_loss: 0.3938    time: 0.4885  last_time: 0.4840  data_time: 0.0033  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 19:56:01] d2.utils.events INFO:  eta: 3:02:41  iter: 1599  total_loss: 0.4241    time: 0.4886  last_time: 0.5185  data_time: 0.0085  last_data_time: 0.0144   lr: 0.01  max_mem: 15030M
[04/15 19:56:11] d2.utils.events INFO:  eta: 3:02:31  iter: 1619  total_loss: 0.407    time: 0.4886  last_time: 0.4721  data_time: 0.0078  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:56:21] d2.utils.events INFO:  eta: 3:02:21  iter: 1639  total_loss: 0.3705    time: 0.4886  last_time: 0.5078  data_time: 0.0045  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:56:31] d2.utils.events INFO:  eta: 3:02:13  iter: 1659  total_loss: 0.4482    time: 0.4886  last_time: 0.4821  data_time: 0.0048  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:56:41] d2.utils.events INFO:  eta: 3:02:04  iter: 1679  total_loss: 0.3803    time: 0.4886  last_time: 0.4861  data_time: 0.0062  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 19:56:51] d2.utils.events INFO:  eta: 3:01:53  iter: 1699  total_loss: 0.3998    time: 0.4886  last_time: 0.4839  data_time: 0.0042  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 19:57:00] d2.utils.events INFO:  eta: 3:01:43  iter: 1719  total_loss: 0.3496    time: 0.4887  last_time: 0.4828  data_time: 0.0070  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 19:57:10] d2.utils.events INFO:  eta: 3:01:34  iter: 1739  total_loss: 0.4021    time: 0.4887  last_time: 0.4923  data_time: 0.0033  last_data_time: 0.0259   lr: 0.01  max_mem: 15030M
[04/15 19:57:20] d2.utils.events INFO:  eta: 3:01:22  iter: 1759  total_loss: 0.3589    time: 0.4887  last_time: 0.4885  data_time: 0.0061  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 19:57:30] d2.utils.events INFO:  eta: 3:01:12  iter: 1779  total_loss: 0.4142    time: 0.4887  last_time: 0.5016  data_time: 0.0035  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 19:57:40] d2.utils.events INFO:  eta: 3:01:03  iter: 1799  total_loss: 0.3736    time: 0.4887  last_time: 0.5028  data_time: 0.0040  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 19:57:49] d2.utils.events INFO:  eta: 3:00:55  iter: 1819  total_loss: 0.3994    time: 0.4887  last_time: 0.4882  data_time: 0.0072  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 19:57:59] d2.utils.events INFO:  eta: 3:00:46  iter: 1839  total_loss: 0.4164    time: 0.4886  last_time: 0.4687  data_time: 0.0052  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:58:09] d2.utils.events INFO:  eta: 3:00:42  iter: 1859  total_loss: 0.3682    time: 0.4887  last_time: 0.5039  data_time: 0.0055  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 19:58:19] d2.utils.events INFO:  eta: 3:00:33  iter: 1879  total_loss: 0.3389    time: 0.4886  last_time: 0.4874  data_time: 0.0052  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 19:58:29] d2.utils.events INFO:  eta: 3:00:24  iter: 1899  total_loss: 0.347    time: 0.4886  last_time: 0.4867  data_time: 0.0021  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 19:58:39] d2.utils.events INFO:  eta: 3:00:13  iter: 1919  total_loss: 0.3889    time: 0.4886  last_time: 0.4808  data_time: 0.0079  last_data_time: 0.0188   lr: 0.01  max_mem: 15030M
[04/15 19:58:48] d2.utils.events INFO:  eta: 3:00:04  iter: 1939  total_loss: 0.3062    time: 0.4886  last_time: 0.4716  data_time: 0.0051  last_data_time: 0.0168   lr: 0.01  max_mem: 15030M
[04/15 19:58:58] d2.utils.events INFO:  eta: 2:59:53  iter: 1959  total_loss: 0.3838    time: 0.4886  last_time: 0.5040  data_time: 0.0057  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 19:59:08] d2.utils.events INFO:  eta: 2:59:45  iter: 1979  total_loss: 0.4178    time: 0.4886  last_time: 0.4900  data_time: 0.0080  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 19:59:18] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 19:59:29] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 19:59:29] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 19:59:29] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 19:59:29] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 19:59:29] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 19:59:29] d2.utils.events INFO:  eta: 2:59:35  iter: 1999  total_loss: 0.3173    time: 0.4886  last_time: 0.4919  data_time: 0.0077  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 19:59:39] d2.utils.events INFO:  eta: 2:59:25  iter: 2019  total_loss: 0.3155    time: 0.4886  last_time: 0.4817  data_time: 0.0043  last_data_time: 0.0182   lr: 0.01  max_mem: 15030M
[04/15 19:59:48] d2.utils.events INFO:  eta: 2:59:16  iter: 2039  total_loss: 0.3317    time: 0.4886  last_time: 0.4688  data_time: 0.0055  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 19:59:58] d2.utils.events INFO:  eta: 2:59:05  iter: 2059  total_loss: 0.3456    time: 0.4885  last_time: 0.4847  data_time: 0.0049  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:00:08] d2.utils.events INFO:  eta: 2:58:56  iter: 2079  total_loss: 0.3392    time: 0.4886  last_time: 0.5042  data_time: 0.0070  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:00:18] d2.utils.events INFO:  eta: 2:58:46  iter: 2099  total_loss: 0.345    time: 0.4886  last_time: 0.4945  data_time: 0.0079  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:00:28] d2.utils.events INFO:  eta: 2:58:36  iter: 2119  total_loss: 0.3409    time: 0.4886  last_time: 0.4904  data_time: 0.0062  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:00:37] d2.utils.events INFO:  eta: 2:58:25  iter: 2139  total_loss: 0.3341    time: 0.4886  last_time: 0.4448  data_time: 0.0104  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:00:47] d2.utils.events INFO:  eta: 2:58:15  iter: 2159  total_loss: 0.2955    time: 0.4886  last_time: 0.5186  data_time: 0.0044  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:00:57] d2.utils.events INFO:  eta: 2:58:06  iter: 2179  total_loss: 0.3431    time: 0.4886  last_time: 0.4863  data_time: 0.0049  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 20:01:07] d2.utils.events INFO:  eta: 2:57:54  iter: 2199  total_loss: 0.2953    time: 0.4886  last_time: 0.5190  data_time: 0.0041  last_data_time: 0.0313   lr: 0.01  max_mem: 15030M
[04/15 20:01:17] d2.utils.events INFO:  eta: 2:57:42  iter: 2219  total_loss: 0.328    time: 0.4886  last_time: 0.4886  data_time: 0.0067  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:01:27] d2.utils.events INFO:  eta: 2:57:31  iter: 2239  total_loss: 0.3036    time: 0.4886  last_time: 0.4854  data_time: 0.0070  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:01:36] d2.utils.events INFO:  eta: 2:57:19  iter: 2259  total_loss: 0.2806    time: 0.4886  last_time: 0.4885  data_time: 0.0031  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:01:46] d2.utils.events INFO:  eta: 2:57:08  iter: 2279  total_loss: 0.293    time: 0.4886  last_time: 0.5011  data_time: 0.0049  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:01:56] d2.utils.events INFO:  eta: 2:57:02  iter: 2299  total_loss: 0.3337    time: 0.4886  last_time: 0.4912  data_time: 0.0097  last_data_time: 0.0173   lr: 0.01  max_mem: 15030M
[04/15 20:02:06] d2.utils.events INFO:  eta: 2:56:57  iter: 2319  total_loss: 0.3146    time: 0.4886  last_time: 0.5079  data_time: 0.0080  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:02:16] d2.utils.events INFO:  eta: 2:56:41  iter: 2339  total_loss: 0.3235    time: 0.4886  last_time: 0.4831  data_time: 0.0044  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 20:02:25] d2.utils.events INFO:  eta: 2:56:24  iter: 2359  total_loss: 0.3344    time: 0.4886  last_time: 0.4796  data_time: 0.0030  last_data_time: 0.0088   lr: 0.01  max_mem: 15030M
[04/15 20:02:35] d2.utils.events INFO:  eta: 2:56:21  iter: 2379  total_loss: 0.2681    time: 0.4887  last_time: 0.5046  data_time: 0.0034  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:02:45] d2.utils.events INFO:  eta: 2:56:10  iter: 2399  total_loss: 0.2873    time: 0.4887  last_time: 0.4916  data_time: 0.0036  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:02:55] d2.utils.events INFO:  eta: 2:56:02  iter: 2419  total_loss: 0.2793    time: 0.4887  last_time: 0.5000  data_time: 0.0076  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:03:05] d2.utils.events INFO:  eta: 2:55:52  iter: 2439  total_loss: 0.3253    time: 0.4888  last_time: 0.5038  data_time: 0.0068  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 20:03:15] d2.utils.events INFO:  eta: 2:55:41  iter: 2459  total_loss: 0.2881    time: 0.4888  last_time: 0.5005  data_time: 0.0043  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:03:24] d2.utils.events INFO:  eta: 2:55:25  iter: 2479  total_loss: 0.2843    time: 0.4887  last_time: 0.4813  data_time: 0.0060  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:03:34] d2.utils.events INFO:  eta: 2:55:14  iter: 2499  total_loss: 0.3088    time: 0.4887  last_time: 0.4782  data_time: 0.0060  last_data_time: 0.0189   lr: 0.01  max_mem: 15030M
[04/15 20:03:44] d2.utils.events INFO:  eta: 2:55:04  iter: 2519  total_loss: 0.2687    time: 0.4887  last_time: 0.4884  data_time: 0.0041  last_data_time: 0.0080   lr: 0.01  max_mem: 15030M
[04/15 20:03:54] d2.utils.events INFO:  eta: 2:54:55  iter: 2539  total_loss: 0.2644    time: 0.4887  last_time: 0.4639  data_time: 0.0034  last_data_time: 0.0026   lr: 0.01  max_mem: 15030M
[04/15 20:04:04] d2.utils.events INFO:  eta: 2:54:46  iter: 2559  total_loss: 0.2865    time: 0.4887  last_time: 0.4801  data_time: 0.0079  last_data_time: 0.0029   lr: 0.01  max_mem: 15030M
[04/15 20:04:13] d2.utils.events INFO:  eta: 2:54:38  iter: 2579  total_loss: 0.2793    time: 0.4887  last_time: 0.4780  data_time: 0.0059  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:04:23] d2.utils.events INFO:  eta: 2:54:26  iter: 2599  total_loss: 0.2482    time: 0.4887  last_time: 0.4897  data_time: 0.0049  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:04:33] d2.utils.events INFO:  eta: 2:54:16  iter: 2619  total_loss: 0.2521    time: 0.4887  last_time: 0.5006  data_time: 0.0041  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:04:43] d2.utils.events INFO:  eta: 2:54:09  iter: 2639  total_loss: 0.2683    time: 0.4887  last_time: 0.4963  data_time: 0.0046  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:04:53] d2.utils.events INFO:  eta: 2:53:59  iter: 2659  total_loss: 0.2759    time: 0.4887  last_time: 0.4932  data_time: 0.0046  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:05:03] d2.utils.events INFO:  eta: 2:53:48  iter: 2679  total_loss: 0.2809    time: 0.4887  last_time: 0.5074  data_time: 0.0036  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:05:12] d2.utils.events INFO:  eta: 2:53:37  iter: 2699  total_loss: 0.2622    time: 0.4887  last_time: 0.5120  data_time: 0.0031  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:05:22] d2.utils.events INFO:  eta: 2:53:27  iter: 2719  total_loss: 0.2807    time: 0.4888  last_time: 0.5073  data_time: 0.0030  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:05:32] d2.utils.events INFO:  eta: 2:53:17  iter: 2739  total_loss: 0.2752    time: 0.4888  last_time: 0.4919  data_time: 0.0028  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:05:42] d2.utils.events INFO:  eta: 2:53:07  iter: 2759  total_loss: 0.2538    time: 0.4888  last_time: 0.4824  data_time: 0.0081  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:05:52] d2.utils.events INFO:  eta: 2:52:57  iter: 2779  total_loss: 0.2416    time: 0.4888  last_time: 0.5162  data_time: 0.0036  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:06:01] d2.utils.events INFO:  eta: 2:52:47  iter: 2799  total_loss: 0.2289    time: 0.4888  last_time: 0.5092  data_time: 0.0080  last_data_time: 0.0429   lr: 0.01  max_mem: 15030M
[04/15 20:06:11] d2.utils.events INFO:  eta: 2:52:34  iter: 2819  total_loss: 0.2597    time: 0.4887  last_time: 0.4877  data_time: 0.0024  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:06:21] d2.utils.events INFO:  eta: 2:52:25  iter: 2839  total_loss: 0.3038    time: 0.4887  last_time: 0.4999  data_time: 0.0033  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:06:31] d2.utils.events INFO:  eta: 2:52:11  iter: 2859  total_loss: 0.2343    time: 0.4887  last_time: 0.4727  data_time: 0.0031  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:06:41] d2.utils.events INFO:  eta: 2:52:05  iter: 2879  total_loss: 0.2655    time: 0.4888  last_time: 0.4881  data_time: 0.0038  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:06:50] d2.utils.events INFO:  eta: 2:51:57  iter: 2899  total_loss: 0.2621    time: 0.4888  last_time: 0.5249  data_time: 0.0050  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:07:00] d2.utils.events INFO:  eta: 2:51:45  iter: 2919  total_loss: 0.2505    time: 0.4888  last_time: 0.4759  data_time: 0.0041  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:07:10] d2.utils.events INFO:  eta: 2:51:33  iter: 2939  total_loss: 0.2828    time: 0.4887  last_time: 0.4889  data_time: 0.0055  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:07:20] d2.utils.events INFO:  eta: 2:51:25  iter: 2959  total_loss: 0.2517    time: 0.4887  last_time: 0.4865  data_time: 0.0031  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:07:30] d2.utils.events INFO:  eta: 2:51:14  iter: 2979  total_loss: 0.2407    time: 0.4888  last_time: 0.4969  data_time: 0.0072  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:07:39] d2.utils.events INFO:  eta: 2:51:01  iter: 2999  total_loss: 0.2184    time: 0.4887  last_time: 0.4719  data_time: 0.0026  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:07:49] d2.utils.events INFO:  eta: 2:50:50  iter: 3019  total_loss: 0.2449    time: 0.4887  last_time: 0.4895  data_time: 0.0046  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:07:59] d2.utils.events INFO:  eta: 2:50:42  iter: 3039  total_loss: 0.2284    time: 0.4887  last_time: 0.4962  data_time: 0.0030  last_data_time: 0.0026   lr: 0.01  max_mem: 15030M
[04/15 20:08:09] d2.utils.events INFO:  eta: 2:50:33  iter: 3059  total_loss: 0.2193    time: 0.4887  last_time: 0.4850  data_time: 0.0053  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:08:19] d2.utils.events INFO:  eta: 2:50:22  iter: 3079  total_loss: 0.2489    time: 0.4887  last_time: 0.4910  data_time: 0.0058  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:08:28] d2.utils.events INFO:  eta: 2:50:11  iter: 3099  total_loss: 0.2472    time: 0.4887  last_time: 0.4964  data_time: 0.0038  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:08:38] d2.utils.events INFO:  eta: 2:50:03  iter: 3119  total_loss: 0.2579    time: 0.4887  last_time: 0.4954  data_time: 0.0082  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:08:48] d2.utils.events INFO:  eta: 2:49:54  iter: 3139  total_loss: 0.2431    time: 0.4887  last_time: 0.5083  data_time: 0.0060  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:08:58] d2.utils.events INFO:  eta: 2:49:44  iter: 3159  total_loss: 0.2539    time: 0.4887  last_time: 0.4946  data_time: 0.0029  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:09:08] d2.utils.events INFO:  eta: 2:49:34  iter: 3179  total_loss: 0.2488    time: 0.4887  last_time: 0.4801  data_time: 0.0021  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:09:18] d2.utils.events INFO:  eta: 2:49:24  iter: 3199  total_loss: 0.2353    time: 0.4887  last_time: 0.4802  data_time: 0.0039  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:09:27] d2.utils.events INFO:  eta: 2:49:19  iter: 3219  total_loss: 0.2605    time: 0.4887  last_time: 0.5063  data_time: 0.0029  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:09:37] d2.utils.events INFO:  eta: 2:49:09  iter: 3239  total_loss: 0.2442    time: 0.4887  last_time: 0.5054  data_time: 0.0077  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:09:47] d2.utils.events INFO:  eta: 2:48:57  iter: 3259  total_loss: 0.2192    time: 0.4887  last_time: 0.4831  data_time: 0.0071  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:09:57] d2.utils.events INFO:  eta: 2:48:48  iter: 3279  total_loss: 0.2477    time: 0.4888  last_time: 0.4910  data_time: 0.0055  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:10:07] d2.utils.events INFO:  eta: 2:48:37  iter: 3299  total_loss: 0.2347    time: 0.4888  last_time: 0.4850  data_time: 0.0055  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:10:17] d2.utils.events INFO:  eta: 2:48:30  iter: 3319  total_loss: 0.2307    time: 0.4888  last_time: 0.4878  data_time: 0.0056  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:10:27] d2.utils.events INFO:  eta: 2:48:20  iter: 3339  total_loss: 0.2169    time: 0.4888  last_time: 0.4819  data_time: 0.0083  last_data_time: 0.0397   lr: 0.01  max_mem: 15030M
[04/15 20:10:36] d2.utils.events INFO:  eta: 2:48:13  iter: 3359  total_loss: 0.2175    time: 0.4888  last_time: 0.4833  data_time: 0.0046  last_data_time: 0.0033   lr: 0.01  max_mem: 15030M
[04/15 20:10:46] d2.utils.events INFO:  eta: 2:47:59  iter: 3379  total_loss: 0.2644    time: 0.4888  last_time: 0.4658  data_time: 0.0109  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:10:56] d2.utils.events INFO:  eta: 2:47:46  iter: 3399  total_loss: 0.2887    time: 0.4888  last_time: 0.4824  data_time: 0.0063  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:11:06] d2.utils.events INFO:  eta: 2:47:36  iter: 3419  total_loss: 0.2248    time: 0.4888  last_time: 0.4853  data_time: 0.0025  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:11:16] d2.utils.events INFO:  eta: 2:47:26  iter: 3439  total_loss: 0.2182    time: 0.4888  last_time: 0.4836  data_time: 0.0061  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:11:26] d2.utils.events INFO:  eta: 2:47:17  iter: 3459  total_loss: 0.2404    time: 0.4888  last_time: 0.4786  data_time: 0.0043  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:11:35] d2.utils.events INFO:  eta: 2:47:07  iter: 3479  total_loss: 0.2426    time: 0.4888  last_time: 0.4880  data_time: 0.0076  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:11:45] d2.utils.events INFO:  eta: 2:46:57  iter: 3499  total_loss: 0.2393    time: 0.4888  last_time: 0.4700  data_time: 0.0071  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:11:55] d2.utils.events INFO:  eta: 2:46:50  iter: 3519  total_loss: 0.2712    time: 0.4888  last_time: 0.4846  data_time: 0.0090  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:12:05] d2.utils.events INFO:  eta: 2:46:43  iter: 3539  total_loss: 0.2221    time: 0.4888  last_time: 0.4800  data_time: 0.0036  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:12:15] d2.utils.events INFO:  eta: 2:46:35  iter: 3559  total_loss: 0.2431    time: 0.4889  last_time: 0.4984  data_time: 0.0022  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:12:25] d2.utils.events INFO:  eta: 2:46:26  iter: 3579  total_loss: 0.2471    time: 0.4889  last_time: 0.4931  data_time: 0.0031  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:12:34] d2.utils.events INFO:  eta: 2:46:16  iter: 3599  total_loss: 0.2345    time: 0.4889  last_time: 0.5016  data_time: 0.0067  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:12:44] d2.utils.events INFO:  eta: 2:46:07  iter: 3619  total_loss: 0.2378    time: 0.4889  last_time: 0.4923  data_time: 0.0041  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:12:54] d2.utils.events INFO:  eta: 2:45:57  iter: 3639  total_loss: 0.2347    time: 0.4889  last_time: 0.4965  data_time: 0.0044  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:13:04] d2.utils.events INFO:  eta: 2:45:46  iter: 3659  total_loss: 0.2213    time: 0.4889  last_time: 0.4951  data_time: 0.0068  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 20:13:14] d2.utils.events INFO:  eta: 2:45:34  iter: 3679  total_loss: 0.2182    time: 0.4889  last_time: 0.4863  data_time: 0.0089  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 20:13:24] d2.utils.events INFO:  eta: 2:45:26  iter: 3699  total_loss: 0.2412    time: 0.4889  last_time: 0.4876  data_time: 0.0041  last_data_time: 0.0037   lr: 0.01  max_mem: 15030M
[04/15 20:13:33] d2.utils.events INFO:  eta: 2:45:15  iter: 3719  total_loss: 0.2674    time: 0.4889  last_time: 0.4913  data_time: 0.0026  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:13:43] d2.utils.events INFO:  eta: 2:45:07  iter: 3739  total_loss: 0.2044    time: 0.4889  last_time: 0.4963  data_time: 0.0068  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:13:53] d2.utils.events INFO:  eta: 2:44:57  iter: 3759  total_loss: 0.2188    time: 0.4889  last_time: 0.4992  data_time: 0.0074  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:14:03] d2.utils.events INFO:  eta: 2:44:47  iter: 3779  total_loss: 0.2299    time: 0.4889  last_time: 0.4720  data_time: 0.0072  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:14:12] d2.utils.events INFO:  eta: 2:44:38  iter: 3799  total_loss: 0.2543    time: 0.4889  last_time: 0.4732  data_time: 0.0034  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:14:22] d2.utils.events INFO:  eta: 2:44:29  iter: 3819  total_loss: 0.2089    time: 0.4889  last_time: 0.5207  data_time: 0.0039  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:14:32] d2.utils.events INFO:  eta: 2:44:19  iter: 3839  total_loss: 0.2301    time: 0.4889  last_time: 0.4980  data_time: 0.0072  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:14:42] d2.utils.events INFO:  eta: 2:44:09  iter: 3859  total_loss: 0.2131    time: 0.4889  last_time: 0.4778  data_time: 0.0029  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:14:52] d2.utils.events INFO:  eta: 2:44:00  iter: 3879  total_loss: 0.2357    time: 0.4889  last_time: 0.4893  data_time: 0.0050  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:15:02] d2.utils.events INFO:  eta: 2:43:49  iter: 3899  total_loss: 0.191    time: 0.4889  last_time: 0.4854  data_time: 0.0039  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:15:11] d2.utils.events INFO:  eta: 2:43:38  iter: 3919  total_loss: 0.2204    time: 0.4888  last_time: 0.4588  data_time: 0.0045  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:15:21] d2.utils.events INFO:  eta: 2:43:30  iter: 3939  total_loss: 0.2038    time: 0.4889  last_time: 0.4948  data_time: 0.0036  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:15:31] d2.utils.events INFO:  eta: 2:43:20  iter: 3959  total_loss: 0.241    time: 0.4889  last_time: 0.4949  data_time: 0.0043  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:15:41] d2.utils.events INFO:  eta: 2:43:07  iter: 3979  total_loss: 0.217    time: 0.4889  last_time: 0.4998  data_time: 0.0058  last_data_time: 0.0377   lr: 0.01  max_mem: 15030M
[04/15 20:15:51] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 20:15:52] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 20:15:52] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 20:15:52] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 20:15:52] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 20:15:52] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 20:15:52] d2.utils.events INFO:  eta: 2:43:00  iter: 3999  total_loss: 0.226    time: 0.4889  last_time: 0.4769  data_time: 0.0043  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:16:02] d2.utils.events INFO:  eta: 2:42:51  iter: 4019  total_loss: 0.2131    time: 0.4889  last_time: 0.4867  data_time: 0.0066  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:16:12] d2.utils.events INFO:  eta: 2:42:39  iter: 4039  total_loss: 0.2044    time: 0.4889  last_time: 0.4809  data_time: 0.0038  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:16:21] d2.utils.events INFO:  eta: 2:42:32  iter: 4059  total_loss: 0.2338    time: 0.4889  last_time: 0.4897  data_time: 0.0039  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:16:31] d2.utils.events INFO:  eta: 2:42:23  iter: 4079  total_loss: 0.2315    time: 0.4889  last_time: 0.5021  data_time: 0.0058  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:16:41] d2.utils.events INFO:  eta: 2:42:13  iter: 4099  total_loss: 0.2171    time: 0.4889  last_time: 0.4824  data_time: 0.0076  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:16:51] d2.utils.events INFO:  eta: 2:42:02  iter: 4119  total_loss: 0.1948    time: 0.4889  last_time: 0.4912  data_time: 0.0052  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:17:01] d2.utils.events INFO:  eta: 2:41:50  iter: 4139  total_loss: 0.2269    time: 0.4889  last_time: 0.4722  data_time: 0.0070  last_data_time: 0.0185   lr: 0.01  max_mem: 15030M
[04/15 20:17:11] d2.utils.events INFO:  eta: 2:41:42  iter: 4159  total_loss: 0.2278    time: 0.4889  last_time: 0.5008  data_time: 0.0066  last_data_time: 0.0243   lr: 0.01  max_mem: 15030M
[04/15 20:17:20] d2.utils.events INFO:  eta: 2:41:32  iter: 4179  total_loss: 0.2185    time: 0.4889  last_time: 0.4818  data_time: 0.0021  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:17:30] d2.utils.events INFO:  eta: 2:41:22  iter: 4199  total_loss: 0.2121    time: 0.4889  last_time: 0.4392  data_time: 0.0082  last_data_time: 0.0135   lr: 0.01  max_mem: 15030M
[04/15 20:17:40] d2.utils.events INFO:  eta: 2:41:05  iter: 4219  total_loss: 0.2223    time: 0.4889  last_time: 0.4825  data_time: 0.0045  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:17:50] d2.utils.events INFO:  eta: 2:40:56  iter: 4239  total_loss: 0.2027    time: 0.4889  last_time: 0.4936  data_time: 0.0076  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:18:00] d2.utils.events INFO:  eta: 2:40:49  iter: 4259  total_loss: 0.2341    time: 0.4889  last_time: 0.5019  data_time: 0.0060  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:18:09] d2.utils.events INFO:  eta: 2:40:41  iter: 4279  total_loss: 0.1895    time: 0.4889  last_time: 0.4631  data_time: 0.0072  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:18:19] d2.utils.events INFO:  eta: 2:40:25  iter: 4299  total_loss: 0.2092    time: 0.4889  last_time: 0.4960  data_time: 0.0052  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:18:29] d2.utils.events INFO:  eta: 2:40:17  iter: 4319  total_loss: 0.2298    time: 0.4889  last_time: 0.4895  data_time: 0.0053  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:18:39] d2.utils.events INFO:  eta: 2:40:06  iter: 4339  total_loss: 0.2223    time: 0.4889  last_time: 0.4877  data_time: 0.0054  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:18:49] d2.utils.events INFO:  eta: 2:40:00  iter: 4359  total_loss: 0.2006    time: 0.4890  last_time: 0.4964  data_time: 0.0078  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:18:59] d2.utils.events INFO:  eta: 2:39:51  iter: 4379  total_loss: 0.2093    time: 0.4890  last_time: 0.4874  data_time: 0.0021  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:19:08] d2.utils.events INFO:  eta: 2:39:43  iter: 4399  total_loss: 0.2218    time: 0.4890  last_time: 0.4952  data_time: 0.0051  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:19:18] d2.utils.events INFO:  eta: 2:39:34  iter: 4419  total_loss: 0.2234    time: 0.4889  last_time: 0.4777  data_time: 0.0063  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:19:28] d2.utils.events INFO:  eta: 2:39:20  iter: 4439  total_loss: 0.2167    time: 0.4889  last_time: 0.4937  data_time: 0.0066  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:19:38] d2.utils.events INFO:  eta: 2:39:12  iter: 4459  total_loss: 0.193    time: 0.4889  last_time: 0.4995  data_time: 0.0069  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:19:48] d2.utils.events INFO:  eta: 2:39:00  iter: 4479  total_loss: 0.1961    time: 0.4889  last_time: 0.5061  data_time: 0.0105  last_data_time: 0.0259   lr: 0.01  max_mem: 15030M
[04/15 20:19:58] d2.utils.events INFO:  eta: 2:38:56  iter: 4499  total_loss: 0.1827    time: 0.4890  last_time: 0.5057  data_time: 0.0071  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:20:07] d2.utils.events INFO:  eta: 2:38:43  iter: 4519  total_loss: 0.2032    time: 0.4890  last_time: 0.4829  data_time: 0.0046  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 20:20:17] d2.utils.events INFO:  eta: 2:38:29  iter: 4539  total_loss: 0.2015    time: 0.4889  last_time: 0.4932  data_time: 0.0030  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:20:27] d2.utils.events INFO:  eta: 2:38:20  iter: 4559  total_loss: 0.1995    time: 0.4890  last_time: 0.4739  data_time: 0.0055  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:20:37] d2.utils.events INFO:  eta: 2:38:06  iter: 4579  total_loss: 0.202    time: 0.4889  last_time: 0.4977  data_time: 0.0029  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:20:46] d2.utils.events INFO:  eta: 2:37:56  iter: 4599  total_loss: 0.1994    time: 0.4889  last_time: 0.4848  data_time: 0.0080  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:20:56] d2.utils.events INFO:  eta: 2:37:44  iter: 4619  total_loss: 0.1905    time: 0.4889  last_time: 0.5034  data_time: 0.0080  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:21:06] d2.utils.events INFO:  eta: 2:37:34  iter: 4639  total_loss: 0.2069    time: 0.4889  last_time: 0.4927  data_time: 0.0095  last_data_time: 0.0190   lr: 0.01  max_mem: 15030M
[04/15 20:21:16] d2.utils.events INFO:  eta: 2:37:25  iter: 4659  total_loss: 0.1826    time: 0.4889  last_time: 0.4878  data_time: 0.0029  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:21:26] d2.utils.events INFO:  eta: 2:37:15  iter: 4679  total_loss: 0.2063    time: 0.4889  last_time: 0.4988  data_time: 0.0050  last_data_time: 0.0145   lr: 0.01  max_mem: 15030M
[04/15 20:21:36] d2.utils.events INFO:  eta: 2:37:05  iter: 4699  total_loss: 0.2052    time: 0.4889  last_time: 0.4937  data_time: 0.0050  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:21:45] d2.utils.events INFO:  eta: 2:36:56  iter: 4719  total_loss: 0.2036    time: 0.4889  last_time: 0.4902  data_time: 0.0036  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:21:55] d2.utils.events INFO:  eta: 2:36:46  iter: 4739  total_loss: 0.2179    time: 0.4889  last_time: 0.4933  data_time: 0.0097  last_data_time: 0.0281   lr: 0.01  max_mem: 15030M
[04/15 20:22:05] d2.utils.events INFO:  eta: 2:36:37  iter: 4759  total_loss: 0.2175    time: 0.4889  last_time: 0.5040  data_time: 0.0051  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:22:15] d2.utils.events INFO:  eta: 2:36:28  iter: 4779  total_loss: 0.1902    time: 0.4890  last_time: 0.4995  data_time: 0.0030  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:22:25] d2.utils.events INFO:  eta: 2:36:19  iter: 4799  total_loss: 0.1846    time: 0.4890  last_time: 0.4777  data_time: 0.0067  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:22:35] d2.utils.events INFO:  eta: 2:36:09  iter: 4819  total_loss: 0.2187    time: 0.4890  last_time: 0.4768  data_time: 0.0066  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:22:44] d2.utils.events INFO:  eta: 2:36:01  iter: 4839  total_loss: 0.2073    time: 0.4890  last_time: 0.5040  data_time: 0.0055  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:22:54] d2.utils.events INFO:  eta: 2:35:54  iter: 4859  total_loss: 0.2278    time: 0.4890  last_time: 0.5012  data_time: 0.0048  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:23:04] d2.utils.events INFO:  eta: 2:35:42  iter: 4879  total_loss: 0.2066    time: 0.4890  last_time: 0.4841  data_time: 0.0037  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:23:14] d2.utils.events INFO:  eta: 2:35:31  iter: 4899  total_loss: 0.1865    time: 0.4890  last_time: 0.4986  data_time: 0.0037  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:23:24] d2.utils.events INFO:  eta: 2:35:26  iter: 4919  total_loss: 0.1881    time: 0.4890  last_time: 0.4815  data_time: 0.0040  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:23:34] d2.utils.events INFO:  eta: 2:35:18  iter: 4939  total_loss: 0.2028    time: 0.4890  last_time: 0.4920  data_time: 0.0062  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:23:44] d2.utils.events INFO:  eta: 2:35:11  iter: 4959  total_loss: 0.2057    time: 0.4890  last_time: 0.4848  data_time: 0.0058  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:23:53] d2.utils.events INFO:  eta: 2:35:01  iter: 4979  total_loss: 0.2099    time: 0.4890  last_time: 0.4881  data_time: 0.0036  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:24:03] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/r50/model_0004999.pth
[04/15 20:24:04] d2.utils.events INFO:  eta: 2:34:50  iter: 4999  total_loss: 0.2195    time: 0.4890  last_time: 0.4975  data_time: 0.0117  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:24:13] d2.utils.events INFO:  eta: 2:34:36  iter: 5019  total_loss: 0.1924    time: 0.4889  last_time: 0.5039  data_time: 0.0045  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:24:23] d2.utils.events INFO:  eta: 2:34:31  iter: 5039  total_loss: 0.2281    time: 0.4890  last_time: 0.4942  data_time: 0.0081  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:24:33] d2.utils.events INFO:  eta: 2:34:19  iter: 5059  total_loss: 0.1708    time: 0.4890  last_time: 0.4801  data_time: 0.0039  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:24:43] d2.utils.events INFO:  eta: 2:34:03  iter: 5079  total_loss: 0.1921    time: 0.4890  last_time: 0.4831  data_time: 0.0043  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:24:52] d2.utils.events INFO:  eta: 2:33:55  iter: 5099  total_loss: 0.2027    time: 0.4890  last_time: 0.5009  data_time: 0.0119  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:25:02] d2.utils.events INFO:  eta: 2:33:47  iter: 5119  total_loss: 0.1902    time: 0.4890  last_time: 0.4815  data_time: 0.0038  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:25:12] d2.utils.events INFO:  eta: 2:33:36  iter: 5139  total_loss: 0.1881    time: 0.4889  last_time: 0.4722  data_time: 0.0045  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:25:22] d2.utils.events INFO:  eta: 2:33:27  iter: 5159  total_loss: 0.2069    time: 0.4890  last_time: 0.4679  data_time: 0.0061  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:25:32] d2.utils.events INFO:  eta: 2:33:17  iter: 5179  total_loss: 0.1944    time: 0.4890  last_time: 0.5332  data_time: 0.0030  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:25:42] d2.utils.events INFO:  eta: 2:33:08  iter: 5199  total_loss: 0.1837    time: 0.4890  last_time: 0.5036  data_time: 0.0082  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:25:51] d2.utils.events INFO:  eta: 2:33:01  iter: 5219  total_loss: 0.1791    time: 0.4890  last_time: 0.5286  data_time: 0.0044  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:26:01] d2.utils.events INFO:  eta: 2:32:52  iter: 5239  total_loss: 0.1918    time: 0.4890  last_time: 0.4907  data_time: 0.0061  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:26:11] d2.utils.events INFO:  eta: 2:32:40  iter: 5259  total_loss: 0.1882    time: 0.4890  last_time: 0.4754  data_time: 0.0031  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:26:21] d2.utils.events INFO:  eta: 2:32:29  iter: 5279  total_loss: 0.1913    time: 0.4890  last_time: 0.5014  data_time: 0.0066  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 20:26:31] d2.utils.events INFO:  eta: 2:32:23  iter: 5299  total_loss: 0.1959    time: 0.4890  last_time: 0.4785  data_time: 0.0031  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:26:41] d2.utils.events INFO:  eta: 2:32:10  iter: 5319  total_loss: 0.1999    time: 0.4890  last_time: 0.4944  data_time: 0.0116  last_data_time: 0.0257   lr: 0.01  max_mem: 15030M
[04/15 20:26:50] d2.utils.events INFO:  eta: 2:32:03  iter: 5339  total_loss: 0.2083    time: 0.4890  last_time: 0.4767  data_time: 0.0040  last_data_time: 0.0146   lr: 0.01  max_mem: 15030M
[04/15 20:27:00] d2.utils.events INFO:  eta: 2:31:50  iter: 5359  total_loss: 0.1879    time: 0.4890  last_time: 0.5158  data_time: 0.0033  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:27:10] d2.utils.events INFO:  eta: 2:31:43  iter: 5379  total_loss: 0.2017    time: 0.4890  last_time: 0.5023  data_time: 0.0090  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 20:27:20] d2.utils.events INFO:  eta: 2:31:33  iter: 5399  total_loss: 0.1933    time: 0.4890  last_time: 0.4745  data_time: 0.0099  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:27:30] d2.utils.events INFO:  eta: 2:31:24  iter: 5419  total_loss: 0.1823    time: 0.4890  last_time: 0.5152  data_time: 0.0041  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:27:40] d2.utils.events INFO:  eta: 2:31:15  iter: 5439  total_loss: 0.1969    time: 0.4890  last_time: 0.5131  data_time: 0.0055  last_data_time: 0.0251   lr: 0.01  max_mem: 15030M
[04/15 20:27:49] d2.utils.events INFO:  eta: 2:31:04  iter: 5459  total_loss: 0.1943    time: 0.4890  last_time: 0.4800  data_time: 0.0029  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:27:59] d2.utils.events INFO:  eta: 2:30:53  iter: 5479  total_loss: 0.1924    time: 0.4890  last_time: 0.4679  data_time: 0.0056  last_data_time: 0.0047   lr: 0.01  max_mem: 15030M
[04/15 20:28:09] d2.utils.events INFO:  eta: 2:30:41  iter: 5499  total_loss: 0.1684    time: 0.4890  last_time: 0.4891  data_time: 0.0051  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:28:19] d2.utils.events INFO:  eta: 2:30:35  iter: 5519  total_loss: 0.1935    time: 0.4890  last_time: 0.4768  data_time: 0.0033  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:28:29] d2.utils.events INFO:  eta: 2:30:27  iter: 5539  total_loss: 0.1841    time: 0.4890  last_time: 0.4851  data_time: 0.0095  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:28:38] d2.utils.events INFO:  eta: 2:30:16  iter: 5559  total_loss: 0.1981    time: 0.4890  last_time: 0.4833  data_time: 0.0037  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:28:48] d2.utils.events INFO:  eta: 2:30:08  iter: 5579  total_loss: 0.1883    time: 0.4890  last_time: 0.4901  data_time: 0.0032  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:28:58] d2.utils.events INFO:  eta: 2:29:58  iter: 5599  total_loss: 0.1707    time: 0.4890  last_time: 0.4802  data_time: 0.0053  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:29:08] d2.utils.events INFO:  eta: 2:29:50  iter: 5619  total_loss: 0.18    time: 0.4890  last_time: 0.5253  data_time: 0.0058  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:29:18] d2.utils.events INFO:  eta: 2:29:45  iter: 5639  total_loss: 0.1987    time: 0.4890  last_time: 0.4899  data_time: 0.0045  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:29:28] d2.utils.events INFO:  eta: 2:29:38  iter: 5659  total_loss: 0.1989    time: 0.4891  last_time: 0.5151  data_time: 0.0098  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:29:38] d2.utils.events INFO:  eta: 2:29:29  iter: 5679  total_loss: 0.1826    time: 0.4891  last_time: 0.5048  data_time: 0.0042  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:29:47] d2.utils.events INFO:  eta: 2:29:19  iter: 5699  total_loss: 0.1711    time: 0.4891  last_time: 0.4989  data_time: 0.0022  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:29:57] d2.utils.events INFO:  eta: 2:29:09  iter: 5719  total_loss: 0.1827    time: 0.4891  last_time: 0.4973  data_time: 0.0079  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:30:07] d2.utils.events INFO:  eta: 2:29:00  iter: 5739  total_loss: 0.1816    time: 0.4891  last_time: 0.4729  data_time: 0.0040  last_data_time: 0.0058   lr: 0.01  max_mem: 15030M
[04/15 20:30:17] d2.utils.events INFO:  eta: 2:28:50  iter: 5759  total_loss: 0.1695    time: 0.4891  last_time: 0.4808  data_time: 0.0061  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:30:27] d2.utils.events INFO:  eta: 2:28:40  iter: 5779  total_loss: 0.1876    time: 0.4891  last_time: 0.4780  data_time: 0.0057  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:30:36] d2.utils.events INFO:  eta: 2:28:30  iter: 5799  total_loss: 0.201    time: 0.4891  last_time: 0.5067  data_time: 0.0049  last_data_time: 0.0178   lr: 0.01  max_mem: 15030M
[04/15 20:30:46] d2.utils.events INFO:  eta: 2:28:19  iter: 5819  total_loss: 0.1805    time: 0.4891  last_time: 0.4823  data_time: 0.0080  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:30:56] d2.utils.events INFO:  eta: 2:28:09  iter: 5839  total_loss: 0.1859    time: 0.4891  last_time: 0.4813  data_time: 0.0053  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:31:06] d2.utils.events INFO:  eta: 2:27:58  iter: 5859  total_loss: 0.1815    time: 0.4890  last_time: 0.4901  data_time: 0.0067  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:31:15] d2.utils.events INFO:  eta: 2:27:49  iter: 5879  total_loss: 0.1927    time: 0.4890  last_time: 0.5002  data_time: 0.0090  last_data_time: 0.0177   lr: 0.01  max_mem: 15030M
[04/15 20:31:25] d2.utils.events INFO:  eta: 2:27:40  iter: 5899  total_loss: 0.1889    time: 0.4890  last_time: 0.4936  data_time: 0.0063  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:31:35] d2.utils.events INFO:  eta: 2:27:30  iter: 5919  total_loss: 0.1977    time: 0.4891  last_time: 0.4868  data_time: 0.0036  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:31:45] d2.utils.events INFO:  eta: 2:27:18  iter: 5939  total_loss: 0.1835    time: 0.4891  last_time: 0.4736  data_time: 0.0066  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:31:55] d2.utils.events INFO:  eta: 2:27:05  iter: 5959  total_loss: 0.1701    time: 0.4891  last_time: 0.5012  data_time: 0.0029  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:32:05] d2.utils.events INFO:  eta: 2:26:57  iter: 5979  total_loss: 0.1635    time: 0.4891  last_time: 0.4805  data_time: 0.0039  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:32:15] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 20:32:15] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 20:32:15] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 20:32:15] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 20:32:15] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 20:32:15] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 20:32:15] d2.utils.events INFO:  eta: 2:26:50  iter: 5999  total_loss: 0.1777    time: 0.4891  last_time: 0.4755  data_time: 0.0079  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:32:25] d2.utils.events INFO:  eta: 2:26:39  iter: 6019  total_loss: 0.1725    time: 0.4891  last_time: 0.5064  data_time: 0.0084  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:32:35] d2.utils.events INFO:  eta: 2:26:29  iter: 6039  total_loss: 0.174    time: 0.4891  last_time: 0.4994  data_time: 0.0032  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:32:45] d2.utils.events INFO:  eta: 2:26:21  iter: 6059  total_loss: 0.1754    time: 0.4891  last_time: 0.4850  data_time: 0.0073  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:32:55] d2.utils.events INFO:  eta: 2:26:13  iter: 6079  total_loss: 0.1663    time: 0.4891  last_time: 0.5124  data_time: 0.0068  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:33:05] d2.utils.events INFO:  eta: 2:26:03  iter: 6099  total_loss: 0.1909    time: 0.4891  last_time: 0.4795  data_time: 0.0049  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:33:14] d2.utils.events INFO:  eta: 2:25:52  iter: 6119  total_loss: 0.1742    time: 0.4891  last_time: 0.5093  data_time: 0.0057  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:33:24] d2.utils.events INFO:  eta: 2:25:44  iter: 6139  total_loss: 0.1715    time: 0.4891  last_time: 0.5043  data_time: 0.0041  last_data_time: 0.0389   lr: 0.01  max_mem: 15030M
[04/15 20:33:34] d2.utils.events INFO:  eta: 2:25:33  iter: 6159  total_loss: 0.1939    time: 0.4891  last_time: 0.4747  data_time: 0.0045  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:33:44] d2.utils.events INFO:  eta: 2:25:27  iter: 6179  total_loss: 0.1591    time: 0.4892  last_time: 0.4809  data_time: 0.0041  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:33:54] d2.utils.events INFO:  eta: 2:25:17  iter: 6199  total_loss: 0.1656    time: 0.4892  last_time: 0.4810  data_time: 0.0069  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:34:04] d2.utils.events INFO:  eta: 2:25:07  iter: 6219  total_loss: 0.1688    time: 0.4892  last_time: 0.5047  data_time: 0.0070  last_data_time: 0.0259   lr: 0.01  max_mem: 15030M
[04/15 20:34:14] d2.utils.events INFO:  eta: 2:24:55  iter: 6239  total_loss: 0.1684    time: 0.4892  last_time: 0.5030  data_time: 0.0053  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:34:24] d2.utils.events INFO:  eta: 2:24:50  iter: 6259  total_loss: 0.1618    time: 0.4892  last_time: 0.4889  data_time: 0.0065  last_data_time: 0.0060   lr: 0.01  max_mem: 15030M
[04/15 20:34:33] d2.utils.events INFO:  eta: 2:24:41  iter: 6279  total_loss: 0.1649    time: 0.4892  last_time: 0.4927  data_time: 0.0039  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:34:43] d2.utils.events INFO:  eta: 2:24:31  iter: 6299  total_loss: 0.1808    time: 0.4892  last_time: 0.4873  data_time: 0.0051  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:34:53] d2.utils.events INFO:  eta: 2:24:18  iter: 6319  total_loss: 0.1772    time: 0.4892  last_time: 0.4938  data_time: 0.0035  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:35:03] d2.utils.events INFO:  eta: 2:24:07  iter: 6339  total_loss: 0.1632    time: 0.4892  last_time: 0.5029  data_time: 0.0034  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:35:13] d2.utils.events INFO:  eta: 2:23:58  iter: 6359  total_loss: 0.161    time: 0.4892  last_time: 0.4814  data_time: 0.0047  last_data_time: 0.0017   lr: 0.01  max_mem: 15030M
[04/15 20:35:23] d2.utils.events INFO:  eta: 2:23:48  iter: 6379  total_loss: 0.1847    time: 0.4892  last_time: 0.4993  data_time: 0.0061  last_data_time: 0.0368   lr: 0.01  max_mem: 15030M
[04/15 20:35:32] d2.utils.events INFO:  eta: 2:23:42  iter: 6399  total_loss: 0.1779    time: 0.4892  last_time: 0.4858  data_time: 0.0065  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:35:42] d2.utils.events INFO:  eta: 2:23:27  iter: 6419  total_loss: 0.1917    time: 0.4892  last_time: 0.4683  data_time: 0.0035  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:35:52] d2.utils.events INFO:  eta: 2:23:17  iter: 6439  total_loss: 0.1674    time: 0.4892  last_time: 0.4998  data_time: 0.0035  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:36:02] d2.utils.events INFO:  eta: 2:23:08  iter: 6459  total_loss: 0.1733    time: 0.4892  last_time: 0.4810  data_time: 0.0036  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:36:11] d2.utils.events INFO:  eta: 2:22:57  iter: 6479  total_loss: 0.1861    time: 0.4892  last_time: 0.4806  data_time: 0.0026  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:36:21] d2.utils.events INFO:  eta: 2:22:48  iter: 6499  total_loss: 0.1845    time: 0.4892  last_time: 0.4985  data_time: 0.0074  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:36:31] d2.utils.events INFO:  eta: 2:22:37  iter: 6519  total_loss: 0.1615    time: 0.4892  last_time: 0.4879  data_time: 0.0066  last_data_time: 0.0234   lr: 0.01  max_mem: 15030M
[04/15 20:36:41] d2.utils.events INFO:  eta: 2:22:28  iter: 6539  total_loss: 0.1709    time: 0.4892  last_time: 0.4745  data_time: 0.0065  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:36:51] d2.utils.events INFO:  eta: 2:22:18  iter: 6559  total_loss: 0.1712    time: 0.4892  last_time: 0.4933  data_time: 0.0050  last_data_time: 0.0149   lr: 0.01  max_mem: 15030M
[04/15 20:37:01] d2.utils.events INFO:  eta: 2:22:08  iter: 6579  total_loss: 0.1696    time: 0.4892  last_time: 0.4821  data_time: 0.0040  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:37:11] d2.utils.events INFO:  eta: 2:21:58  iter: 6599  total_loss: 0.1721    time: 0.4892  last_time: 0.4980  data_time: 0.0073  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:37:20] d2.utils.events INFO:  eta: 2:21:47  iter: 6619  total_loss: 0.1656    time: 0.4892  last_time: 0.4760  data_time: 0.0038  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:37:30] d2.utils.events INFO:  eta: 2:21:36  iter: 6639  total_loss: 0.1768    time: 0.4892  last_time: 0.5077  data_time: 0.0068  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:37:40] d2.utils.events INFO:  eta: 2:21:22  iter: 6659  total_loss: 0.1768    time: 0.4892  last_time: 0.4765  data_time: 0.0076  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:37:50] d2.utils.events INFO:  eta: 2:21:14  iter: 6679  total_loss: 0.1763    time: 0.4892  last_time: 0.4944  data_time: 0.0050  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:38:00] d2.utils.events INFO:  eta: 2:21:04  iter: 6699  total_loss: 0.1624    time: 0.4892  last_time: 0.4818  data_time: 0.0021  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:38:10] d2.utils.events INFO:  eta: 2:20:56  iter: 6719  total_loss: 0.1522    time: 0.4892  last_time: 0.5119  data_time: 0.0054  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:38:19] d2.utils.events INFO:  eta: 2:20:46  iter: 6739  total_loss: 0.1744    time: 0.4892  last_time: 0.4925  data_time: 0.0050  last_data_time: 0.0031   lr: 0.01  max_mem: 15030M
[04/15 20:38:29] d2.utils.events INFO:  eta: 2:20:37  iter: 6759  total_loss: 0.154    time: 0.4892  last_time: 0.5142  data_time: 0.0049  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 20:38:39] d2.utils.events INFO:  eta: 2:20:27  iter: 6779  total_loss: 0.1709    time: 0.4892  last_time: 0.5035  data_time: 0.0056  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:38:49] d2.utils.events INFO:  eta: 2:20:17  iter: 6799  total_loss: 0.1798    time: 0.4892  last_time: 0.4676  data_time: 0.0038  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:38:59] d2.utils.events INFO:  eta: 2:20:08  iter: 6819  total_loss: 0.1687    time: 0.4892  last_time: 0.4804  data_time: 0.0094  last_data_time: 0.0032   lr: 0.01  max_mem: 15030M
[04/15 20:39:09] d2.utils.events INFO:  eta: 2:19:59  iter: 6839  total_loss: 0.1516    time: 0.4892  last_time: 0.4969  data_time: 0.0039  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:39:18] d2.utils.events INFO:  eta: 2:19:51  iter: 6859  total_loss: 0.1709    time: 0.4892  last_time: 0.4941  data_time: 0.0057  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:39:28] d2.utils.events INFO:  eta: 2:19:40  iter: 6879  total_loss: 0.163    time: 0.4892  last_time: 0.5160  data_time: 0.0033  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:39:38] d2.utils.events INFO:  eta: 2:19:30  iter: 6899  total_loss: 0.1678    time: 0.4892  last_time: 0.4745  data_time: 0.0048  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:39:48] d2.utils.events INFO:  eta: 2:19:18  iter: 6919  total_loss: 0.1532    time: 0.4892  last_time: 0.4816  data_time: 0.0068  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:39:58] d2.utils.events INFO:  eta: 2:19:09  iter: 6939  total_loss: 0.1584    time: 0.4892  last_time: 0.4819  data_time: 0.0047  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:40:08] d2.utils.events INFO:  eta: 2:18:59  iter: 6959  total_loss: 0.1666    time: 0.4892  last_time: 0.4749  data_time: 0.0045  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:40:18] d2.utils.events INFO:  eta: 2:18:48  iter: 6979  total_loss: 0.1725    time: 0.4892  last_time: 0.4786  data_time: 0.0039  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:40:27] d2.utils.events INFO:  eta: 2:18:39  iter: 6999  total_loss: 0.1697    time: 0.4892  last_time: 0.4807  data_time: 0.0056  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:40:37] d2.utils.events INFO:  eta: 2:18:34  iter: 7019  total_loss: 0.1897    time: 0.4892  last_time: 0.4938  data_time: 0.0053  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:40:47] d2.utils.events INFO:  eta: 2:18:23  iter: 7039  total_loss: 0.1793    time: 0.4892  last_time: 0.5012  data_time: 0.0063  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:40:57] d2.utils.events INFO:  eta: 2:18:11  iter: 7059  total_loss: 0.1933    time: 0.4892  last_time: 0.4890  data_time: 0.0081  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:41:07] d2.utils.events INFO:  eta: 2:18:02  iter: 7079  total_loss: 0.1768    time: 0.4892  last_time: 0.4964  data_time: 0.0042  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:41:17] d2.utils.events INFO:  eta: 2:17:52  iter: 7099  total_loss: 0.1617    time: 0.4892  last_time: 0.4825  data_time: 0.0063  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:41:27] d2.utils.events INFO:  eta: 2:17:44  iter: 7119  total_loss: 0.1795    time: 0.4892  last_time: 0.4908  data_time: 0.0058  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:41:36] d2.utils.events INFO:  eta: 2:17:33  iter: 7139  total_loss: 0.1665    time: 0.4892  last_time: 0.4975  data_time: 0.0063  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 20:41:46] d2.utils.events INFO:  eta: 2:17:22  iter: 7159  total_loss: 0.1691    time: 0.4892  last_time: 0.4881  data_time: 0.0066  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:41:56] d2.utils.events INFO:  eta: 2:17:12  iter: 7179  total_loss: 0.179    time: 0.4891  last_time: 0.5134  data_time: 0.0103  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:42:06] d2.utils.events INFO:  eta: 2:17:02  iter: 7199  total_loss: 0.1775    time: 0.4891  last_time: 0.4949  data_time: 0.0043  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:42:16] d2.utils.events INFO:  eta: 2:16:52  iter: 7219  total_loss: 0.1665    time: 0.4891  last_time: 0.4973  data_time: 0.0022  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:42:26] d2.utils.events INFO:  eta: 2:16:43  iter: 7239  total_loss: 0.1596    time: 0.4891  last_time: 0.4880  data_time: 0.0026  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:42:35] d2.utils.events INFO:  eta: 2:16:32  iter: 7259  total_loss: 0.1707    time: 0.4891  last_time: 0.4729  data_time: 0.0023  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:42:45] d2.utils.events INFO:  eta: 2:16:21  iter: 7279  total_loss: 0.1675    time: 0.4891  last_time: 0.4936  data_time: 0.0071  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:42:55] d2.utils.events INFO:  eta: 2:16:12  iter: 7299  total_loss: 0.1718    time: 0.4891  last_time: 0.4953  data_time: 0.0040  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:43:05] d2.utils.events INFO:  eta: 2:16:02  iter: 7319  total_loss: 0.1667    time: 0.4890  last_time: 0.4804  data_time: 0.0084  last_data_time: 0.0030   lr: 0.01  max_mem: 15030M
[04/15 20:43:15] d2.utils.events INFO:  eta: 2:15:52  iter: 7339  total_loss: 0.16    time: 0.4890  last_time: 0.5041  data_time: 0.0101  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:43:25] d2.utils.events INFO:  eta: 2:15:42  iter: 7359  total_loss: 0.1843    time: 0.4890  last_time: 0.4783  data_time: 0.0051  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:43:34] d2.utils.events INFO:  eta: 2:15:32  iter: 7379  total_loss: 0.1707    time: 0.4890  last_time: 0.4890  data_time: 0.0046  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:43:44] d2.utils.events INFO:  eta: 2:15:23  iter: 7399  total_loss: 0.1649    time: 0.4890  last_time: 0.5060  data_time: 0.0037  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 20:43:54] d2.utils.events INFO:  eta: 2:15:15  iter: 7419  total_loss: 0.1704    time: 0.4890  last_time: 0.5041  data_time: 0.0020  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:44:05] d2.utils.events INFO:  eta: 2:15:07  iter: 7439  total_loss: 0.1766    time: 0.4891  last_time: 0.4676  data_time: 0.0082  last_data_time: 0.0017   lr: 0.01  max_mem: 15030M
[04/15 20:44:15] d2.utils.events INFO:  eta: 2:14:55  iter: 7459  total_loss: 0.1638    time: 0.4890  last_time: 0.4774  data_time: 0.0049  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:44:25] d2.utils.events INFO:  eta: 2:14:46  iter: 7479  total_loss: 0.1459    time: 0.4890  last_time: 0.4849  data_time: 0.0054  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:44:35] d2.utils.events INFO:  eta: 2:14:35  iter: 7499  total_loss: 0.1582    time: 0.4890  last_time: 0.4828  data_time: 0.0057  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:44:46] d2.utils.events INFO:  eta: 2:14:26  iter: 7519  total_loss: 0.149    time: 0.4891  last_time: 0.4677  data_time: 0.0329  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:44:56] d2.utils.events INFO:  eta: 2:14:15  iter: 7539  total_loss: 0.1468    time: 0.4891  last_time: 0.4658  data_time: 0.0063  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:45:06] d2.utils.events INFO:  eta: 2:14:04  iter: 7559  total_loss: 0.1637    time: 0.4891  last_time: 0.4799  data_time: 0.0068  last_data_time: 0.0210   lr: 0.01  max_mem: 15030M
[04/15 20:45:15] d2.utils.events INFO:  eta: 2:13:49  iter: 7579  total_loss: 0.1669    time: 0.4891  last_time: 0.4807  data_time: 0.0071  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:45:25] d2.utils.events INFO:  eta: 2:13:42  iter: 7599  total_loss: 0.1689    time: 0.4891  last_time: 0.4926  data_time: 0.0049  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:45:35] d2.utils.events INFO:  eta: 2:13:32  iter: 7619  total_loss: 0.1556    time: 0.4891  last_time: 0.4709  data_time: 0.0050  last_data_time: 0.0028   lr: 0.01  max_mem: 15030M
[04/15 20:45:46] d2.utils.events INFO:  eta: 2:13:24  iter: 7639  total_loss: 0.1663    time: 0.4891  last_time: 0.4968  data_time: 0.0034  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:45:55] d2.utils.events INFO:  eta: 2:13:16  iter: 7659  total_loss: 0.1425    time: 0.4891  last_time: 0.4941  data_time: 0.0028  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:46:05] d2.utils.events INFO:  eta: 2:13:06  iter: 7679  total_loss: 0.151    time: 0.4891  last_time: 0.5014  data_time: 0.0105  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:46:15] d2.utils.events INFO:  eta: 2:12:55  iter: 7699  total_loss: 0.1577    time: 0.4890  last_time: 0.4665  data_time: 0.0068  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:46:25] d2.utils.events INFO:  eta: 2:12:43  iter: 7719  total_loss: 0.1599    time: 0.4891  last_time: 0.6026  data_time: 0.0111  last_data_time: 0.0746   lr: 0.01  max_mem: 15030M
[04/15 20:46:35] d2.utils.events INFO:  eta: 2:12:29  iter: 7739  total_loss: 0.1618    time: 0.4891  last_time: 0.4868  data_time: 0.0153  last_data_time: 0.0293   lr: 0.01  max_mem: 15030M
[04/15 20:46:45] d2.utils.events INFO:  eta: 2:12:20  iter: 7759  total_loss: 0.1458    time: 0.4891  last_time: 0.5012  data_time: 0.0067  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:46:55] d2.utils.events INFO:  eta: 2:12:12  iter: 7779  total_loss: 0.1629    time: 0.4891  last_time: 0.4984  data_time: 0.0027  last_data_time: 0.0027   lr: 0.01  max_mem: 15030M
[04/15 20:47:05] d2.utils.events INFO:  eta: 2:12:07  iter: 7799  total_loss: 0.15    time: 0.4891  last_time: 0.4920  data_time: 0.0035  last_data_time: 0.0266   lr: 0.01  max_mem: 15030M
[04/15 20:47:14] d2.utils.events INFO:  eta: 2:11:59  iter: 7819  total_loss: 0.1557    time: 0.4891  last_time: 0.4924  data_time: 0.0028  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:47:24] d2.utils.events INFO:  eta: 2:11:49  iter: 7839  total_loss: 0.1722    time: 0.4891  last_time: 0.5042  data_time: 0.0067  last_data_time: 0.0391   lr: 0.01  max_mem: 15030M
[04/15 20:47:34] d2.utils.events INFO:  eta: 2:11:36  iter: 7859  total_loss: 0.1477    time: 0.4891  last_time: 0.4815  data_time: 0.0057  last_data_time: 0.0089   lr: 0.01  max_mem: 15030M
[04/15 20:47:44] d2.utils.events INFO:  eta: 2:11:28  iter: 7879  total_loss: 0.1646    time: 0.4891  last_time: 0.5054  data_time: 0.0053  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:47:55] d2.utils.events INFO:  eta: 2:11:19  iter: 7899  total_loss: 0.1627    time: 0.4893  last_time: 0.4928  data_time: 0.0077  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:48:05] d2.utils.events INFO:  eta: 2:11:09  iter: 7919  total_loss: 0.162    time: 0.4893  last_time: 0.5038  data_time: 0.0040  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:48:15] d2.utils.events INFO:  eta: 2:10:59  iter: 7939  total_loss: 0.1509    time: 0.4893  last_time: 0.5087  data_time: 0.0057  last_data_time: 0.0039   lr: 0.01  max_mem: 15030M
[04/15 20:48:25] d2.utils.events INFO:  eta: 2:10:51  iter: 7959  total_loss: 0.1533    time: 0.4893  last_time: 0.4796  data_time: 0.0026  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:48:35] d2.utils.events INFO:  eta: 2:10:43  iter: 7979  total_loss: 0.1388    time: 0.4893  last_time: 0.4696  data_time: 0.0055  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:48:45] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 20:48:46] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 20:48:46] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 20:48:46] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 20:48:46] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 20:48:46] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 20:48:46] d2.utils.events INFO:  eta: 2:10:33  iter: 7999  total_loss: 0.1542    time: 0.4893  last_time: 0.4696  data_time: 0.0056  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 20:48:56] d2.utils.events INFO:  eta: 2:10:23  iter: 8019  total_loss: 0.1724    time: 0.4893  last_time: 0.5116  data_time: 0.0062  last_data_time: 0.0175   lr: 0.01  max_mem: 15030M
[04/15 20:49:06] d2.utils.events INFO:  eta: 2:10:13  iter: 8039  total_loss: 0.1628    time: 0.4893  last_time: 0.4585  data_time: 0.0056  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:49:16] d2.utils.events INFO:  eta: 2:10:03  iter: 8059  total_loss: 0.1698    time: 0.4893  last_time: 0.4807  data_time: 0.0038  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:49:25] d2.utils.events INFO:  eta: 2:09:53  iter: 8079  total_loss: 0.1594    time: 0.4893  last_time: 0.4840  data_time: 0.0104  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:49:35] d2.utils.events INFO:  eta: 2:09:42  iter: 8099  total_loss: 0.1673    time: 0.4893  last_time: 0.4877  data_time: 0.0080  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:49:45] d2.utils.events INFO:  eta: 2:09:27  iter: 8119  total_loss: 0.1428    time: 0.4893  last_time: 0.4905  data_time: 0.0054  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 20:49:55] d2.utils.events INFO:  eta: 2:09:17  iter: 8139  total_loss: 0.1395    time: 0.4893  last_time: 0.4709  data_time: 0.0056  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:50:05] d2.utils.events INFO:  eta: 2:09:13  iter: 8159  total_loss: 0.163    time: 0.4893  last_time: 0.5146  data_time: 0.0033  last_data_time: 0.0027   lr: 0.01  max_mem: 15030M
[04/15 20:50:14] d2.utils.events INFO:  eta: 2:08:59  iter: 8179  total_loss: 0.1523    time: 0.4893  last_time: 0.5044  data_time: 0.0068  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:50:24] d2.utils.events INFO:  eta: 2:08:49  iter: 8199  total_loss: 0.1669    time: 0.4893  last_time: 0.5123  data_time: 0.0057  last_data_time: 0.0089   lr: 0.01  max_mem: 15030M
[04/15 20:50:34] d2.utils.events INFO:  eta: 2:08:41  iter: 8219  total_loss: 0.1593    time: 0.4894  last_time: 0.5121  data_time: 0.0049  last_data_time: 0.0253   lr: 0.01  max_mem: 15030M
[04/15 20:50:44] d2.utils.events INFO:  eta: 2:08:29  iter: 8239  total_loss: 0.1544    time: 0.4893  last_time: 0.4751  data_time: 0.0071  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:50:54] d2.utils.events INFO:  eta: 2:08:21  iter: 8259  total_loss: 0.1339    time: 0.4894  last_time: 0.4973  data_time: 0.0051  last_data_time: 0.0480   lr: 0.01  max_mem: 15030M
[04/15 20:51:04] d2.utils.events INFO:  eta: 2:08:16  iter: 8279  total_loss: 0.1431    time: 0.4894  last_time: 0.5036  data_time: 0.0050  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:51:14] d2.utils.events INFO:  eta: 2:08:06  iter: 8299  total_loss: 0.1429    time: 0.4894  last_time: 0.4850  data_time: 0.0067  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:51:23] d2.utils.events INFO:  eta: 2:07:56  iter: 8319  total_loss: 0.1283    time: 0.4894  last_time: 0.4864  data_time: 0.0042  last_data_time: 0.0044   lr: 0.01  max_mem: 15030M
[04/15 20:51:33] d2.utils.events INFO:  eta: 2:07:45  iter: 8339  total_loss: 0.1559    time: 0.4894  last_time: 0.4813  data_time: 0.0065  last_data_time: 0.0229   lr: 0.01  max_mem: 15030M
[04/15 20:51:43] d2.utils.events INFO:  eta: 2:07:37  iter: 8359  total_loss: 0.1416    time: 0.4894  last_time: 0.4935  data_time: 0.0056  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:51:53] d2.utils.events INFO:  eta: 2:07:25  iter: 8379  total_loss: 0.1408    time: 0.4893  last_time: 0.4713  data_time: 0.0049  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:52:03] d2.utils.events INFO:  eta: 2:07:17  iter: 8399  total_loss: 0.1402    time: 0.4893  last_time: 0.4897  data_time: 0.0097  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:52:12] d2.utils.events INFO:  eta: 2:07:06  iter: 8419  total_loss: 0.1369    time: 0.4893  last_time: 0.4783  data_time: 0.0051  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:52:22] d2.utils.events INFO:  eta: 2:06:52  iter: 8439  total_loss: 0.1401    time: 0.4893  last_time: 0.4678  data_time: 0.0045  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:52:32] d2.utils.events INFO:  eta: 2:06:46  iter: 8459  total_loss: 0.1589    time: 0.4893  last_time: 0.4826  data_time: 0.0022  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:52:42] d2.utils.events INFO:  eta: 2:06:37  iter: 8479  total_loss: 0.1459    time: 0.4893  last_time: 0.4863  data_time: 0.0031  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:52:52] d2.utils.events INFO:  eta: 2:06:27  iter: 8499  total_loss: 0.1477    time: 0.4893  last_time: 0.4977  data_time: 0.0037  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:53:01] d2.utils.events INFO:  eta: 2:06:14  iter: 8519  total_loss: 0.162    time: 0.4893  last_time: 0.4990  data_time: 0.0055  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 20:53:11] d2.utils.events INFO:  eta: 2:06:06  iter: 8539  total_loss: 0.1674    time: 0.4893  last_time: 0.4947  data_time: 0.0036  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:53:21] d2.utils.events INFO:  eta: 2:05:57  iter: 8559  total_loss: 0.1513    time: 0.4893  last_time: 0.4882  data_time: 0.0032  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:53:31] d2.utils.events INFO:  eta: 2:05:49  iter: 8579  total_loss: 0.1522    time: 0.4893  last_time: 0.4935  data_time: 0.0058  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:53:40] d2.utils.events INFO:  eta: 2:05:36  iter: 8599  total_loss: 0.1533    time: 0.4893  last_time: 0.4996  data_time: 0.0064  last_data_time: 0.0369   lr: 0.01  max_mem: 15030M
[04/15 20:53:50] d2.utils.events INFO:  eta: 2:05:27  iter: 8619  total_loss: 0.1419    time: 0.4893  last_time: 0.4952  data_time: 0.0064  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:54:00] d2.utils.events INFO:  eta: 2:05:16  iter: 8639  total_loss: 0.1641    time: 0.4893  last_time: 0.4833  data_time: 0.0069  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 20:54:10] d2.utils.events INFO:  eta: 2:05:07  iter: 8659  total_loss: 0.1594    time: 0.4893  last_time: 0.4979  data_time: 0.0023  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:54:20] d2.utils.events INFO:  eta: 2:04:56  iter: 8679  total_loss: 0.1516    time: 0.4893  last_time: 0.4949  data_time: 0.0030  last_data_time: 0.0017   lr: 0.01  max_mem: 15030M
[04/15 20:54:30] d2.utils.events INFO:  eta: 2:04:50  iter: 8699  total_loss: 0.1524    time: 0.4893  last_time: 0.4998  data_time: 0.0033  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:54:40] d2.utils.events INFO:  eta: 2:04:42  iter: 8719  total_loss: 0.144    time: 0.4893  last_time: 0.5097  data_time: 0.0049  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 20:54:50] d2.utils.events INFO:  eta: 2:04:34  iter: 8739  total_loss: 0.159    time: 0.4893  last_time: 0.4927  data_time: 0.0057  last_data_time: 0.0231   lr: 0.01  max_mem: 15030M
[04/15 20:54:59] d2.utils.events INFO:  eta: 2:04:23  iter: 8759  total_loss: 0.1531    time: 0.4893  last_time: 0.4853  data_time: 0.0054  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:55:09] d2.utils.events INFO:  eta: 2:04:11  iter: 8779  total_loss: 0.1412    time: 0.4893  last_time: 0.4865  data_time: 0.0057  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 20:55:19] d2.utils.events INFO:  eta: 2:04:02  iter: 8799  total_loss: 0.1563    time: 0.4893  last_time: 0.4907  data_time: 0.0071  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:55:29] d2.utils.events INFO:  eta: 2:03:52  iter: 8819  total_loss: 0.152    time: 0.4893  last_time: 0.5049  data_time: 0.0046  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:55:39] d2.utils.events INFO:  eta: 2:03:41  iter: 8839  total_loss: 0.1548    time: 0.4894  last_time: 0.4877  data_time: 0.0058  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 20:55:49] d2.utils.events INFO:  eta: 2:03:32  iter: 8859  total_loss: 0.1532    time: 0.4893  last_time: 0.4834  data_time: 0.0060  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:02:19] d2.utils.events INFO:  eta: 2:03:20  iter: 8879  total_loss: 0.16    time: 0.4893  last_time: 0.4810  data_time: 0.0037  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:02:29] d2.utils.events INFO:  eta: 2:03:12  iter: 8899  total_loss: 0.1433    time: 0.4893  last_time: 0.4638  data_time: 0.0034  last_data_time: 0.0042   lr: 0.01  max_mem: 15030M
[04/15 21:02:39] d2.utils.events INFO:  eta: 2:03:02  iter: 8919  total_loss: 0.1582    time: 0.4893  last_time: 0.5109  data_time: 0.0037  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:02:49] d2.utils.events INFO:  eta: 2:02:53  iter: 8939  total_loss: 0.1608    time: 0.4893  last_time: 0.4830  data_time: 0.0053  last_data_time: 0.0030   lr: 0.01  max_mem: 15030M
[04/15 21:16:06] d2.utils.events INFO:  eta: 2:02:43  iter: 8959  total_loss: 0.1382    time: 0.4893  last_time: 0.4882  data_time: 0.0029  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:16:16] d2.utils.events INFO:  eta: 2:02:30  iter: 8979  total_loss: 0.1478    time: 0.4893  last_time: 0.4781  data_time: 0.0041  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:16:26] d2.utils.events INFO:  eta: 2:02:20  iter: 8999  total_loss: 0.1365    time: 0.4893  last_time: 0.4845  data_time: 0.0038  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:16:36] d2.utils.events INFO:  eta: 2:02:09  iter: 9019  total_loss: 0.1491    time: 0.4893  last_time: 0.4635  data_time: 0.0046  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:17:46] d2.utils.events INFO:  eta: 2:01:58  iter: 9039  total_loss: 0.145    time: 0.4893  last_time: 0.4659  data_time: 0.0037  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:17:56] d2.utils.events INFO:  eta: 2:01:50  iter: 9059  total_loss: 0.1334    time: 0.4893  last_time: 0.4813  data_time: 0.0039  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:18:06] d2.utils.events INFO:  eta: 2:01:44  iter: 9079  total_loss: 0.1456    time: 0.4893  last_time: 0.4920  data_time: 0.0036  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:18:16] d2.utils.events INFO:  eta: 2:01:34  iter: 9099  total_loss: 0.1533    time: 0.4893  last_time: 0.4901  data_time: 0.0065  last_data_time: 0.0166   lr: 0.01  max_mem: 15030M
[04/15 21:18:26] d2.utils.events INFO:  eta: 2:01:26  iter: 9119  total_loss: 0.1376    time: 0.4893  last_time: 0.5117  data_time: 0.0043  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:18:36] d2.utils.events INFO:  eta: 2:01:15  iter: 9139  total_loss: 0.158    time: 0.4893  last_time: 0.4896  data_time: 0.0041  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:18:45] d2.utils.events INFO:  eta: 2:01:05  iter: 9159  total_loss: 0.139    time: 0.4893  last_time: 0.4977  data_time: 0.0044  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 21:18:55] d2.utils.events INFO:  eta: 2:00:57  iter: 9179  total_loss: 0.1476    time: 0.4893  last_time: 0.5195  data_time: 0.0056  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:19:05] d2.utils.events INFO:  eta: 2:00:46  iter: 9199  total_loss: 0.1375    time: 0.4893  last_time: 0.4805  data_time: 0.0089  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:19:15] d2.utils.events INFO:  eta: 2:00:36  iter: 9219  total_loss: 0.1392    time: 0.4893  last_time: 0.4961  data_time: 0.0054  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:19:25] d2.utils.events INFO:  eta: 2:00:27  iter: 9239  total_loss: 0.1257    time: 0.4893  last_time: 0.4846  data_time: 0.0058  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:19:35] d2.utils.events INFO:  eta: 2:00:16  iter: 9259  total_loss: 0.1367    time: 0.4893  last_time: 0.4792  data_time: 0.0023  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:19:44] d2.utils.events INFO:  eta: 2:00:05  iter: 9279  total_loss: 0.138    time: 0.4893  last_time: 0.4845  data_time: 0.0028  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:19:54] d2.utils.events INFO:  eta: 1:59:54  iter: 9299  total_loss: 0.1509    time: 0.4893  last_time: 0.4825  data_time: 0.0032  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:20:04] d2.utils.events INFO:  eta: 1:59:44  iter: 9319  total_loss: 0.1487    time: 0.4893  last_time: 0.4973  data_time: 0.0077  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:20:14] d2.utils.events INFO:  eta: 1:59:34  iter: 9339  total_loss: 0.1518    time: 0.4893  last_time: 0.4946  data_time: 0.0036  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:20:24] d2.utils.events INFO:  eta: 1:59:23  iter: 9359  total_loss: 0.1389    time: 0.4893  last_time: 0.4813  data_time: 0.0022  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:20:34] d2.utils.events INFO:  eta: 1:59:13  iter: 9379  total_loss: 0.1386    time: 0.4893  last_time: 0.4995  data_time: 0.0067  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:20:43] d2.utils.events INFO:  eta: 1:59:03  iter: 9399  total_loss: 0.1507    time: 0.4893  last_time: 0.4998  data_time: 0.0041  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:20:53] d2.utils.events INFO:  eta: 1:58:54  iter: 9419  total_loss: 0.1542    time: 0.4893  last_time: 0.5157  data_time: 0.0056  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:21:03] d2.utils.events INFO:  eta: 1:58:46  iter: 9439  total_loss: 0.1319    time: 0.4893  last_time: 0.4827  data_time: 0.0036  last_data_time: 0.0184   lr: 0.01  max_mem: 15030M
[04/15 21:21:13] d2.utils.events INFO:  eta: 1:58:35  iter: 9459  total_loss: 0.1508    time: 0.4893  last_time: 0.4956  data_time: 0.0036  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:21:23] d2.utils.events INFO:  eta: 1:58:25  iter: 9479  total_loss: 0.1455    time: 0.4893  last_time: 0.4906  data_time: 0.0040  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:21:33] d2.utils.events INFO:  eta: 1:58:16  iter: 9499  total_loss: 0.1405    time: 0.4893  last_time: 0.5007  data_time: 0.0040  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:21:42] d2.utils.events INFO:  eta: 1:58:06  iter: 9519  total_loss: 0.1514    time: 0.4893  last_time: 0.5147  data_time: 0.0073  last_data_time: 0.0110   lr: 0.01  max_mem: 15030M
[04/15 21:21:52] d2.utils.events INFO:  eta: 1:57:56  iter: 9539  total_loss: 0.1499    time: 0.4893  last_time: 0.4786  data_time: 0.0067  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:22:02] d2.utils.events INFO:  eta: 1:57:51  iter: 9559  total_loss: 0.1531    time: 0.4893  last_time: 0.4932  data_time: 0.0062  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:22:12] d2.utils.events INFO:  eta: 1:57:41  iter: 9579  total_loss: 0.1482    time: 0.4893  last_time: 0.4875  data_time: 0.0053  last_data_time: 0.0027   lr: 0.01  max_mem: 15030M
[04/15 21:22:22] d2.utils.events INFO:  eta: 1:57:33  iter: 9599  total_loss: 0.1441    time: 0.4893  last_time: 0.4837  data_time: 0.0075  last_data_time: 0.0040   lr: 0.01  max_mem: 15030M
[04/15 21:22:32] d2.utils.events INFO:  eta: 1:57:23  iter: 9619  total_loss: 0.1517    time: 0.4893  last_time: 0.4926  data_time: 0.0050  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:22:41] d2.utils.events INFO:  eta: 1:57:13  iter: 9639  total_loss: 0.1464    time: 0.4893  last_time: 0.4906  data_time: 0.0022  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:22:51] d2.utils.events INFO:  eta: 1:57:02  iter: 9659  total_loss: 0.1408    time: 0.4893  last_time: 0.5090  data_time: 0.0037  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:23:01] d2.utils.events INFO:  eta: 1:56:51  iter: 9679  total_loss: 0.1575    time: 0.4893  last_time: 0.4966  data_time: 0.0043  last_data_time: 0.0287   lr: 0.01  max_mem: 15030M
[04/15 21:23:11] d2.utils.events INFO:  eta: 1:56:39  iter: 9699  total_loss: 0.1322    time: 0.4893  last_time: 0.4725  data_time: 0.0032  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:23:21] d2.utils.events INFO:  eta: 1:56:27  iter: 9719  total_loss: 0.1301    time: 0.4893  last_time: 0.4860  data_time: 0.0097  last_data_time: 0.0026   lr: 0.01  max_mem: 15030M
[04/15 21:23:30] d2.utils.events INFO:  eta: 1:56:19  iter: 9739  total_loss: 0.1219    time: 0.4893  last_time: 0.5038  data_time: 0.0077  last_data_time: 0.0434   lr: 0.01  max_mem: 15030M
[04/15 21:23:40] d2.utils.events INFO:  eta: 1:56:08  iter: 9759  total_loss: 0.1574    time: 0.4893  last_time: 0.5038  data_time: 0.0055  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:23:50] d2.utils.events INFO:  eta: 1:56:00  iter: 9779  total_loss: 0.1413    time: 0.4893  last_time: 0.5115  data_time: 0.0034  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:24:00] d2.utils.events INFO:  eta: 1:55:50  iter: 9799  total_loss: 0.129    time: 0.4893  last_time: 0.5109  data_time: 0.0048  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:24:10] d2.utils.events INFO:  eta: 1:55:40  iter: 9819  total_loss: 0.1395    time: 0.4893  last_time: 0.4977  data_time: 0.0035  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:24:20] d2.utils.events INFO:  eta: 1:55:30  iter: 9839  total_loss: 0.1607    time: 0.4893  last_time: 0.5073  data_time: 0.0103  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:24:30] d2.utils.events INFO:  eta: 1:55:23  iter: 9859  total_loss: 0.1322    time: 0.4893  last_time: 0.5083  data_time: 0.0042  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:24:39] d2.utils.events INFO:  eta: 1:55:13  iter: 9879  total_loss: 0.1578    time: 0.4893  last_time: 0.4707  data_time: 0.0084  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:24:49] d2.utils.events INFO:  eta: 1:55:02  iter: 9899  total_loss: 0.1427    time: 0.4893  last_time: 0.4766  data_time: 0.0043  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:24:59] d2.utils.events INFO:  eta: 1:54:54  iter: 9919  total_loss: 0.1474    time: 0.4893  last_time: 0.4965  data_time: 0.0047  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:25:09] d2.utils.events INFO:  eta: 1:54:41  iter: 9939  total_loss: 0.1477    time: 0.4893  last_time: 0.4821  data_time: 0.0067  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:25:18] d2.utils.events INFO:  eta: 1:54:30  iter: 9959  total_loss: 0.1521    time: 0.4893  last_time: 0.4872  data_time: 0.0058  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:25:28] d2.utils.events INFO:  eta: 1:54:20  iter: 9979  total_loss: 0.1455    time: 0.4893  last_time: 0.4950  data_time: 0.0054  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:25:38] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/r50/model_0009999.pth
[04/15 21:25:38] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 21:25:39] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 21:25:39] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 21:25:39] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 21:25:39] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 21:25:39] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 21:25:39] d2.utils.events INFO:  eta: 1:54:09  iter: 9999  total_loss: 0.1573    time: 0.4893  last_time: 0.4896  data_time: 0.0050  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:25:49] d2.utils.events INFO:  eta: 1:54:01  iter: 10019  total_loss: 0.143    time: 0.4893  last_time: 0.4763  data_time: 0.0098  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:25:59] d2.utils.events INFO:  eta: 1:53:50  iter: 10039  total_loss: 0.1389    time: 0.4893  last_time: 0.5034  data_time: 0.0040  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:26:09] d2.utils.events INFO:  eta: 1:53:39  iter: 10059  total_loss: 0.1367    time: 0.4893  last_time: 0.4678  data_time: 0.0049  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:26:19] d2.utils.events INFO:  eta: 1:53:28  iter: 10079  total_loss: 0.1538    time: 0.4893  last_time: 0.4857  data_time: 0.0036  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:26:28] d2.utils.events INFO:  eta: 1:53:19  iter: 10099  total_loss: 0.1286    time: 0.4893  last_time: 0.4890  data_time: 0.0079  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:26:38] d2.utils.events INFO:  eta: 1:53:09  iter: 10119  total_loss: 0.141    time: 0.4893  last_time: 0.4865  data_time: 0.0062  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:26:49] d2.utils.events INFO:  eta: 1:53:01  iter: 10139  total_loss: 0.1437    time: 0.4894  last_time: 0.4939  data_time: 0.0125  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:26:59] d2.utils.events INFO:  eta: 1:52:53  iter: 10159  total_loss: 0.1379    time: 0.4894  last_time: 0.4925  data_time: 0.0060  last_data_time: 0.0248   lr: 0.01  max_mem: 15030M
[04/15 21:27:09] d2.utils.events INFO:  eta: 1:52:42  iter: 10179  total_loss: 0.1429    time: 0.4894  last_time: 0.4907  data_time: 0.0063  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:27:18] d2.utils.events INFO:  eta: 1:52:33  iter: 10199  total_loss: 0.1464    time: 0.4894  last_time: 0.4668  data_time: 0.0034  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:27:28] d2.utils.events INFO:  eta: 1:52:24  iter: 10219  total_loss: 0.1398    time: 0.4894  last_time: 0.4911  data_time: 0.0035  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:27:38] d2.utils.events INFO:  eta: 1:52:13  iter: 10239  total_loss: 0.1405    time: 0.4894  last_time: 0.4854  data_time: 0.0070  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:27:48] d2.utils.events INFO:  eta: 1:52:03  iter: 10259  total_loss: 0.1328    time: 0.4894  last_time: 0.4847  data_time: 0.0047  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:27:58] d2.utils.events INFO:  eta: 1:51:52  iter: 10279  total_loss: 0.1467    time: 0.4894  last_time: 0.4856  data_time: 0.0067  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:28:08] d2.utils.events INFO:  eta: 1:51:45  iter: 10299  total_loss: 0.1481    time: 0.4894  last_time: 0.5014  data_time: 0.0061  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:28:18] d2.utils.events INFO:  eta: 1:51:39  iter: 10319  total_loss: 0.1416    time: 0.4894  last_time: 0.5054  data_time: 0.0047  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 21:28:27] d2.utils.events INFO:  eta: 1:51:29  iter: 10339  total_loss: 0.1305    time: 0.4894  last_time: 0.5063  data_time: 0.0048  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:28:37] d2.utils.events INFO:  eta: 1:51:20  iter: 10359  total_loss: 0.1346    time: 0.4894  last_time: 0.4882  data_time: 0.0059  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:28:47] d2.utils.events INFO:  eta: 1:51:10  iter: 10379  total_loss: 0.1392    time: 0.4894  last_time: 0.4850  data_time: 0.0061  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:28:57] d2.utils.events INFO:  eta: 1:51:00  iter: 10399  total_loss: 0.1292    time: 0.4894  last_time: 0.4912  data_time: 0.0040  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:29:07] d2.utils.events INFO:  eta: 1:50:49  iter: 10419  total_loss: 0.1504    time: 0.4894  last_time: 0.4763  data_time: 0.0050  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:29:19] d2.utils.events INFO:  eta: 1:50:36  iter: 10439  total_loss: 0.1424    time: 0.4896  last_time: 0.4815  data_time: 0.0067  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:29:29] d2.utils.events INFO:  eta: 1:50:27  iter: 10459  total_loss: 0.1333    time: 0.4896  last_time: 0.4779  data_time: 0.0054  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:29:38] d2.utils.events INFO:  eta: 1:50:16  iter: 10479  total_loss: 0.1434    time: 0.4896  last_time: 0.4952  data_time: 0.0055  last_data_time: 0.0189   lr: 0.01  max_mem: 15030M
[04/15 21:29:48] d2.utils.events INFO:  eta: 1:50:04  iter: 10499  total_loss: 0.1434    time: 0.4896  last_time: 0.5246  data_time: 0.0050  last_data_time: 0.0032   lr: 0.01  max_mem: 15030M
[04/15 21:29:58] d2.utils.events INFO:  eta: 1:49:54  iter: 10519  total_loss: 0.1364    time: 0.4896  last_time: 0.4947  data_time: 0.0031  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:30:08] d2.utils.events INFO:  eta: 1:49:43  iter: 10539  total_loss: 0.1257    time: 0.4896  last_time: 0.4944  data_time: 0.0036  last_data_time: 0.0034   lr: 0.01  max_mem: 15030M
[04/15 21:30:17] d2.utils.events INFO:  eta: 1:49:32  iter: 10559  total_loss: 0.1373    time: 0.4896  last_time: 0.4966  data_time: 0.0050  last_data_time: 0.0113   lr: 0.01  max_mem: 15030M
[04/15 21:30:27] d2.utils.events INFO:  eta: 1:49:23  iter: 10579  total_loss: 0.1361    time: 0.4896  last_time: 0.5107  data_time: 0.0060  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:30:37] d2.utils.events INFO:  eta: 1:49:11  iter: 10599  total_loss: 0.1304    time: 0.4896  last_time: 0.4952  data_time: 0.0043  last_data_time: 0.0045   lr: 0.01  max_mem: 15030M
[04/15 21:30:47] d2.utils.events INFO:  eta: 1:49:03  iter: 10619  total_loss: 0.1389    time: 0.4896  last_time: 0.4941  data_time: 0.0042  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:30:57] d2.utils.events INFO:  eta: 1:48:53  iter: 10639  total_loss: 0.1398    time: 0.4896  last_time: 0.5026  data_time: 0.0053  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:31:07] d2.utils.events INFO:  eta: 1:48:44  iter: 10659  total_loss: 0.1316    time: 0.4896  last_time: 0.4993  data_time: 0.0035  last_data_time: 0.0043   lr: 0.01  max_mem: 15030M
[04/15 21:31:16] d2.utils.events INFO:  eta: 1:48:34  iter: 10679  total_loss: 0.147    time: 0.4896  last_time: 0.4906  data_time: 0.0032  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:31:26] d2.utils.events INFO:  eta: 1:48:24  iter: 10699  total_loss: 0.1213    time: 0.4896  last_time: 0.5018  data_time: 0.0061  last_data_time: 0.0100   lr: 0.01  max_mem: 15030M
[04/15 21:31:36] d2.utils.events INFO:  eta: 1:48:15  iter: 10719  total_loss: 0.1396    time: 0.4896  last_time: 0.4609  data_time: 0.0039  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:31:46] d2.utils.events INFO:  eta: 1:48:03  iter: 10739  total_loss: 0.1294    time: 0.4896  last_time: 0.4968  data_time: 0.0049  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:31:56] d2.utils.events INFO:  eta: 1:47:55  iter: 10759  total_loss: 0.1428    time: 0.4896  last_time: 0.4880  data_time: 0.0065  last_data_time: 0.0058   lr: 0.01  max_mem: 15030M
[04/15 21:32:05] d2.utils.events INFO:  eta: 1:47:43  iter: 10779  total_loss: 0.1275    time: 0.4896  last_time: 0.4893  data_time: 0.0041  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:32:15] d2.utils.events INFO:  eta: 1:47:32  iter: 10799  total_loss: 0.1429    time: 0.4896  last_time: 0.4888  data_time: 0.0103  last_data_time: 0.0193   lr: 0.01  max_mem: 15030M
[04/15 21:32:25] d2.utils.events INFO:  eta: 1:47:20  iter: 10819  total_loss: 0.1585    time: 0.4896  last_time: 0.4570  data_time: 0.0057  last_data_time: 0.0218   lr: 0.01  max_mem: 15030M
[04/15 21:32:35] d2.utils.events INFO:  eta: 1:47:11  iter: 10839  total_loss: 0.1617    time: 0.4896  last_time: 0.4753  data_time: 0.0041  last_data_time: 0.0259   lr: 0.01  max_mem: 15030M
[04/15 21:32:45] d2.utils.events INFO:  eta: 1:47:00  iter: 10859  total_loss: 0.1649    time: 0.4896  last_time: 0.4801  data_time: 0.0023  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:32:54] d2.utils.events INFO:  eta: 1:46:50  iter: 10879  total_loss: 0.1337    time: 0.4896  last_time: 0.4817  data_time: 0.0086  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:33:04] d2.utils.events INFO:  eta: 1:46:41  iter: 10899  total_loss: 0.1281    time: 0.4896  last_time: 0.5270  data_time: 0.0062  last_data_time: 0.0227   lr: 0.01  max_mem: 15030M
[04/15 21:33:14] d2.utils.events INFO:  eta: 1:46:31  iter: 10919  total_loss: 0.1362    time: 0.4896  last_time: 0.4920  data_time: 0.0051  last_data_time: 0.0035   lr: 0.01  max_mem: 15030M
[04/15 21:33:24] d2.utils.events INFO:  eta: 1:46:23  iter: 10939  total_loss: 0.1426    time: 0.4896  last_time: 0.4816  data_time: 0.0062  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:33:34] d2.utils.events INFO:  eta: 1:46:15  iter: 10959  total_loss: 0.1432    time: 0.4896  last_time: 0.4882  data_time: 0.0059  last_data_time: 0.0188   lr: 0.01  max_mem: 15030M
[04/15 21:33:43] d2.utils.events INFO:  eta: 1:46:04  iter: 10979  total_loss: 0.1478    time: 0.4896  last_time: 0.4607  data_time: 0.0053  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:33:53] d2.utils.events INFO:  eta: 1:45:54  iter: 10999  total_loss: 0.1309    time: 0.4896  last_time: 0.5124  data_time: 0.0033  last_data_time: 0.0027   lr: 0.01  max_mem: 15030M
[04/15 21:34:03] d2.utils.events INFO:  eta: 1:45:43  iter: 11019  total_loss: 0.1335    time: 0.4896  last_time: 0.4927  data_time: 0.0035  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:34:13] d2.utils.events INFO:  eta: 1:45:33  iter: 11039  total_loss: 0.1392    time: 0.4896  last_time: 0.4867  data_time: 0.0075  last_data_time: 0.0267   lr: 0.01  max_mem: 15030M
[04/15 21:34:23] d2.utils.events INFO:  eta: 1:45:25  iter: 11059  total_loss: 0.142    time: 0.4896  last_time: 0.4895  data_time: 0.0024  last_data_time: 0.0027   lr: 0.01  max_mem: 15030M
[04/15 21:34:33] d2.utils.events INFO:  eta: 1:45:15  iter: 11079  total_loss: 0.1368    time: 0.4896  last_time: 0.5050  data_time: 0.0065  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:34:43] d2.utils.events INFO:  eta: 1:45:06  iter: 11099  total_loss: 0.1516    time: 0.4896  last_time: 0.5188  data_time: 0.0123  last_data_time: 0.0049   lr: 0.01  max_mem: 15030M
[04/15 21:34:53] d2.utils.events INFO:  eta: 1:44:53  iter: 11119  total_loss: 0.1358    time: 0.4896  last_time: 0.4838  data_time: 0.0035  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 21:35:02] d2.utils.events INFO:  eta: 1:44:42  iter: 11139  total_loss: 0.1422    time: 0.4896  last_time: 0.4878  data_time: 0.0090  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:35:12] d2.utils.events INFO:  eta: 1:44:31  iter: 11159  total_loss: 0.1356    time: 0.4896  last_time: 0.4947  data_time: 0.0044  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 21:35:22] d2.utils.events INFO:  eta: 1:44:21  iter: 11179  total_loss: 0.1295    time: 0.4896  last_time: 0.4917  data_time: 0.0033  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:35:32] d2.utils.events INFO:  eta: 1:44:11  iter: 11199  total_loss: 0.1252    time: 0.4896  last_time: 0.4835  data_time: 0.0069  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:35:42] d2.utils.events INFO:  eta: 1:44:01  iter: 11219  total_loss: 0.1278    time: 0.4895  last_time: 0.5166  data_time: 0.0044  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:35:52] d2.utils.events INFO:  eta: 1:43:52  iter: 11239  total_loss: 0.1235    time: 0.4896  last_time: 0.4930  data_time: 0.0069  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:36:01] d2.utils.events INFO:  eta: 1:43:42  iter: 11259  total_loss: 0.1265    time: 0.4896  last_time: 0.5064  data_time: 0.0094  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:36:11] d2.utils.events INFO:  eta: 1:43:32  iter: 11279  total_loss: 0.131    time: 0.4895  last_time: 0.4891  data_time: 0.0042  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:36:21] d2.utils.events INFO:  eta: 1:43:23  iter: 11299  total_loss: 0.1306    time: 0.4896  last_time: 0.5204  data_time: 0.0054  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:36:31] d2.utils.events INFO:  eta: 1:43:13  iter: 11319  total_loss: 0.1248    time: 0.4896  last_time: 0.4971  data_time: 0.0040  last_data_time: 0.0188   lr: 0.01  max_mem: 15030M
[04/15 21:36:41] d2.utils.events INFO:  eta: 1:43:03  iter: 11339  total_loss: 0.1197    time: 0.4896  last_time: 0.5067  data_time: 0.0033  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:36:51] d2.utils.events INFO:  eta: 1:42:54  iter: 11359  total_loss: 0.1238    time: 0.4896  last_time: 0.4830  data_time: 0.0068  last_data_time: 0.0035   lr: 0.01  max_mem: 15030M
[04/15 21:37:01] d2.utils.events INFO:  eta: 1:42:45  iter: 11379  total_loss: 0.1244    time: 0.4896  last_time: 0.5408  data_time: 0.0087  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:37:10] d2.utils.events INFO:  eta: 1:42:35  iter: 11399  total_loss: 0.1159    time: 0.4896  last_time: 0.4712  data_time: 0.0060  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:37:20] d2.utils.events INFO:  eta: 1:42:26  iter: 11419  total_loss: 0.1401    time: 0.4896  last_time: 0.4968  data_time: 0.0090  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:37:30] d2.utils.events INFO:  eta: 1:42:14  iter: 11439  total_loss: 0.1367    time: 0.4895  last_time: 0.5032  data_time: 0.0078  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:37:40] d2.utils.events INFO:  eta: 1:42:09  iter: 11459  total_loss: 0.1263    time: 0.4895  last_time: 0.4895  data_time: 0.0039  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:37:49] d2.utils.events INFO:  eta: 1:41:59  iter: 11479  total_loss: 0.1229    time: 0.4895  last_time: 0.4891  data_time: 0.0054  last_data_time: 0.0038   lr: 0.01  max_mem: 15030M
[04/15 21:37:59] d2.utils.events INFO:  eta: 1:41:49  iter: 11499  total_loss: 0.1336    time: 0.4895  last_time: 0.4810  data_time: 0.0044  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:38:09] d2.utils.events INFO:  eta: 1:41:40  iter: 11519  total_loss: 0.1329    time: 0.4896  last_time: 0.4963  data_time: 0.0085  last_data_time: 0.0231   lr: 0.01  max_mem: 15030M
[04/15 21:38:19] d2.utils.events INFO:  eta: 1:41:33  iter: 11539  total_loss: 0.1494    time: 0.4896  last_time: 0.4908  data_time: 0.0079  last_data_time: 0.0188   lr: 0.01  max_mem: 15030M
[04/15 21:38:29] d2.utils.events INFO:  eta: 1:41:21  iter: 11559  total_loss: 0.1368    time: 0.4895  last_time: 0.5039  data_time: 0.0032  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:38:39] d2.utils.events INFO:  eta: 1:41:13  iter: 11579  total_loss: 0.1302    time: 0.4895  last_time: 0.5088  data_time: 0.0046  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:38:49] d2.utils.events INFO:  eta: 1:41:04  iter: 11599  total_loss: 0.1316    time: 0.4895  last_time: 0.5009  data_time: 0.0045  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:38:58] d2.utils.events INFO:  eta: 1:40:54  iter: 11619  total_loss: 0.1317    time: 0.4895  last_time: 0.4900  data_time: 0.0026  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:39:08] d2.utils.events INFO:  eta: 1:40:41  iter: 11639  total_loss: 0.1305    time: 0.4895  last_time: 0.4783  data_time: 0.0056  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:39:18] d2.utils.events INFO:  eta: 1:40:31  iter: 11659  total_loss: 0.1314    time: 0.4895  last_time: 0.5052  data_time: 0.0049  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:39:28] d2.utils.events INFO:  eta: 1:40:22  iter: 11679  total_loss: 0.1538    time: 0.4895  last_time: 0.4899  data_time: 0.0091  last_data_time: 0.0529   lr: 0.01  max_mem: 15030M
[04/15 21:39:38] d2.utils.events INFO:  eta: 1:40:15  iter: 11699  total_loss: 0.1425    time: 0.4895  last_time: 0.5271  data_time: 0.0051  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:39:48] d2.utils.events INFO:  eta: 1:40:02  iter: 11719  total_loss: 0.1259    time: 0.4895  last_time: 0.4686  data_time: 0.0069  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 21:39:57] d2.utils.events INFO:  eta: 1:39:54  iter: 11739  total_loss: 0.1306    time: 0.4895  last_time: 0.4832  data_time: 0.0051  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:40:07] d2.utils.events INFO:  eta: 1:39:46  iter: 11759  total_loss: 0.1322    time: 0.4895  last_time: 0.5187  data_time: 0.0032  last_data_time: 0.0261   lr: 0.01  max_mem: 15030M
[04/15 21:40:17] d2.utils.events INFO:  eta: 1:39:37  iter: 11779  total_loss: 0.1397    time: 0.4896  last_time: 0.4995  data_time: 0.0071  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:40:27] d2.utils.events INFO:  eta: 1:39:26  iter: 11799  total_loss: 0.1297    time: 0.4895  last_time: 0.4861  data_time: 0.0027  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:40:37] d2.utils.events INFO:  eta: 1:39:17  iter: 11819  total_loss: 0.1348    time: 0.4895  last_time: 0.5017  data_time: 0.0034  last_data_time: 0.0185   lr: 0.01  max_mem: 15030M
[04/15 21:40:47] d2.utils.events INFO:  eta: 1:39:07  iter: 11839  total_loss: 0.1244    time: 0.4895  last_time: 0.4935  data_time: 0.0048  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:40:56] d2.utils.events INFO:  eta: 1:38:59  iter: 11859  total_loss: 0.1193    time: 0.4895  last_time: 0.4901  data_time: 0.0048  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:41:06] d2.utils.events INFO:  eta: 1:38:51  iter: 11879  total_loss: 0.1297    time: 0.4895  last_time: 0.5024  data_time: 0.0027  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:41:16] d2.utils.events INFO:  eta: 1:38:42  iter: 11899  total_loss: 0.1254    time: 0.4895  last_time: 0.5042  data_time: 0.0051  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:41:26] d2.utils.events INFO:  eta: 1:38:33  iter: 11919  total_loss: 0.1355    time: 0.4895  last_time: 0.4996  data_time: 0.0057  last_data_time: 0.0158   lr: 0.01  max_mem: 15030M
[04/15 21:41:36] d2.utils.events INFO:  eta: 1:38:23  iter: 11939  total_loss: 0.1412    time: 0.4895  last_time: 0.4747  data_time: 0.0068  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:41:46] d2.utils.events INFO:  eta: 1:38:15  iter: 11959  total_loss: 0.1203    time: 0.4896  last_time: 0.4926  data_time: 0.0056  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:41:55] d2.utils.events INFO:  eta: 1:38:06  iter: 11979  total_loss: 0.1198    time: 0.4895  last_time: 0.5027  data_time: 0.0035  last_data_time: 0.0113   lr: 0.01  max_mem: 15030M
[04/15 21:42:05] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 21:42:11] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 21:42:11] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 21:42:11] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 21:42:11] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 21:42:11] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 21:42:11] d2.utils.events INFO:  eta: 1:37:57  iter: 11999  total_loss: 0.1236    time: 0.4895  last_time: 0.4968  data_time: 0.0056  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:42:21] d2.utils.events INFO:  eta: 1:37:48  iter: 12019  total_loss: 0.1209    time: 0.4895  last_time: 0.4857  data_time: 0.0083  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:42:30] d2.utils.events INFO:  eta: 1:37:39  iter: 12039  total_loss: 0.1315    time: 0.4895  last_time: 0.4937  data_time: 0.0051  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:42:40] d2.utils.events INFO:  eta: 1:37:29  iter: 12059  total_loss: 0.1405    time: 0.4896  last_time: 0.5054  data_time: 0.0046  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:42:50] d2.utils.events INFO:  eta: 1:37:19  iter: 12079  total_loss: 0.1255    time: 0.4896  last_time: 0.4920  data_time: 0.0045  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:43:00] d2.utils.events INFO:  eta: 1:37:11  iter: 12099  total_loss: 0.1231    time: 0.4896  last_time: 0.5278  data_time: 0.0057  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:43:10] d2.utils.events INFO:  eta: 1:37:01  iter: 12119  total_loss: 0.1221    time: 0.4896  last_time: 0.4773  data_time: 0.0060  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:43:20] d2.utils.events INFO:  eta: 1:36:51  iter: 12139  total_loss: 0.1239    time: 0.4896  last_time: 0.4722  data_time: 0.0035  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:43:30] d2.utils.events INFO:  eta: 1:36:41  iter: 12159  total_loss: 0.1338    time: 0.4896  last_time: 0.4840  data_time: 0.0091  last_data_time: 0.0259   lr: 0.01  max_mem: 15030M
[04/15 21:43:40] d2.utils.events INFO:  eta: 1:36:32  iter: 12179  total_loss: 0.1336    time: 0.4896  last_time: 0.4793  data_time: 0.0048  last_data_time: 0.0256   lr: 0.01  max_mem: 15030M
[04/15 21:43:49] d2.utils.events INFO:  eta: 1:36:22  iter: 12199  total_loss: 0.1225    time: 0.4896  last_time: 0.4980  data_time: 0.0054  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:43:59] d2.utils.events INFO:  eta: 1:36:12  iter: 12219  total_loss: 0.1311    time: 0.4896  last_time: 0.4899  data_time: 0.0088  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:44:09] d2.utils.events INFO:  eta: 1:36:02  iter: 12239  total_loss: 0.1141    time: 0.4896  last_time: 0.5003  data_time: 0.0050  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:44:19] d2.utils.events INFO:  eta: 1:35:53  iter: 12259  total_loss: 0.1368    time: 0.4896  last_time: 0.5035  data_time: 0.0039  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:44:29] d2.utils.events INFO:  eta: 1:35:44  iter: 12279  total_loss: 0.1215    time: 0.4896  last_time: 0.4918  data_time: 0.0056  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:44:38] d2.utils.events INFO:  eta: 1:35:32  iter: 12299  total_loss: 0.1289    time: 0.4896  last_time: 0.4917  data_time: 0.0038  last_data_time: 0.0045   lr: 0.01  max_mem: 15030M
[04/15 21:44:48] d2.utils.events INFO:  eta: 1:35:23  iter: 12319  total_loss: 0.1302    time: 0.4896  last_time: 0.4779  data_time: 0.0050  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:44:58] d2.utils.events INFO:  eta: 1:35:13  iter: 12339  total_loss: 0.1167    time: 0.4896  last_time: 0.4964  data_time: 0.0030  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:45:08] d2.utils.events INFO:  eta: 1:35:03  iter: 12359  total_loss: 0.1367    time: 0.4896  last_time: 0.4871  data_time: 0.0063  last_data_time: 0.0238   lr: 0.01  max_mem: 15030M
[04/15 21:45:17] d2.utils.events INFO:  eta: 1:34:52  iter: 12379  total_loss: 0.1161    time: 0.4896  last_time: 0.4998  data_time: 0.0047  last_data_time: 0.0230   lr: 0.01  max_mem: 15030M
[04/15 21:45:27] d2.utils.events INFO:  eta: 1:34:43  iter: 12399  total_loss: 0.1282    time: 0.4896  last_time: 0.4936  data_time: 0.0059  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:45:37] d2.utils.events INFO:  eta: 1:34:35  iter: 12419  total_loss: 0.1288    time: 0.4896  last_time: 0.5032  data_time: 0.0034  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:45:47] d2.utils.events INFO:  eta: 1:34:26  iter: 12439  total_loss: 0.1192    time: 0.4896  last_time: 0.4941  data_time: 0.0056  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:45:57] d2.utils.events INFO:  eta: 1:34:15  iter: 12459  total_loss: 0.1177    time: 0.4896  last_time: 0.4922  data_time: 0.0039  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:46:07] d2.utils.events INFO:  eta: 1:34:06  iter: 12479  total_loss: 0.1175    time: 0.4896  last_time: 0.4946  data_time: 0.0022  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:46:17] d2.utils.events INFO:  eta: 1:33:59  iter: 12499  total_loss: 0.1308    time: 0.4896  last_time: 0.4939  data_time: 0.0045  last_data_time: 0.0147   lr: 0.01  max_mem: 15030M
[04/15 21:46:26] d2.utils.events INFO:  eta: 1:33:47  iter: 12519  total_loss: 0.1295    time: 0.4896  last_time: 0.4802  data_time: 0.0114  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:46:36] d2.utils.events INFO:  eta: 1:33:36  iter: 12539  total_loss: 0.1251    time: 0.4896  last_time: 0.4755  data_time: 0.0038  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:46:46] d2.utils.events INFO:  eta: 1:33:26  iter: 12559  total_loss: 0.1301    time: 0.4896  last_time: 0.5116  data_time: 0.0052  last_data_time: 0.0160   lr: 0.01  max_mem: 15030M
[04/15 21:46:56] d2.utils.events INFO:  eta: 1:33:15  iter: 12579  total_loss: 0.1361    time: 0.4896  last_time: 0.4877  data_time: 0.0040  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:47:05] d2.utils.events INFO:  eta: 1:33:05  iter: 12599  total_loss: 0.1327    time: 0.4896  last_time: 0.4822  data_time: 0.0047  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:47:15] d2.utils.events INFO:  eta: 1:32:55  iter: 12619  total_loss: 0.1258    time: 0.4896  last_time: 0.5160  data_time: 0.0042  last_data_time: 0.0239   lr: 0.01  max_mem: 15030M
[04/15 21:47:25] d2.utils.events INFO:  eta: 1:32:46  iter: 12639  total_loss: 0.1398    time: 0.4896  last_time: 0.4665  data_time: 0.0050  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:47:35] d2.utils.events INFO:  eta: 1:32:38  iter: 12659  total_loss: 0.1208    time: 0.4896  last_time: 0.4773  data_time: 0.0054  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:47:45] d2.utils.events INFO:  eta: 1:32:28  iter: 12679  total_loss: 0.1448    time: 0.4896  last_time: 0.4901  data_time: 0.0050  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:47:55] d2.utils.events INFO:  eta: 1:32:17  iter: 12699  total_loss: 0.1265    time: 0.4896  last_time: 0.4840  data_time: 0.0030  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:48:05] d2.utils.events INFO:  eta: 1:32:08  iter: 12719  total_loss: 0.1314    time: 0.4896  last_time: 0.4991  data_time: 0.0029  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:48:14] d2.utils.events INFO:  eta: 1:31:57  iter: 12739  total_loss: 0.1204    time: 0.4896  last_time: 0.4839  data_time: 0.0051  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:48:24] d2.utils.events INFO:  eta: 1:31:46  iter: 12759  total_loss: 0.1277    time: 0.4896  last_time: 0.5154  data_time: 0.0066  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:48:34] d2.utils.events INFO:  eta: 1:31:36  iter: 12779  total_loss: 0.1288    time: 0.4896  last_time: 0.4972  data_time: 0.0080  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:48:44] d2.utils.events INFO:  eta: 1:31:27  iter: 12799  total_loss: 0.1231    time: 0.4896  last_time: 0.4753  data_time: 0.0058  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:48:54] d2.utils.events INFO:  eta: 1:31:17  iter: 12819  total_loss: 0.1291    time: 0.4896  last_time: 0.4837  data_time: 0.0043  last_data_time: 0.0186   lr: 0.01  max_mem: 15030M
[04/15 21:49:03] d2.utils.events INFO:  eta: 1:31:07  iter: 12839  total_loss: 0.1213    time: 0.4896  last_time: 0.4886  data_time: 0.0049  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:49:13] d2.utils.events INFO:  eta: 1:30:55  iter: 12859  total_loss: 0.1248    time: 0.4896  last_time: 0.5084  data_time: 0.0057  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:49:23] d2.utils.events INFO:  eta: 1:30:45  iter: 12879  total_loss: 0.1173    time: 0.4896  last_time: 0.4680  data_time: 0.0041  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:49:33] d2.utils.events INFO:  eta: 1:30:33  iter: 12899  total_loss: 0.1208    time: 0.4896  last_time: 0.5175  data_time: 0.0059  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:49:43] d2.utils.events INFO:  eta: 1:30:22  iter: 12919  total_loss: 0.1191    time: 0.4896  last_time: 0.4713  data_time: 0.0027  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:49:53] d2.utils.events INFO:  eta: 1:30:13  iter: 12939  total_loss: 0.1226    time: 0.4896  last_time: 0.4651  data_time: 0.0055  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:50:03] d2.utils.events INFO:  eta: 1:30:01  iter: 12959  total_loss: 0.1241    time: 0.4896  last_time: 0.4948  data_time: 0.0044  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:50:12] d2.utils.events INFO:  eta: 1:29:51  iter: 12979  total_loss: 0.1267    time: 0.4896  last_time: 0.4858  data_time: 0.0059  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:50:22] d2.utils.events INFO:  eta: 1:29:43  iter: 12999  total_loss: 0.1092    time: 0.4896  last_time: 0.4721  data_time: 0.0042  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:50:32] d2.utils.events INFO:  eta: 1:29:32  iter: 13019  total_loss: 0.1313    time: 0.4896  last_time: 0.4724  data_time: 0.0023  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:50:42] d2.utils.events INFO:  eta: 1:29:23  iter: 13039  total_loss: 0.1177    time: 0.4896  last_time: 0.5016  data_time: 0.0045  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:50:51] d2.utils.events INFO:  eta: 1:29:10  iter: 13059  total_loss: 0.1143    time: 0.4896  last_time: 0.4878  data_time: 0.0039  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:51:01] d2.utils.events INFO:  eta: 1:29:01  iter: 13079  total_loss: 0.1325    time: 0.4896  last_time: 0.4923  data_time: 0.0056  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:51:11] d2.utils.events INFO:  eta: 1:28:50  iter: 13099  total_loss: 0.1288    time: 0.4896  last_time: 0.4772  data_time: 0.0054  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:51:21] d2.utils.events INFO:  eta: 1:28:39  iter: 13119  total_loss: 0.128    time: 0.4896  last_time: 0.5070  data_time: 0.0047  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:51:31] d2.utils.events INFO:  eta: 1:28:30  iter: 13139  total_loss: 0.125    time: 0.4896  last_time: 0.4928  data_time: 0.0049  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:51:41] d2.utils.events INFO:  eta: 1:28:21  iter: 13159  total_loss: 0.1329    time: 0.4896  last_time: 0.5237  data_time: 0.0037  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:51:50] d2.utils.events INFO:  eta: 1:28:11  iter: 13179  total_loss: 0.13    time: 0.4896  last_time: 0.4881  data_time: 0.0054  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 21:52:00] d2.utils.events INFO:  eta: 1:28:01  iter: 13199  total_loss: 0.1194    time: 0.4896  last_time: 0.5155  data_time: 0.0058  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:52:10] d2.utils.events INFO:  eta: 1:27:52  iter: 13219  total_loss: 0.125    time: 0.4896  last_time: 0.4865  data_time: 0.0038  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:52:20] d2.utils.events INFO:  eta: 1:27:42  iter: 13239  total_loss: 0.1312    time: 0.4896  last_time: 0.4846  data_time: 0.0052  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:52:30] d2.utils.events INFO:  eta: 1:27:32  iter: 13259  total_loss: 0.1197    time: 0.4896  last_time: 0.4810  data_time: 0.0050  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 21:52:40] d2.utils.events INFO:  eta: 1:27:23  iter: 13279  total_loss: 0.1357    time: 0.4896  last_time: 0.5049  data_time: 0.0047  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:52:49] d2.utils.events INFO:  eta: 1:27:14  iter: 13299  total_loss: 0.121    time: 0.4896  last_time: 0.4785  data_time: 0.0021  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:53:00] d2.utils.events INFO:  eta: 1:27:03  iter: 13319  total_loss: 0.1222    time: 0.4896  last_time: 0.4911  data_time: 0.0067  last_data_time: 0.0035   lr: 0.01  max_mem: 15030M
[04/15 21:53:10] d2.utils.events INFO:  eta: 1:26:52  iter: 13339  total_loss: 0.1309    time: 0.4896  last_time: 0.4899  data_time: 0.0033  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:53:20] d2.utils.events INFO:  eta: 1:26:43  iter: 13359  total_loss: 0.119    time: 0.4896  last_time: 0.4878  data_time: 0.0066  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:53:30] d2.utils.events INFO:  eta: 1:26:34  iter: 13379  total_loss: 0.1194    time: 0.4896  last_time: 0.4949  data_time: 0.0053  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:53:40] d2.utils.events INFO:  eta: 1:26:24  iter: 13399  total_loss: 0.1227    time: 0.4896  last_time: 0.4802  data_time: 0.0045  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:53:49] d2.utils.events INFO:  eta: 1:26:14  iter: 13419  total_loss: 0.1137    time: 0.4896  last_time: 0.4899  data_time: 0.0069  last_data_time: 0.0309   lr: 0.01  max_mem: 15030M
[04/15 21:53:59] d2.utils.events INFO:  eta: 1:26:04  iter: 13439  total_loss: 0.138    time: 0.4896  last_time: 0.4880  data_time: 0.0077  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:54:09] d2.utils.events INFO:  eta: 1:25:55  iter: 13459  total_loss: 0.1191    time: 0.4896  last_time: 0.5001  data_time: 0.0069  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:54:19] d2.utils.events INFO:  eta: 1:25:44  iter: 13479  total_loss: 0.1117    time: 0.4896  last_time: 0.4953  data_time: 0.0058  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:54:28] d2.utils.events INFO:  eta: 1:25:31  iter: 13499  total_loss: 0.1284    time: 0.4896  last_time: 0.4889  data_time: 0.0051  last_data_time: 0.0274   lr: 0.01  max_mem: 15030M
[04/15 21:54:38] d2.utils.events INFO:  eta: 1:25:23  iter: 13519  total_loss: 0.1149    time: 0.4896  last_time: 0.5086  data_time: 0.0061  last_data_time: 0.0446   lr: 0.01  max_mem: 15030M
[04/15 21:54:48] d2.utils.events INFO:  eta: 1:25:15  iter: 13539  total_loss: 0.1366    time: 0.4896  last_time: 0.4618  data_time: 0.0064  last_data_time: 0.0102   lr: 0.01  max_mem: 15030M
[04/15 21:54:58] d2.utils.events INFO:  eta: 1:25:03  iter: 13559  total_loss: 0.1273    time: 0.4896  last_time: 0.4675  data_time: 0.0047  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:55:08] d2.utils.events INFO:  eta: 1:24:54  iter: 13579  total_loss: 0.1206    time: 0.4896  last_time: 0.4786  data_time: 0.0043  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:55:17] d2.utils.events INFO:  eta: 1:24:44  iter: 13599  total_loss: 0.1249    time: 0.4896  last_time: 0.4856  data_time: 0.0046  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:55:27] d2.utils.events INFO:  eta: 1:24:31  iter: 13619  total_loss: 0.126    time: 0.4896  last_time: 0.4850  data_time: 0.0044  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:55:37] d2.utils.events INFO:  eta: 1:24:24  iter: 13639  total_loss: 0.1181    time: 0.4896  last_time: 0.4986  data_time: 0.0057  last_data_time: 0.0572   lr: 0.01  max_mem: 15030M
[04/15 21:55:47] d2.utils.events INFO:  eta: 1:24:14  iter: 13659  total_loss: 0.1201    time: 0.4896  last_time: 0.4945  data_time: 0.0069  last_data_time: 0.0017   lr: 0.01  max_mem: 15030M
[04/15 21:55:57] d2.utils.events INFO:  eta: 1:24:04  iter: 13679  total_loss: 0.1186    time: 0.4896  last_time: 0.5019  data_time: 0.0037  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:56:07] d2.utils.events INFO:  eta: 1:23:55  iter: 13699  total_loss: 0.1171    time: 0.4896  last_time: 0.4712  data_time: 0.0048  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:56:17] d2.utils.events INFO:  eta: 1:23:45  iter: 13719  total_loss: 0.1186    time: 0.4896  last_time: 0.4834  data_time: 0.0078  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:56:26] d2.utils.events INFO:  eta: 1:23:36  iter: 13739  total_loss: 0.1167    time: 0.4896  last_time: 0.4987  data_time: 0.0056  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:56:36] d2.utils.events INFO:  eta: 1:23:27  iter: 13759  total_loss: 0.1342    time: 0.4896  last_time: 0.4864  data_time: 0.0022  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:56:46] d2.utils.events INFO:  eta: 1:23:18  iter: 13779  total_loss: 0.1281    time: 0.4896  last_time: 0.4900  data_time: 0.0078  last_data_time: 0.0192   lr: 0.01  max_mem: 15030M
[04/15 21:56:56] d2.utils.events INFO:  eta: 1:23:08  iter: 13799  total_loss: 0.1237    time: 0.4896  last_time: 0.4968  data_time: 0.0057  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:57:06] d2.utils.events INFO:  eta: 1:22:59  iter: 13819  total_loss: 0.1149    time: 0.4896  last_time: 0.4523  data_time: 0.0031  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:57:15] d2.utils.events INFO:  eta: 1:22:49  iter: 13839  total_loss: 0.1311    time: 0.4896  last_time: 0.5023  data_time: 0.0035  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:57:25] d2.utils.events INFO:  eta: 1:22:41  iter: 13859  total_loss: 0.1194    time: 0.4896  last_time: 0.4851  data_time: 0.0051  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:57:35] d2.utils.events INFO:  eta: 1:22:30  iter: 13879  total_loss: 0.1283    time: 0.4896  last_time: 0.5004  data_time: 0.0060  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:57:45] d2.utils.events INFO:  eta: 1:22:20  iter: 13899  total_loss: 0.1175    time: 0.4896  last_time: 0.4877  data_time: 0.0075  last_data_time: 0.0036   lr: 0.01  max_mem: 15030M
[04/15 21:57:55] d2.utils.events INFO:  eta: 1:22:13  iter: 13919  total_loss: 0.1224    time: 0.4896  last_time: 0.4918  data_time: 0.0066  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:58:04] d2.utils.events INFO:  eta: 1:22:02  iter: 13939  total_loss: 0.1319    time: 0.4896  last_time: 0.5079  data_time: 0.0042  last_data_time: 0.0252   lr: 0.01  max_mem: 15030M
[04/15 21:58:14] d2.utils.events INFO:  eta: 1:21:53  iter: 13959  total_loss: 0.1306    time: 0.4896  last_time: 0.4868  data_time: 0.0074  last_data_time: 0.0050   lr: 0.01  max_mem: 15030M
[04/15 21:58:24] d2.utils.events INFO:  eta: 1:21:43  iter: 13979  total_loss: 0.1215    time: 0.4896  last_time: 0.4807  data_time: 0.0071  last_data_time: 0.0026   lr: 0.01  max_mem: 15030M
[04/15 21:58:34] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 21:58:36] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 21:58:36] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 21:58:36] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 21:58:36] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 21:58:36] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 21:58:36] d2.utils.events INFO:  eta: 1:21:33  iter: 13999  total_loss: 0.1282    time: 0.4896  last_time: 0.5075  data_time: 0.0058  last_data_time: 0.0370   lr: 0.01  max_mem: 15030M
[04/15 21:58:45] d2.utils.events INFO:  eta: 1:21:23  iter: 14019  total_loss: 0.1283    time: 0.4896  last_time: 0.5005  data_time: 0.0059  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 21:58:55] d2.utils.events INFO:  eta: 1:21:12  iter: 14039  total_loss: 0.1164    time: 0.4896  last_time: 0.4851  data_time: 0.0030  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 21:59:05] d2.utils.events INFO:  eta: 1:21:02  iter: 14059  total_loss: 0.1254    time: 0.4896  last_time: 0.4828  data_time: 0.0054  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 21:59:15] d2.utils.events INFO:  eta: 1:20:52  iter: 14079  total_loss: 0.1273    time: 0.4896  last_time: 0.5265  data_time: 0.0073  last_data_time: 0.0648   lr: 0.01  max_mem: 15030M
[04/15 21:59:25] d2.utils.events INFO:  eta: 1:20:42  iter: 14099  total_loss: 0.1243    time: 0.4896  last_time: 0.5046  data_time: 0.0055  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 21:59:35] d2.utils.events INFO:  eta: 1:20:34  iter: 14119  total_loss: 0.1401    time: 0.4896  last_time: 0.4783  data_time: 0.0071  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 21:59:44] d2.utils.events INFO:  eta: 1:20:23  iter: 14139  total_loss: 0.1281    time: 0.4896  last_time: 0.4824  data_time: 0.0078  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 21:59:54] d2.utils.events INFO:  eta: 1:20:13  iter: 14159  total_loss: 0.1337    time: 0.4896  last_time: 0.4691  data_time: 0.0082  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:00:04] d2.utils.events INFO:  eta: 1:20:03  iter: 14179  total_loss: 0.1166    time: 0.4896  last_time: 0.4909  data_time: 0.0061  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:00:14] d2.utils.events INFO:  eta: 1:19:53  iter: 14199  total_loss: 0.1336    time: 0.4896  last_time: 0.4671  data_time: 0.0048  last_data_time: 0.0047   lr: 0.01  max_mem: 15030M
[04/15 22:00:24] d2.utils.events INFO:  eta: 1:19:43  iter: 14219  total_loss: 0.1248    time: 0.4896  last_time: 0.4904  data_time: 0.0041  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:00:33] d2.utils.events INFO:  eta: 1:19:34  iter: 14239  total_loss: 0.1351    time: 0.4896  last_time: 0.4904  data_time: 0.0055  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:00:43] d2.utils.events INFO:  eta: 1:19:23  iter: 14259  total_loss: 0.1155    time: 0.4896  last_time: 0.4852  data_time: 0.0054  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:00:53] d2.utils.events INFO:  eta: 1:19:11  iter: 14279  total_loss: 0.125    time: 0.4896  last_time: 0.4904  data_time: 0.0112  last_data_time: 0.0544   lr: 0.01  max_mem: 15030M
[04/15 22:01:03] d2.utils.events INFO:  eta: 1:19:01  iter: 14299  total_loss: 0.1259    time: 0.4896  last_time: 0.4977  data_time: 0.0038  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:01:13] d2.utils.events INFO:  eta: 1:18:54  iter: 14319  total_loss: 0.119    time: 0.4896  last_time: 0.4990  data_time: 0.0039  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 22:01:22] d2.utils.events INFO:  eta: 1:18:44  iter: 14339  total_loss: 0.1209    time: 0.4896  last_time: 0.4687  data_time: 0.0034  last_data_time: 0.0126   lr: 0.01  max_mem: 15030M
[04/15 22:01:32] d2.utils.events INFO:  eta: 1:18:34  iter: 14359  total_loss: 0.1157    time: 0.4896  last_time: 0.4889  data_time: 0.0078  last_data_time: 0.0187   lr: 0.01  max_mem: 15030M
[04/15 22:01:42] d2.utils.events INFO:  eta: 1:18:23  iter: 14379  total_loss: 0.1189    time: 0.4896  last_time: 0.4769  data_time: 0.0080  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:01:52] d2.utils.events INFO:  eta: 1:18:11  iter: 14399  total_loss: 0.1222    time: 0.4896  last_time: 0.4931  data_time: 0.0047  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:02:02] d2.utils.events INFO:  eta: 1:18:01  iter: 14419  total_loss: 0.1198    time: 0.4896  last_time: 0.5058  data_time: 0.0042  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:02:11] d2.utils.events INFO:  eta: 1:17:52  iter: 14439  total_loss: 0.1346    time: 0.4896  last_time: 0.5086  data_time: 0.0021  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 22:02:21] d2.utils.events INFO:  eta: 1:17:41  iter: 14459  total_loss: 0.1169    time: 0.4896  last_time: 0.4777  data_time: 0.0029  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:02:31] d2.utils.events INFO:  eta: 1:17:32  iter: 14479  total_loss: 0.1051    time: 0.4896  last_time: 0.4659  data_time: 0.0051  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:02:41] d2.utils.events INFO:  eta: 1:17:22  iter: 14499  total_loss: 0.1147    time: 0.4896  last_time: 0.5103  data_time: 0.0056  last_data_time: 0.0037   lr: 0.01  max_mem: 15030M
[04/15 22:02:51] d2.utils.events INFO:  eta: 1:17:11  iter: 14519  total_loss: 0.1103    time: 0.4896  last_time: 0.4994  data_time: 0.0041  last_data_time: 0.0186   lr: 0.01  max_mem: 15030M
[04/15 22:03:00] d2.utils.events INFO:  eta: 1:17:01  iter: 14539  total_loss: 0.1273    time: 0.4896  last_time: 0.4601  data_time: 0.0036  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:03:10] d2.utils.events INFO:  eta: 1:16:53  iter: 14559  total_loss: 0.118    time: 0.4896  last_time: 0.4774  data_time: 0.0051  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:03:20] d2.utils.events INFO:  eta: 1:16:43  iter: 14579  total_loss: 0.1053    time: 0.4896  last_time: 0.4555  data_time: 0.0045  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:03:30] d2.utils.events INFO:  eta: 1:16:33  iter: 14599  total_loss: 0.1169    time: 0.4896  last_time: 0.4831  data_time: 0.0058  last_data_time: 0.0017   lr: 0.01  max_mem: 15030M
[04/15 22:03:40] d2.utils.events INFO:  eta: 1:16:26  iter: 14619  total_loss: 0.1273    time: 0.4896  last_time: 0.4774  data_time: 0.0069  last_data_time: 0.0043   lr: 0.01  max_mem: 15030M
[04/15 22:03:49] d2.utils.events INFO:  eta: 1:16:14  iter: 14639  total_loss: 0.114    time: 0.4896  last_time: 0.4929  data_time: 0.0078  last_data_time: 0.0043   lr: 0.01  max_mem: 15030M
[04/15 22:03:59] d2.utils.events INFO:  eta: 1:16:03  iter: 14659  total_loss: 0.1139    time: 0.4896  last_time: 0.4980  data_time: 0.0035  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:04:09] d2.utils.events INFO:  eta: 1:15:53  iter: 14679  total_loss: 0.1186    time: 0.4895  last_time: 0.4898  data_time: 0.0030  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:04:19] d2.utils.events INFO:  eta: 1:15:43  iter: 14699  total_loss: 0.1151    time: 0.4895  last_time: 0.4893  data_time: 0.0060  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:04:28] d2.utils.events INFO:  eta: 1:15:33  iter: 14719  total_loss: 0.1203    time: 0.4895  last_time: 0.5016  data_time: 0.0061  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:04:38] d2.utils.events INFO:  eta: 1:15:24  iter: 14739  total_loss: 0.1213    time: 0.4895  last_time: 0.4924  data_time: 0.0092  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:04:48] d2.utils.events INFO:  eta: 1:15:14  iter: 14759  total_loss: 0.1079    time: 0.4895  last_time: 0.5028  data_time: 0.0097  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 22:04:58] d2.utils.events INFO:  eta: 1:15:04  iter: 14779  total_loss: 0.1282    time: 0.4895  last_time: 0.4835  data_time: 0.0045  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:05:08] d2.utils.events INFO:  eta: 1:14:54  iter: 14799  total_loss: 0.1219    time: 0.4895  last_time: 0.4867  data_time: 0.0038  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:05:17] d2.utils.events INFO:  eta: 1:14:43  iter: 14819  total_loss: 0.1209    time: 0.4895  last_time: 0.5016  data_time: 0.0039  last_data_time: 0.0187   lr: 0.01  max_mem: 15030M
[04/15 22:05:27] d2.utils.events INFO:  eta: 1:14:33  iter: 14839  total_loss: 0.1241    time: 0.4895  last_time: 0.4783  data_time: 0.0031  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:05:37] d2.utils.events INFO:  eta: 1:14:22  iter: 14859  total_loss: 0.1226    time: 0.4895  last_time: 0.4983  data_time: 0.0043  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:05:47] d2.utils.events INFO:  eta: 1:14:11  iter: 14879  total_loss: 0.1175    time: 0.4895  last_time: 0.4925  data_time: 0.0073  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:05:57] d2.utils.events INFO:  eta: 1:14:03  iter: 14899  total_loss: 0.1181    time: 0.4895  last_time: 0.4994  data_time: 0.0080  last_data_time: 0.0189   lr: 0.01  max_mem: 15030M
[04/15 22:06:07] d2.utils.events INFO:  eta: 1:13:51  iter: 14919  total_loss: 0.1233    time: 0.4895  last_time: 0.5000  data_time: 0.0028  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:06:16] d2.utils.events INFO:  eta: 1:13:41  iter: 14939  total_loss: 0.1161    time: 0.4895  last_time: 0.4859  data_time: 0.0036  last_data_time: 0.0043   lr: 0.01  max_mem: 15030M
[04/15 22:06:26] d2.utils.events INFO:  eta: 1:13:31  iter: 14959  total_loss: 0.1069    time: 0.4895  last_time: 0.4656  data_time: 0.0046  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:06:36] d2.utils.events INFO:  eta: 1:13:22  iter: 14979  total_loss: 0.1216    time: 0.4895  last_time: 0.5060  data_time: 0.0042  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:06:46] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/r50/model_0014999.pth
[04/15 22:06:46] d2.utils.events INFO:  eta: 1:13:11  iter: 14999  total_loss: 0.1156    time: 0.4895  last_time: 0.4862  data_time: 0.0035  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:06:56] d2.utils.events INFO:  eta: 1:13:02  iter: 15019  total_loss: 0.1121    time: 0.4895  last_time: 0.4788  data_time: 0.0048  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 22:07:06] d2.utils.events INFO:  eta: 1:12:54  iter: 15039  total_loss: 0.1257    time: 0.4895  last_time: 0.4930  data_time: 0.0092  last_data_time: 0.0183   lr: 0.01  max_mem: 15030M
[04/15 22:07:16] d2.utils.events INFO:  eta: 1:12:47  iter: 15059  total_loss: 0.1213    time: 0.4895  last_time: 0.4967  data_time: 0.0029  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:07:26] d2.utils.events INFO:  eta: 1:12:37  iter: 15079  total_loss: 0.1194    time: 0.4895  last_time: 0.4998  data_time: 0.0034  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:07:35] d2.utils.events INFO:  eta: 1:12:27  iter: 15099  total_loss: 0.1143    time: 0.4895  last_time: 0.4929  data_time: 0.0063  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:07:45] d2.utils.events INFO:  eta: 1:12:17  iter: 15119  total_loss: 0.1133    time: 0.4895  last_time: 0.4909  data_time: 0.0067  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:07:55] d2.utils.events INFO:  eta: 1:12:07  iter: 15139  total_loss: 0.1214    time: 0.4895  last_time: 0.4965  data_time: 0.0073  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:08:05] d2.utils.events INFO:  eta: 1:11:57  iter: 15159  total_loss: 0.1105    time: 0.4895  last_time: 0.4946  data_time: 0.0050  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:08:15] d2.utils.events INFO:  eta: 1:11:47  iter: 15179  total_loss: 0.1274    time: 0.4895  last_time: 0.4824  data_time: 0.0026  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:08:25] d2.utils.events INFO:  eta: 1:11:37  iter: 15199  total_loss: 0.1105    time: 0.4895  last_time: 0.4767  data_time: 0.0061  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:08:34] d2.utils.events INFO:  eta: 1:11:26  iter: 15219  total_loss: 0.1111    time: 0.4895  last_time: 0.4815  data_time: 0.0052  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:08:44] d2.utils.events INFO:  eta: 1:11:15  iter: 15239  total_loss: 0.119    time: 0.4895  last_time: 0.4941  data_time: 0.0053  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:08:54] d2.utils.events INFO:  eta: 1:11:05  iter: 15259  total_loss: 0.1281    time: 0.4895  last_time: 0.4830  data_time: 0.0039  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:09:04] d2.utils.events INFO:  eta: 1:10:58  iter: 15279  total_loss: 0.1035    time: 0.4895  last_time: 0.4927  data_time: 0.0051  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:09:14] d2.utils.events INFO:  eta: 1:10:49  iter: 15299  total_loss: 0.11    time: 0.4895  last_time: 0.5128  data_time: 0.0033  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:09:23] d2.utils.events INFO:  eta: 1:10:39  iter: 15319  total_loss: 0.1162    time: 0.4895  last_time: 0.4920  data_time: 0.0059  last_data_time: 0.0097   lr: 0.01  max_mem: 15030M
[04/15 22:09:33] d2.utils.events INFO:  eta: 1:10:30  iter: 15339  total_loss: 0.1142    time: 0.4895  last_time: 0.4613  data_time: 0.0042  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:09:43] d2.utils.events INFO:  eta: 1:10:19  iter: 15359  total_loss: 0.1078    time: 0.4895  last_time: 0.4986  data_time: 0.0048  last_data_time: 0.0501   lr: 0.01  max_mem: 15030M
[04/15 22:09:53] d2.utils.events INFO:  eta: 1:10:10  iter: 15379  total_loss: 0.1106    time: 0.4895  last_time: 0.4816  data_time: 0.0071  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:10:03] d2.utils.events INFO:  eta: 1:10:02  iter: 15399  total_loss: 0.1182    time: 0.4895  last_time: 0.4752  data_time: 0.0049  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:10:12] d2.utils.events INFO:  eta: 1:09:52  iter: 15419  total_loss: 0.1106    time: 0.4895  last_time: 0.4686  data_time: 0.0039  last_data_time: 0.0163   lr: 0.01  max_mem: 15030M
[04/15 22:10:22] d2.utils.events INFO:  eta: 1:09:43  iter: 15439  total_loss: 0.119    time: 0.4895  last_time: 0.5080  data_time: 0.0041  last_data_time: 0.0403   lr: 0.01  max_mem: 15030M
[04/15 22:10:32] d2.utils.events INFO:  eta: 1:09:33  iter: 15459  total_loss: 0.1231    time: 0.4895  last_time: 0.4863  data_time: 0.0040  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:10:42] d2.utils.events INFO:  eta: 1:09:24  iter: 15479  total_loss: 0.1064    time: 0.4895  last_time: 0.5064  data_time: 0.0052  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:10:52] d2.utils.events INFO:  eta: 1:09:14  iter: 15499  total_loss: 0.1143    time: 0.4895  last_time: 0.5102  data_time: 0.0036  last_data_time: 0.0113   lr: 0.01  max_mem: 15030M
[04/15 22:11:01] d2.utils.events INFO:  eta: 1:09:04  iter: 15519  total_loss: 0.1167    time: 0.4895  last_time: 0.4821  data_time: 0.0067  last_data_time: 0.0165   lr: 0.01  max_mem: 15030M
[04/15 22:11:11] d2.utils.events INFO:  eta: 1:08:54  iter: 15539  total_loss: 0.1084    time: 0.4895  last_time: 0.4890  data_time: 0.0040  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 22:11:21] d2.utils.events INFO:  eta: 1:08:44  iter: 15559  total_loss: 0.1241    time: 0.4895  last_time: 0.4960  data_time: 0.0078  last_data_time: 0.0411   lr: 0.01  max_mem: 15030M
[04/15 22:11:31] d2.utils.events INFO:  eta: 1:08:35  iter: 15579  total_loss: 0.1094    time: 0.4895  last_time: 0.4858  data_time: 0.0066  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:11:41] d2.utils.events INFO:  eta: 1:08:25  iter: 15599  total_loss: 0.1256    time: 0.4895  last_time: 0.4806  data_time: 0.0044  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:11:50] d2.utils.events INFO:  eta: 1:08:13  iter: 15619  total_loss: 0.1211    time: 0.4895  last_time: 0.4852  data_time: 0.0037  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:12:00] d2.utils.events INFO:  eta: 1:08:04  iter: 15639  total_loss: 0.1179    time: 0.4895  last_time: 0.4876  data_time: 0.0038  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:12:10] d2.utils.events INFO:  eta: 1:07:55  iter: 15659  total_loss: 0.1014    time: 0.4895  last_time: 0.5095  data_time: 0.0080  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:12:20] d2.utils.events INFO:  eta: 1:07:46  iter: 15679  total_loss: 0.1246    time: 0.4895  last_time: 0.4995  data_time: 0.0092  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:12:30] d2.utils.events INFO:  eta: 1:07:37  iter: 15699  total_loss: 0.1067    time: 0.4895  last_time: 0.4830  data_time: 0.0035  last_data_time: 0.0064   lr: 0.01  max_mem: 15030M
[04/15 22:12:39] d2.utils.events INFO:  eta: 1:07:27  iter: 15719  total_loss: 0.1111    time: 0.4895  last_time: 0.4971  data_time: 0.0043  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:12:49] d2.utils.events INFO:  eta: 1:07:17  iter: 15739  total_loss: 0.1088    time: 0.4895  last_time: 0.4852  data_time: 0.0042  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:12:59] d2.utils.events INFO:  eta: 1:07:07  iter: 15759  total_loss: 0.1118    time: 0.4895  last_time: 0.5071  data_time: 0.0088  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:13:09] d2.utils.events INFO:  eta: 1:06:56  iter: 15779  total_loss: 0.1132    time: 0.4895  last_time: 0.4753  data_time: 0.0050  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:13:19] d2.utils.events INFO:  eta: 1:06:47  iter: 15799  total_loss: 0.1078    time: 0.4895  last_time: 0.4932  data_time: 0.0039  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:13:28] d2.utils.events INFO:  eta: 1:06:38  iter: 15819  total_loss: 0.1116    time: 0.4895  last_time: 0.4980  data_time: 0.0040  last_data_time: 0.0153   lr: 0.01  max_mem: 15030M
[04/15 22:13:38] d2.utils.events INFO:  eta: 1:06:28  iter: 15839  total_loss: 0.1119    time: 0.4895  last_time: 0.4939  data_time: 0.0048  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:13:48] d2.utils.events INFO:  eta: 1:06:17  iter: 15859  total_loss: 0.1101    time: 0.4895  last_time: 0.5152  data_time: 0.0021  last_data_time: 0.0044   lr: 0.01  max_mem: 15030M
[04/15 22:13:58] d2.utils.events INFO:  eta: 1:06:08  iter: 15879  total_loss: 0.1106    time: 0.4895  last_time: 0.4957  data_time: 0.0039  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:14:08] d2.utils.events INFO:  eta: 1:05:58  iter: 15899  total_loss: 0.1107    time: 0.4895  last_time: 0.4743  data_time: 0.0053  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:14:18] d2.utils.events INFO:  eta: 1:05:48  iter: 15919  total_loss: 0.1056    time: 0.4895  last_time: 0.5386  data_time: 0.0055  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:14:27] d2.utils.events INFO:  eta: 1:05:39  iter: 15939  total_loss: 0.1145    time: 0.4895  last_time: 0.4985  data_time: 0.0090  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:14:37] d2.utils.events INFO:  eta: 1:05:30  iter: 15959  total_loss: 0.1231    time: 0.4895  last_time: 0.4975  data_time: 0.0034  last_data_time: 0.0284   lr: 0.01  max_mem: 15030M
[04/15 22:14:47] d2.utils.events INFO:  eta: 1:05:20  iter: 15979  total_loss: 0.1124    time: 0.4895  last_time: 0.4819  data_time: 0.0054  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:14:57] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 22:14:58] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 22:14:58] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 22:14:58] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 22:14:58] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 22:14:58] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 22:14:58] d2.utils.events INFO:  eta: 1:05:10  iter: 15999  total_loss: 0.1068    time: 0.4895  last_time: 0.4801  data_time: 0.0074  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:15:08] d2.utils.events INFO:  eta: 1:05:01  iter: 16019  total_loss: 0.107    time: 0.4895  last_time: 0.4713  data_time: 0.0080  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:15:17] d2.utils.events INFO:  eta: 1:04:51  iter: 16039  total_loss: 0.1229    time: 0.4895  last_time: 0.4838  data_time: 0.0058  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:15:27] d2.utils.events INFO:  eta: 1:04:40  iter: 16059  total_loss: 0.1121    time: 0.4895  last_time: 0.4792  data_time: 0.0072  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:15:37] d2.utils.events INFO:  eta: 1:04:31  iter: 16079  total_loss: 0.1115    time: 0.4895  last_time: 0.4936  data_time: 0.0051  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 22:15:47] d2.utils.events INFO:  eta: 1:04:21  iter: 16099  total_loss: 0.1123    time: 0.4895  last_time: 0.4842  data_time: 0.0041  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:15:57] d2.utils.events INFO:  eta: 1:04:11  iter: 16119  total_loss: 0.09949    time: 0.4895  last_time: 0.4921  data_time: 0.0066  last_data_time: 0.0492   lr: 0.01  max_mem: 15030M
[04/15 22:16:07] d2.utils.events INFO:  eta: 1:04:01  iter: 16139  total_loss: 0.1148    time: 0.4895  last_time: 0.4979  data_time: 0.0086  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:16:16] d2.utils.events INFO:  eta: 1:03:52  iter: 16159  total_loss: 0.1056    time: 0.4895  last_time: 0.4727  data_time: 0.0032  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:16:26] d2.utils.events INFO:  eta: 1:03:42  iter: 16179  total_loss: 0.1058    time: 0.4895  last_time: 0.5008  data_time: 0.0039  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:16:36] d2.utils.events INFO:  eta: 1:03:32  iter: 16199  total_loss: 0.1232    time: 0.4895  last_time: 0.4982  data_time: 0.0048  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:16:46] d2.utils.events INFO:  eta: 1:03:23  iter: 16219  total_loss: 0.1096    time: 0.4895  last_time: 0.4713  data_time: 0.0070  last_data_time: 0.0028   lr: 0.01  max_mem: 15030M
[04/15 22:16:56] d2.utils.events INFO:  eta: 1:03:13  iter: 16239  total_loss: 0.1126    time: 0.4895  last_time: 0.4808  data_time: 0.0066  last_data_time: 0.0032   lr: 0.01  max_mem: 15030M
[04/15 22:17:05] d2.utils.events INFO:  eta: 1:03:03  iter: 16259  total_loss: 0.1134    time: 0.4895  last_time: 0.4649  data_time: 0.0059  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:17:15] d2.utils.events INFO:  eta: 1:02:53  iter: 16279  total_loss: 0.1131    time: 0.4895  last_time: 0.5115  data_time: 0.0044  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:17:25] d2.utils.events INFO:  eta: 1:02:43  iter: 16299  total_loss: 0.1173    time: 0.4895  last_time: 0.5034  data_time: 0.0021  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:17:35] d2.utils.events INFO:  eta: 1:02:33  iter: 16319  total_loss: 0.1076    time: 0.4895  last_time: 0.5013  data_time: 0.0042  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:17:45] d2.utils.events INFO:  eta: 1:02:23  iter: 16339  total_loss: 0.1218    time: 0.4895  last_time: 0.4797  data_time: 0.0052  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:17:55] d2.utils.events INFO:  eta: 1:02:14  iter: 16359  total_loss: 0.1227    time: 0.4895  last_time: 0.4988  data_time: 0.0078  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:18:04] d2.utils.events INFO:  eta: 1:02:04  iter: 16379  total_loss: 0.1096    time: 0.4895  last_time: 0.5031  data_time: 0.0047  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:18:14] d2.utils.events INFO:  eta: 1:01:54  iter: 16399  total_loss: 0.1196    time: 0.4895  last_time: 0.4875  data_time: 0.0063  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:18:24] d2.utils.events INFO:  eta: 1:01:45  iter: 16419  total_loss: 0.1181    time: 0.4895  last_time: 0.4881  data_time: 0.0054  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:18:34] d2.utils.events INFO:  eta: 1:01:35  iter: 16439  total_loss: 0.1082    time: 0.4895  last_time: 0.5227  data_time: 0.0054  last_data_time: 0.0395   lr: 0.01  max_mem: 15030M
[04/15 22:18:44] d2.utils.events INFO:  eta: 1:01:25  iter: 16459  total_loss: 0.1088    time: 0.4895  last_time: 0.4803  data_time: 0.0043  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:18:53] d2.utils.events INFO:  eta: 1:01:14  iter: 16479  total_loss: 0.1179    time: 0.4895  last_time: 0.4822  data_time: 0.0080  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 22:19:03] d2.utils.events INFO:  eta: 1:01:05  iter: 16499  total_loss: 0.1239    time: 0.4895  last_time: 0.4818  data_time: 0.0047  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:19:13] d2.utils.events INFO:  eta: 1:00:54  iter: 16519  total_loss: 0.1116    time: 0.4895  last_time: 0.4763  data_time: 0.0089  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:19:23] d2.utils.events INFO:  eta: 1:00:45  iter: 16539  total_loss: 0.1138    time: 0.4895  last_time: 0.4969  data_time: 0.0040  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:19:33] d2.utils.events INFO:  eta: 1:00:34  iter: 16559  total_loss: 0.115    time: 0.4895  last_time: 0.5001  data_time: 0.0059  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:19:42] d2.utils.events INFO:  eta: 1:00:24  iter: 16579  total_loss: 0.1069    time: 0.4895  last_time: 0.4784  data_time: 0.0053  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:19:52] d2.utils.events INFO:  eta: 1:00:14  iter: 16599  total_loss: 0.1113    time: 0.4895  last_time: 0.4882  data_time: 0.0072  last_data_time: 0.0051   lr: 0.01  max_mem: 15030M
[04/15 22:20:02] d2.utils.events INFO:  eta: 1:00:06  iter: 16619  total_loss: 0.1112    time: 0.4895  last_time: 0.4951  data_time: 0.0038  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 22:20:12] d2.utils.events INFO:  eta: 0:59:55  iter: 16639  total_loss: 0.1168    time: 0.4895  last_time: 0.5034  data_time: 0.0038  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:20:22] d2.utils.events INFO:  eta: 0:59:45  iter: 16659  total_loss: 0.1178    time: 0.4895  last_time: 0.4732  data_time: 0.0043  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 22:20:32] d2.utils.events INFO:  eta: 0:59:34  iter: 16679  total_loss: 0.09985    time: 0.4895  last_time: 0.4914  data_time: 0.0044  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:20:42] d2.utils.events INFO:  eta: 0:59:25  iter: 16699  total_loss: 0.1202    time: 0.4895  last_time: 0.4805  data_time: 0.0047  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 22:20:51] d2.utils.events INFO:  eta: 0:59:15  iter: 16719  total_loss: 0.1159    time: 0.4895  last_time: 0.4927  data_time: 0.0069  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:21:01] d2.utils.events INFO:  eta: 0:59:06  iter: 16739  total_loss: 0.1157    time: 0.4895  last_time: 0.4965  data_time: 0.0048  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:21:11] d2.utils.events INFO:  eta: 0:58:56  iter: 16759  total_loss: 0.1099    time: 0.4895  last_time: 0.5047  data_time: 0.0022  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:21:21] d2.utils.events INFO:  eta: 0:58:47  iter: 16779  total_loss: 0.1086    time: 0.4895  last_time: 0.4704  data_time: 0.0063  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:21:31] d2.utils.events INFO:  eta: 0:58:37  iter: 16799  total_loss: 0.1138    time: 0.4895  last_time: 0.4767  data_time: 0.0040  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:21:41] d2.utils.events INFO:  eta: 0:58:27  iter: 16819  total_loss: 0.1039    time: 0.4895  last_time: 0.4925  data_time: 0.0032  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:21:50] d2.utils.events INFO:  eta: 0:58:17  iter: 16839  total_loss: 0.1165    time: 0.4895  last_time: 0.4950  data_time: 0.0094  last_data_time: 0.0395   lr: 0.01  max_mem: 15030M
[04/15 22:22:00] d2.utils.events INFO:  eta: 0:58:07  iter: 16859  total_loss: 0.1084    time: 0.4895  last_time: 0.4890  data_time: 0.0039  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:22:10] d2.utils.events INFO:  eta: 0:57:58  iter: 16879  total_loss: 0.0968    time: 0.4895  last_time: 0.4970  data_time: 0.0067  last_data_time: 0.0045   lr: 0.01  max_mem: 15030M
[04/15 22:22:20] d2.utils.events INFO:  eta: 0:57:48  iter: 16899  total_loss: 0.0993    time: 0.4895  last_time: 0.4935  data_time: 0.0053  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:22:30] d2.utils.events INFO:  eta: 0:57:38  iter: 16919  total_loss: 0.1172    time: 0.4895  last_time: 0.5124  data_time: 0.0055  last_data_time: 0.0396   lr: 0.01  max_mem: 15030M
[04/15 22:22:39] d2.utils.events INFO:  eta: 0:57:26  iter: 16939  total_loss: 0.1153    time: 0.4895  last_time: 0.4918  data_time: 0.0048  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:22:49] d2.utils.events INFO:  eta: 0:57:16  iter: 16959  total_loss: 0.1146    time: 0.4895  last_time: 0.4973  data_time: 0.0098  last_data_time: 0.0047   lr: 0.01  max_mem: 15030M
[04/15 22:22:59] d2.utils.events INFO:  eta: 0:57:07  iter: 16979  total_loss: 0.1123    time: 0.4895  last_time: 0.4997  data_time: 0.0048  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:23:09] d2.utils.events INFO:  eta: 0:56:58  iter: 16999  total_loss: 0.1096    time: 0.4895  last_time: 0.4959  data_time: 0.0058  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:23:19] d2.utils.events INFO:  eta: 0:56:48  iter: 17019  total_loss: 0.1125    time: 0.4895  last_time: 0.4837  data_time: 0.0037  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:23:29] d2.utils.events INFO:  eta: 0:56:38  iter: 17039  total_loss: 0.1165    time: 0.4895  last_time: 0.4907  data_time: 0.0050  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:23:39] d2.utils.events INFO:  eta: 0:56:28  iter: 17059  total_loss: 0.1191    time: 0.4895  last_time: 0.4829  data_time: 0.0029  last_data_time: 0.0157   lr: 0.01  max_mem: 15030M
[04/15 22:23:48] d2.utils.events INFO:  eta: 0:56:19  iter: 17079  total_loss: 0.1115    time: 0.4895  last_time: 0.5083  data_time: 0.0036  last_data_time: 0.0163   lr: 0.01  max_mem: 15030M
[04/15 22:23:58] d2.utils.events INFO:  eta: 0:56:08  iter: 17099  total_loss: 0.1145    time: 0.4895  last_time: 0.4639  data_time: 0.0042  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:24:08] d2.utils.events INFO:  eta: 0:55:59  iter: 17119  total_loss: 0.1092    time: 0.4895  last_time: 0.4884  data_time: 0.0043  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:24:18] d2.utils.events INFO:  eta: 0:55:49  iter: 17139  total_loss: 0.1087    time: 0.4895  last_time: 0.4812  data_time: 0.0046  last_data_time: 0.0089   lr: 0.01  max_mem: 15030M
[04/15 22:24:28] d2.utils.events INFO:  eta: 0:55:39  iter: 17159  total_loss: 0.1035    time: 0.4895  last_time: 0.5155  data_time: 0.0074  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:24:37] d2.utils.events INFO:  eta: 0:55:30  iter: 17179  total_loss: 0.09885    time: 0.4895  last_time: 0.4663  data_time: 0.0083  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:24:47] d2.utils.events INFO:  eta: 0:55:20  iter: 17199  total_loss: 0.1038    time: 0.4895  last_time: 0.4874  data_time: 0.0032  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:24:57] d2.utils.events INFO:  eta: 0:55:10  iter: 17219  total_loss: 0.1096    time: 0.4895  last_time: 0.4883  data_time: 0.0046  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 22:25:07] d2.utils.events INFO:  eta: 0:55:01  iter: 17239  total_loss: 0.1069    time: 0.4895  last_time: 0.4857  data_time: 0.0100  last_data_time: 0.0268   lr: 0.01  max_mem: 15030M
[04/15 22:25:17] d2.utils.events INFO:  eta: 0:54:51  iter: 17259  total_loss: 0.1074    time: 0.4895  last_time: 0.4918  data_time: 0.0042  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:25:26] d2.utils.events INFO:  eta: 0:54:41  iter: 17279  total_loss: 0.1124    time: 0.4895  last_time: 0.4885  data_time: 0.0043  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:25:36] d2.utils.events INFO:  eta: 0:54:32  iter: 17299  total_loss: 0.1128    time: 0.4895  last_time: 0.5190  data_time: 0.0089  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:25:46] d2.utils.events INFO:  eta: 0:54:22  iter: 17319  total_loss: 0.1034    time: 0.4895  last_time: 0.4879  data_time: 0.0070  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:25:56] d2.utils.events INFO:  eta: 0:54:12  iter: 17339  total_loss: 0.1046    time: 0.4895  last_time: 0.4860  data_time: 0.0043  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:26:06] d2.utils.events INFO:  eta: 0:54:02  iter: 17359  total_loss: 0.1024    time: 0.4895  last_time: 0.4949  data_time: 0.0057  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 22:26:15] d2.utils.events INFO:  eta: 0:53:52  iter: 17379  total_loss: 0.1126    time: 0.4895  last_time: 0.4930  data_time: 0.0049  last_data_time: 0.0043   lr: 0.01  max_mem: 15030M
[04/15 22:26:25] d2.utils.events INFO:  eta: 0:53:43  iter: 17399  total_loss: 0.1129    time: 0.4895  last_time: 0.4976  data_time: 0.0085  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:26:35] d2.utils.events INFO:  eta: 0:53:33  iter: 17419  total_loss: 0.1115    time: 0.4895  last_time: 0.4887  data_time: 0.0046  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:26:45] d2.utils.events INFO:  eta: 0:53:23  iter: 17439  total_loss: 0.1018    time: 0.4895  last_time: 0.4672  data_time: 0.0067  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:26:55] d2.utils.events INFO:  eta: 0:53:13  iter: 17459  total_loss: 0.1059    time: 0.4895  last_time: 0.4814  data_time: 0.0033  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:27:05] d2.utils.events INFO:  eta: 0:53:04  iter: 17479  total_loss: 0.1136    time: 0.4894  last_time: 0.4760  data_time: 0.0056  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:27:14] d2.utils.events INFO:  eta: 0:52:54  iter: 17499  total_loss: 0.1059    time: 0.4894  last_time: 0.4638  data_time: 0.0078  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:27:24] d2.utils.events INFO:  eta: 0:52:46  iter: 17519  total_loss: 0.112    time: 0.4894  last_time: 0.5297  data_time: 0.0088  last_data_time: 0.0413   lr: 0.01  max_mem: 15030M
[04/15 22:27:34] d2.utils.events INFO:  eta: 0:52:36  iter: 17539  total_loss: 0.1013    time: 0.4894  last_time: 0.4620  data_time: 0.0035  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:27:44] d2.utils.events INFO:  eta: 0:52:26  iter: 17559  total_loss: 0.09946    time: 0.4894  last_time: 0.5156  data_time: 0.0054  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:27:54] d2.utils.events INFO:  eta: 0:52:17  iter: 17579  total_loss: 0.1116    time: 0.4894  last_time: 0.4790  data_time: 0.0035  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:28:03] d2.utils.events INFO:  eta: 0:52:07  iter: 17599  total_loss: 0.1141    time: 0.4894  last_time: 0.5077  data_time: 0.0069  last_data_time: 0.0111   lr: 0.01  max_mem: 15030M
[04/15 22:28:13] d2.utils.events INFO:  eta: 0:51:56  iter: 17619  total_loss: 0.1112    time: 0.4894  last_time: 0.4821  data_time: 0.0058  last_data_time: 0.0017   lr: 0.01  max_mem: 15030M
[04/15 22:28:23] d2.utils.events INFO:  eta: 0:51:46  iter: 17639  total_loss: 0.1136    time: 0.4894  last_time: 0.4757  data_time: 0.0051  last_data_time: 0.0025   lr: 0.01  max_mem: 15030M
[04/15 22:28:33] d2.utils.events INFO:  eta: 0:51:38  iter: 17659  total_loss: 0.09758    time: 0.4894  last_time: 0.4891  data_time: 0.0055  last_data_time: 0.0392   lr: 0.01  max_mem: 15030M
[04/15 22:28:43] d2.utils.events INFO:  eta: 0:51:28  iter: 17679  total_loss: 0.1176    time: 0.4894  last_time: 0.4941  data_time: 0.0055  last_data_time: 0.0022   lr: 0.01  max_mem: 15030M
[04/15 22:28:52] d2.utils.events INFO:  eta: 0:51:17  iter: 17699  total_loss: 0.1061    time: 0.4894  last_time: 0.4908  data_time: 0.0029  last_data_time: 0.0038   lr: 0.01  max_mem: 15030M
[04/15 22:29:02] d2.utils.events INFO:  eta: 0:51:09  iter: 17719  total_loss: 0.1123    time: 0.4894  last_time: 0.5105  data_time: 0.0040  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:29:12] d2.utils.events INFO:  eta: 0:50:59  iter: 17739  total_loss: 0.1089    time: 0.4894  last_time: 0.5156  data_time: 0.0058  last_data_time: 0.0272   lr: 0.01  max_mem: 15030M
[04/15 22:29:22] d2.utils.events INFO:  eta: 0:50:49  iter: 17759  total_loss: 0.1124    time: 0.4894  last_time: 0.5244  data_time: 0.0094  last_data_time: 0.0018   lr: 0.01  max_mem: 15030M
[04/15 22:29:32] d2.utils.events INFO:  eta: 0:50:39  iter: 17779  total_loss: 0.1082    time: 0.4894  last_time: 0.4926  data_time: 0.0058  last_data_time: 0.0017   lr: 0.01  max_mem: 15030M
[04/15 22:29:42] d2.utils.events INFO:  eta: 0:50:30  iter: 17799  total_loss: 0.1186    time: 0.4894  last_time: 0.4849  data_time: 0.0076  last_data_time: 0.0230   lr: 0.01  max_mem: 15030M
[04/15 22:29:51] d2.utils.events INFO:  eta: 0:50:20  iter: 17819  total_loss: 0.1172    time: 0.4894  last_time: 0.4827  data_time: 0.0062  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:30:01] d2.utils.events INFO:  eta: 0:50:09  iter: 17839  total_loss: 0.1094    time: 0.4894  last_time: 0.4798  data_time: 0.0039  last_data_time: 0.0023   lr: 0.01  max_mem: 15030M
[04/15 22:30:11] d2.utils.events INFO:  eta: 0:49:59  iter: 17859  total_loss: 0.1077    time: 0.4894  last_time: 0.4637  data_time: 0.0035  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:30:21] d2.utils.events INFO:  eta: 0:49:50  iter: 17879  total_loss: 0.1179    time: 0.4894  last_time: 0.4941  data_time: 0.0038  last_data_time: 0.0021   lr: 0.01  max_mem: 15030M
[04/15 22:30:30] d2.utils.events INFO:  eta: 0:49:40  iter: 17899  total_loss: 0.1101    time: 0.4894  last_time: 0.5025  data_time: 0.0049  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:30:40] d2.utils.events INFO:  eta: 0:49:30  iter: 17919  total_loss: 0.1003    time: 0.4894  last_time: 0.4814  data_time: 0.0031  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:30:50] d2.utils.events INFO:  eta: 0:49:22  iter: 17939  total_loss: 0.1125    time: 0.4894  last_time: 0.5011  data_time: 0.0059  last_data_time: 0.0019   lr: 0.01  max_mem: 15030M
[04/15 22:31:00] d2.utils.events INFO:  eta: 0:49:11  iter: 17959  total_loss: 0.09743    time: 0.4894  last_time: 0.4878  data_time: 0.0073  last_data_time: 0.0020   lr: 0.01  max_mem: 15030M
[04/15 22:31:10] d2.utils.events INFO:  eta: 0:49:01  iter: 17979  total_loss: 0.1084    time: 0.4894  last_time: 0.5289  data_time: 0.0073  last_data_time: 0.0169   lr: 0.01  max_mem: 15030M
[04/15 22:31:20] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 22:31:20] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 22:31:20] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 22:31:20] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 22:31:20] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 22:31:20] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 22:31:21] d2.utils.events INFO:  eta: 0:48:51  iter: 17999  total_loss: 0.1091    time: 0.4894  last_time: 0.5041  data_time: 0.0076  last_data_time: 0.0024   lr: 0.01  max_mem: 15030M
[04/15 22:31:30] d2.utils.events INFO:  eta: 0:48:41  iter: 18019  total_loss: 0.1071    time: 0.4894  last_time: 0.4878  data_time: 0.0077  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 22:31:40] d2.utils.events INFO:  eta: 0:48:30  iter: 18039  total_loss: 0.1051    time: 0.4894  last_time: 0.4931  data_time: 0.0030  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:31:51] d2.utils.events INFO:  eta: 0:48:21  iter: 18059  total_loss: 0.09715    time: 0.4895  last_time: 0.4889  data_time: 0.0113  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 22:32:00] d2.utils.events INFO:  eta: 0:48:11  iter: 18079  total_loss: 0.1035    time: 0.4895  last_time: 0.5229  data_time: 0.0052  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:32:10] d2.utils.events INFO:  eta: 0:48:02  iter: 18099  total_loss: 0.1016    time: 0.4895  last_time: 0.5003  data_time: 0.0058  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:32:20] d2.utils.events INFO:  eta: 0:47:52  iter: 18119  total_loss: 0.1062    time: 0.4895  last_time: 0.4903  data_time: 0.0052  last_data_time: 0.0174   lr: 0.001  max_mem: 15030M
[04/15 22:32:30] d2.utils.events INFO:  eta: 0:47:43  iter: 18139  total_loss: 0.1046    time: 0.4894  last_time: 0.5062  data_time: 0.0027  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:32:39] d2.utils.events INFO:  eta: 0:47:33  iter: 18159  total_loss: 0.1016    time: 0.4894  last_time: 0.4862  data_time: 0.0031  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:32:49] d2.utils.events INFO:  eta: 0:47:23  iter: 18179  total_loss: 0.1131    time: 0.4894  last_time: 0.4984  data_time: 0.0057  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:32:59] d2.utils.events INFO:  eta: 0:47:13  iter: 18199  total_loss: 0.104    time: 0.4894  last_time: 0.5218  data_time: 0.0086  last_data_time: 0.0295   lr: 0.001  max_mem: 15030M
[04/15 22:33:09] d2.utils.events INFO:  eta: 0:47:03  iter: 18219  total_loss: 0.1065    time: 0.4895  last_time: 0.4657  data_time: 0.0041  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:33:19] d2.utils.events INFO:  eta: 0:46:53  iter: 18239  total_loss: 0.1018    time: 0.4895  last_time: 0.5032  data_time: 0.0069  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:33:29] d2.utils.events INFO:  eta: 0:46:44  iter: 18259  total_loss: 0.0987    time: 0.4894  last_time: 0.4704  data_time: 0.0029  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:33:38] d2.utils.events INFO:  eta: 0:46:35  iter: 18279  total_loss: 0.1006    time: 0.4895  last_time: 0.4960  data_time: 0.0068  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:33:48] d2.utils.events INFO:  eta: 0:46:24  iter: 18299  total_loss: 0.1042    time: 0.4895  last_time: 0.4844  data_time: 0.0043  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:33:58] d2.utils.events INFO:  eta: 0:46:15  iter: 18319  total_loss: 0.1051    time: 0.4895  last_time: 0.4897  data_time: 0.0075  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:34:08] d2.utils.events INFO:  eta: 0:46:06  iter: 18339  total_loss: 0.09891    time: 0.4895  last_time: 0.4969  data_time: 0.0090  last_data_time: 0.0522   lr: 0.001  max_mem: 15030M
[04/15 22:34:18] d2.utils.events INFO:  eta: 0:45:56  iter: 18359  total_loss: 0.1066    time: 0.4895  last_time: 0.5041  data_time: 0.0048  last_data_time: 0.0242   lr: 0.001  max_mem: 15030M
[04/15 22:34:28] d2.utils.events INFO:  eta: 0:45:46  iter: 18379  total_loss: 0.09518    time: 0.4895  last_time: 0.4896  data_time: 0.0062  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:34:38] d2.utils.events INFO:  eta: 0:45:36  iter: 18399  total_loss: 0.09977    time: 0.4895  last_time: 0.4860  data_time: 0.0045  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:34:47] d2.utils.events INFO:  eta: 0:45:27  iter: 18419  total_loss: 0.104    time: 0.4895  last_time: 0.4922  data_time: 0.0041  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:34:57] d2.utils.events INFO:  eta: 0:45:18  iter: 18439  total_loss: 0.1027    time: 0.4895  last_time: 0.4947  data_time: 0.0024  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:35:07] d2.utils.events INFO:  eta: 0:45:08  iter: 18459  total_loss: 0.09723    time: 0.4895  last_time: 0.5124  data_time: 0.0058  last_data_time: 0.0147   lr: 0.001  max_mem: 15030M
[04/15 22:35:17] d2.utils.events INFO:  eta: 0:44:59  iter: 18479  total_loss: 0.1015    time: 0.4895  last_time: 0.4913  data_time: 0.0069  last_data_time: 0.0036   lr: 0.001  max_mem: 15030M
[04/15 22:35:27] d2.utils.events INFO:  eta: 0:44:50  iter: 18499  total_loss: 0.1096    time: 0.4895  last_time: 0.4810  data_time: 0.0054  last_data_time: 0.0045   lr: 0.001  max_mem: 15030M
[04/15 22:35:36] d2.utils.events INFO:  eta: 0:44:40  iter: 18519  total_loss: 0.1037    time: 0.4895  last_time: 0.4686  data_time: 0.0066  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:35:46] d2.utils.events INFO:  eta: 0:44:30  iter: 18539  total_loss: 0.1059    time: 0.4895  last_time: 0.4911  data_time: 0.0050  last_data_time: 0.0024   lr: 0.001  max_mem: 15030M
[04/15 22:35:56] d2.utils.events INFO:  eta: 0:44:21  iter: 18559  total_loss: 0.09313    time: 0.4895  last_time: 0.4834  data_time: 0.0026  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:36:06] d2.utils.events INFO:  eta: 0:44:11  iter: 18579  total_loss: 0.1051    time: 0.4895  last_time: 0.5107  data_time: 0.0044  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:36:16] d2.utils.events INFO:  eta: 0:44:01  iter: 18599  total_loss: 0.0988    time: 0.4895  last_time: 0.4816  data_time: 0.0066  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:36:26] d2.utils.events INFO:  eta: 0:43:51  iter: 18619  total_loss: 0.0958    time: 0.4895  last_time: 0.5018  data_time: 0.0075  last_data_time: 0.0259   lr: 0.001  max_mem: 15030M
[04/15 22:36:35] d2.utils.events INFO:  eta: 0:43:42  iter: 18639  total_loss: 0.09163    time: 0.4895  last_time: 0.4817  data_time: 0.0029  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:36:45] d2.utils.events INFO:  eta: 0:43:32  iter: 18659  total_loss: 0.1029    time: 0.4895  last_time: 0.4866  data_time: 0.0071  last_data_time: 0.0145   lr: 0.001  max_mem: 15030M
[04/15 22:36:55] d2.utils.events INFO:  eta: 0:43:21  iter: 18679  total_loss: 0.09864    time: 0.4894  last_time: 0.4917  data_time: 0.0050  last_data_time: 0.0035   lr: 0.001  max_mem: 15030M
[04/15 22:37:05] d2.utils.events INFO:  eta: 0:43:12  iter: 18699  total_loss: 0.1004    time: 0.4894  last_time: 0.4855  data_time: 0.0063  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:37:14] d2.utils.events INFO:  eta: 0:43:01  iter: 18719  total_loss: 0.09475    time: 0.4894  last_time: 0.4986  data_time: 0.0062  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:37:24] d2.utils.events INFO:  eta: 0:42:51  iter: 18739  total_loss: 0.107    time: 0.4894  last_time: 0.4942  data_time: 0.0053  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:37:34] d2.utils.events INFO:  eta: 0:42:41  iter: 18759  total_loss: 0.1007    time: 0.4894  last_time: 0.4946  data_time: 0.0083  last_data_time: 0.0256   lr: 0.001  max_mem: 15030M
[04/15 22:37:44] d2.utils.events INFO:  eta: 0:42:31  iter: 18779  total_loss: 0.09605    time: 0.4894  last_time: 0.4569  data_time: 0.0038  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:37:54] d2.utils.events INFO:  eta: 0:42:21  iter: 18799  total_loss: 0.09706    time: 0.4894  last_time: 0.4794  data_time: 0.0054  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:38:03] d2.utils.events INFO:  eta: 0:42:12  iter: 18819  total_loss: 0.09453    time: 0.4894  last_time: 0.5005  data_time: 0.0042  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:38:13] d2.utils.events INFO:  eta: 0:42:02  iter: 18839  total_loss: 0.1007    time: 0.4894  last_time: 0.4993  data_time: 0.0077  last_data_time: 0.0264   lr: 0.001  max_mem: 15030M
[04/15 22:38:23] d2.utils.events INFO:  eta: 0:41:54  iter: 18859  total_loss: 0.1014    time: 0.4894  last_time: 0.4945  data_time: 0.0031  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:38:33] d2.utils.events INFO:  eta: 0:41:44  iter: 18879  total_loss: 0.09873    time: 0.4894  last_time: 0.5087  data_time: 0.0091  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:38:43] d2.utils.events INFO:  eta: 0:41:34  iter: 18899  total_loss: 0.1037    time: 0.4894  last_time: 0.4831  data_time: 0.0020  last_data_time: 0.0024   lr: 0.001  max_mem: 15030M
[04/15 22:38:52] d2.utils.events INFO:  eta: 0:41:24  iter: 18919  total_loss: 0.1057    time: 0.4894  last_time: 0.4820  data_time: 0.0058  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:39:02] d2.utils.events INFO:  eta: 0:41:13  iter: 18939  total_loss: 0.1094    time: 0.4894  last_time: 0.5108  data_time: 0.0071  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:39:12] d2.utils.events INFO:  eta: 0:41:03  iter: 18959  total_loss: 0.09446    time: 0.4894  last_time: 0.4968  data_time: 0.0095  last_data_time: 0.0226   lr: 0.001  max_mem: 15030M
[04/15 22:39:22] d2.utils.events INFO:  eta: 0:40:54  iter: 18979  total_loss: 0.1012    time: 0.4894  last_time: 0.5018  data_time: 0.0068  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:39:32] d2.utils.events INFO:  eta: 0:40:44  iter: 18999  total_loss: 0.09611    time: 0.4894  last_time: 0.4741  data_time: 0.0060  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:39:41] d2.utils.events INFO:  eta: 0:40:34  iter: 19019  total_loss: 0.1005    time: 0.4894  last_time: 0.4868  data_time: 0.0040  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:39:51] d2.utils.events INFO:  eta: 0:40:24  iter: 19039  total_loss: 0.1004    time: 0.4894  last_time: 0.5051  data_time: 0.0056  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:40:01] d2.utils.events INFO:  eta: 0:40:14  iter: 19059  total_loss: 0.1023    time: 0.4894  last_time: 0.4802  data_time: 0.0032  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:40:11] d2.utils.events INFO:  eta: 0:40:05  iter: 19079  total_loss: 0.101    time: 0.4894  last_time: 0.4930  data_time: 0.0022  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:40:21] d2.utils.events INFO:  eta: 0:39:55  iter: 19099  total_loss: 0.1061    time: 0.4894  last_time: 0.4864  data_time: 0.0046  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:40:30] d2.utils.events INFO:  eta: 0:39:45  iter: 19119  total_loss: 0.09493    time: 0.4894  last_time: 0.4910  data_time: 0.0053  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:40:40] d2.utils.events INFO:  eta: 0:39:35  iter: 19139  total_loss: 0.102    time: 0.4894  last_time: 0.4844  data_time: 0.0051  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:40:50] d2.utils.events INFO:  eta: 0:39:26  iter: 19159  total_loss: 0.09809    time: 0.4894  last_time: 0.4877  data_time: 0.0064  last_data_time: 0.0034   lr: 0.001  max_mem: 15030M
[04/15 22:41:00] d2.utils.events INFO:  eta: 0:39:16  iter: 19179  total_loss: 0.1055    time: 0.4894  last_time: 0.5065  data_time: 0.0071  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 22:41:10] d2.utils.events INFO:  eta: 0:39:06  iter: 19199  total_loss: 0.1029    time: 0.4894  last_time: 0.5098  data_time: 0.0059  last_data_time: 0.0377   lr: 0.001  max_mem: 15030M
[04/15 22:41:19] d2.utils.events INFO:  eta: 0:38:56  iter: 19219  total_loss: 0.09437    time: 0.4894  last_time: 0.5020  data_time: 0.0045  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:41:29] d2.utils.events INFO:  eta: 0:38:46  iter: 19239  total_loss: 0.1024    time: 0.4894  last_time: 0.5160  data_time: 0.0048  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:41:39] d2.utils.events INFO:  eta: 0:38:37  iter: 19259  total_loss: 0.1033    time: 0.4894  last_time: 0.4933  data_time: 0.0054  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:41:49] d2.utils.events INFO:  eta: 0:38:27  iter: 19279  total_loss: 0.09352    time: 0.4894  last_time: 0.4541  data_time: 0.0027  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:41:59] d2.utils.events INFO:  eta: 0:38:17  iter: 19299  total_loss: 0.0961    time: 0.4894  last_time: 0.4899  data_time: 0.0100  last_data_time: 0.0045   lr: 0.001  max_mem: 15030M
[04/15 22:42:08] d2.utils.events INFO:  eta: 0:38:06  iter: 19319  total_loss: 0.1044    time: 0.4894  last_time: 0.4689  data_time: 0.0061  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:42:18] d2.utils.events INFO:  eta: 0:37:56  iter: 19339  total_loss: 0.1006    time: 0.4894  last_time: 0.4954  data_time: 0.0024  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:42:28] d2.utils.events INFO:  eta: 0:37:47  iter: 19359  total_loss: 0.09883    time: 0.4894  last_time: 0.4670  data_time: 0.0063  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:42:38] d2.utils.events INFO:  eta: 0:37:37  iter: 19379  total_loss: 0.09628    time: 0.4894  last_time: 0.5001  data_time: 0.0062  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:42:48] d2.utils.events INFO:  eta: 0:37:27  iter: 19399  total_loss: 0.09955    time: 0.4894  last_time: 0.5161  data_time: 0.0044  last_data_time: 0.0034   lr: 0.001  max_mem: 15030M
[04/15 22:42:58] d2.utils.events INFO:  eta: 0:37:17  iter: 19419  total_loss: 0.09645    time: 0.4894  last_time: 0.4854  data_time: 0.0070  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:43:07] d2.utils.events INFO:  eta: 0:37:07  iter: 19439  total_loss: 0.09453    time: 0.4894  last_time: 0.4862  data_time: 0.0093  last_data_time: 0.0265   lr: 0.001  max_mem: 15030M
[04/15 22:43:17] d2.utils.events INFO:  eta: 0:36:57  iter: 19459  total_loss: 0.1023    time: 0.4894  last_time: 0.4773  data_time: 0.0037  last_data_time: 0.0100   lr: 0.001  max_mem: 15030M
[04/15 22:43:27] d2.utils.events INFO:  eta: 0:36:46  iter: 19479  total_loss: 0.1049    time: 0.4894  last_time: 0.4931  data_time: 0.0025  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:43:37] d2.utils.events INFO:  eta: 0:36:37  iter: 19499  total_loss: 0.09587    time: 0.4894  last_time: 0.4773  data_time: 0.0049  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:43:47] d2.utils.events INFO:  eta: 0:36:27  iter: 19519  total_loss: 0.103    time: 0.4894  last_time: 0.5243  data_time: 0.0133  last_data_time: 0.0381   lr: 0.001  max_mem: 15030M
[04/15 22:43:56] d2.utils.events INFO:  eta: 0:36:18  iter: 19539  total_loss: 0.1062    time: 0.4894  last_time: 0.4794  data_time: 0.0033  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:44:06] d2.utils.events INFO:  eta: 0:36:08  iter: 19559  total_loss: 0.09084    time: 0.4894  last_time: 0.4845  data_time: 0.0061  last_data_time: 0.0189   lr: 0.001  max_mem: 15030M
[04/15 22:44:16] d2.utils.events INFO:  eta: 0:35:57  iter: 19579  total_loss: 0.1015    time: 0.4894  last_time: 0.4894  data_time: 0.0090  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:44:26] d2.utils.events INFO:  eta: 0:35:47  iter: 19599  total_loss: 0.1055    time: 0.4894  last_time: 0.4794  data_time: 0.0106  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:44:35] d2.utils.events INFO:  eta: 0:35:37  iter: 19619  total_loss: 0.1002    time: 0.4894  last_time: 0.4761  data_time: 0.0100  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:44:45] d2.utils.events INFO:  eta: 0:35:28  iter: 19639  total_loss: 0.108    time: 0.4894  last_time: 0.5010  data_time: 0.0071  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:44:55] d2.utils.events INFO:  eta: 0:35:18  iter: 19659  total_loss: 0.1008    time: 0.4894  last_time: 0.4929  data_time: 0.0072  last_data_time: 0.0223   lr: 0.001  max_mem: 15030M
[04/15 22:45:05] d2.utils.events INFO:  eta: 0:35:09  iter: 19679  total_loss: 0.09661    time: 0.4894  last_time: 0.4848  data_time: 0.0058  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:45:15] d2.utils.events INFO:  eta: 0:34:58  iter: 19699  total_loss: 0.09843    time: 0.4894  last_time: 0.5044  data_time: 0.0054  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 22:45:24] d2.utils.events INFO:  eta: 0:34:48  iter: 19719  total_loss: 0.1043    time: 0.4894  last_time: 0.4837  data_time: 0.0032  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:45:34] d2.utils.events INFO:  eta: 0:34:38  iter: 19739  total_loss: 0.09883    time: 0.4894  last_time: 0.4748  data_time: 0.0057  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:45:44] d2.utils.events INFO:  eta: 0:34:29  iter: 19759  total_loss: 0.1032    time: 0.4894  last_time: 0.4904  data_time: 0.0079  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:45:54] d2.utils.events INFO:  eta: 0:34:18  iter: 19779  total_loss: 0.1037    time: 0.4894  last_time: 0.4746  data_time: 0.0102  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 22:46:03] d2.utils.events INFO:  eta: 0:34:08  iter: 19799  total_loss: 0.1004    time: 0.4894  last_time: 0.4816  data_time: 0.0058  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:46:13] d2.utils.events INFO:  eta: 0:33:58  iter: 19819  total_loss: 0.1029    time: 0.4894  last_time: 0.5278  data_time: 0.0034  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:46:23] d2.utils.events INFO:  eta: 0:33:48  iter: 19839  total_loss: 0.09677    time: 0.4894  last_time: 0.4804  data_time: 0.0043  last_data_time: 0.0026   lr: 0.001  max_mem: 15030M
[04/15 22:46:33] d2.utils.events INFO:  eta: 0:33:39  iter: 19859  total_loss: 0.09288    time: 0.4894  last_time: 0.4889  data_time: 0.0068  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:46:43] d2.utils.events INFO:  eta: 0:33:29  iter: 19879  total_loss: 0.09676    time: 0.4894  last_time: 0.4764  data_time: 0.0121  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:46:53] d2.utils.events INFO:  eta: 0:33:19  iter: 19899  total_loss: 0.09609    time: 0.4894  last_time: 0.4894  data_time: 0.0099  last_data_time: 0.0186   lr: 0.001  max_mem: 15030M
[04/15 22:47:02] d2.utils.events INFO:  eta: 0:33:10  iter: 19919  total_loss: 0.107    time: 0.4894  last_time: 0.4870  data_time: 0.0076  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:47:12] d2.utils.events INFO:  eta: 0:33:01  iter: 19939  total_loss: 0.09547    time: 0.4894  last_time: 0.4718  data_time: 0.0092  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:47:22] d2.utils.events INFO:  eta: 0:32:51  iter: 19959  total_loss: 0.08985    time: 0.4894  last_time: 0.4730  data_time: 0.0091  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:47:32] d2.utils.events INFO:  eta: 0:32:41  iter: 19979  total_loss: 0.1103    time: 0.4894  last_time: 0.4860  data_time: 0.0132  last_data_time: 0.0392   lr: 0.001  max_mem: 15030M
[04/15 22:47:42] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/r50/model_0019999.pth
[04/15 22:47:42] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 22:47:43] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 22:47:43] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 22:47:43] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 22:47:43] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 22:47:43] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 22:47:43] d2.utils.events INFO:  eta: 0:32:31  iter: 19999  total_loss: 0.09795    time: 0.4894  last_time: 0.4928  data_time: 0.0062  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:47:53] d2.utils.events INFO:  eta: 0:32:21  iter: 20019  total_loss: 0.1024    time: 0.4894  last_time: 0.4649  data_time: 0.0067  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:48:03] d2.utils.events INFO:  eta: 0:32:12  iter: 20039  total_loss: 0.09702    time: 0.4894  last_time: 0.5214  data_time: 0.0096  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:48:12] d2.utils.events INFO:  eta: 0:32:02  iter: 20059  total_loss: 0.09901    time: 0.4894  last_time: 0.4748  data_time: 0.0057  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:48:22] d2.utils.events INFO:  eta: 0:31:52  iter: 20079  total_loss: 0.099    time: 0.4894  last_time: 0.4789  data_time: 0.0021  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:48:32] d2.utils.events INFO:  eta: 0:31:43  iter: 20099  total_loss: 0.09014    time: 0.4894  last_time: 0.4916  data_time: 0.0096  last_data_time: 0.0144   lr: 0.001  max_mem: 15030M
[04/15 22:48:42] d2.utils.events INFO:  eta: 0:31:33  iter: 20119  total_loss: 0.09736    time: 0.4894  last_time: 0.4962  data_time: 0.0107  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:48:52] d2.utils.events INFO:  eta: 0:31:24  iter: 20139  total_loss: 0.09817    time: 0.4894  last_time: 0.4900  data_time: 0.0057  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:49:02] d2.utils.events INFO:  eta: 0:31:14  iter: 20159  total_loss: 0.1026    time: 0.4894  last_time: 0.4868  data_time: 0.0043  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:49:12] d2.utils.events INFO:  eta: 0:31:04  iter: 20179  total_loss: 0.1038    time: 0.4894  last_time: 0.4949  data_time: 0.0091  last_data_time: 0.0268   lr: 0.001  max_mem: 15030M
[04/15 22:49:22] d2.utils.events INFO:  eta: 0:30:54  iter: 20199  total_loss: 0.09639    time: 0.4894  last_time: 0.4834  data_time: 0.0091  last_data_time: 0.0149   lr: 0.001  max_mem: 15030M
[04/15 22:49:32] d2.utils.events INFO:  eta: 0:30:44  iter: 20219  total_loss: 0.1023    time: 0.4894  last_time: 0.4883  data_time: 0.0075  last_data_time: 0.0352   lr: 0.001  max_mem: 15030M
[04/15 22:49:42] d2.utils.events INFO:  eta: 0:30:35  iter: 20239  total_loss: 0.0973    time: 0.4894  last_time: 0.5395  data_time: 0.0064  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:49:51] d2.utils.events INFO:  eta: 0:30:25  iter: 20259  total_loss: 0.09517    time: 0.4894  last_time: 0.5043  data_time: 0.0064  last_data_time: 0.0186   lr: 0.001  max_mem: 15030M
[04/15 22:50:01] d2.utils.events INFO:  eta: 0:30:16  iter: 20279  total_loss: 0.09537    time: 0.4894  last_time: 0.4977  data_time: 0.0082  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:50:11] d2.utils.events INFO:  eta: 0:30:06  iter: 20299  total_loss: 0.09994    time: 0.4894  last_time: 0.4842  data_time: 0.0039  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:50:21] d2.utils.events INFO:  eta: 0:29:56  iter: 20319  total_loss: 0.1022    time: 0.4894  last_time: 0.5113  data_time: 0.0042  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:50:31] d2.utils.events INFO:  eta: 0:29:46  iter: 20339  total_loss: 0.09227    time: 0.4894  last_time: 0.4867  data_time: 0.0081  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:50:41] d2.utils.events INFO:  eta: 0:29:36  iter: 20359  total_loss: 0.09618    time: 0.4894  last_time: 0.5007  data_time: 0.0089  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:50:50] d2.utils.events INFO:  eta: 0:29:27  iter: 20379  total_loss: 0.1019    time: 0.4894  last_time: 0.4879  data_time: 0.0066  last_data_time: 0.0051   lr: 0.001  max_mem: 15030M
[04/15 22:51:00] d2.utils.events INFO:  eta: 0:29:17  iter: 20399  total_loss: 0.09911    time: 0.4894  last_time: 0.4969  data_time: 0.0070  last_data_time: 0.0164   lr: 0.001  max_mem: 15030M
[04/15 22:51:10] d2.utils.events INFO:  eta: 0:29:07  iter: 20419  total_loss: 0.1009    time: 0.4894  last_time: 0.4964  data_time: 0.0101  last_data_time: 0.0233   lr: 0.001  max_mem: 15030M
[04/15 22:51:20] d2.utils.events INFO:  eta: 0:28:58  iter: 20439  total_loss: 0.101    time: 0.4894  last_time: 0.5086  data_time: 0.0069  last_data_time: 0.0236   lr: 0.001  max_mem: 15030M
[04/15 22:51:30] d2.utils.events INFO:  eta: 0:28:49  iter: 20459  total_loss: 0.1054    time: 0.4894  last_time: 0.4912  data_time: 0.0074  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:51:40] d2.utils.events INFO:  eta: 0:28:40  iter: 20479  total_loss: 0.08845    time: 0.4894  last_time: 0.4884  data_time: 0.0084  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:51:50] d2.utils.events INFO:  eta: 0:28:30  iter: 20499  total_loss: 0.09729    time: 0.4894  last_time: 0.4740  data_time: 0.0053  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:51:59] d2.utils.events INFO:  eta: 0:28:20  iter: 20519  total_loss: 0.0929    time: 0.4894  last_time: 0.4878  data_time: 0.0068  last_data_time: 0.0028   lr: 0.001  max_mem: 15030M
[04/15 22:52:09] d2.utils.events INFO:  eta: 0:28:10  iter: 20539  total_loss: 0.1015    time: 0.4894  last_time: 0.4777  data_time: 0.0056  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:52:19] d2.utils.events INFO:  eta: 0:28:00  iter: 20559  total_loss: 0.09732    time: 0.4894  last_time: 0.4942  data_time: 0.0053  last_data_time: 0.0044   lr: 0.001  max_mem: 15030M
[04/15 22:52:29] d2.utils.events INFO:  eta: 0:27:51  iter: 20579  total_loss: 0.1011    time: 0.4894  last_time: 0.4883  data_time: 0.0039  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:52:39] d2.utils.events INFO:  eta: 0:27:42  iter: 20599  total_loss: 0.09107    time: 0.4894  last_time: 0.4911  data_time: 0.0047  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:52:49] d2.utils.events INFO:  eta: 0:27:32  iter: 20619  total_loss: 0.09584    time: 0.4894  last_time: 0.4757  data_time: 0.0086  last_data_time: 0.0272   lr: 0.001  max_mem: 15030M
[04/15 22:52:59] d2.utils.events INFO:  eta: 0:27:22  iter: 20639  total_loss: 0.0959    time: 0.4894  last_time: 0.4860  data_time: 0.0072  last_data_time: 0.0153   lr: 0.001  max_mem: 15030M
[04/15 22:53:08] d2.utils.events INFO:  eta: 0:27:13  iter: 20659  total_loss: 0.09909    time: 0.4894  last_time: 0.5129  data_time: 0.0079  last_data_time: 0.0264   lr: 0.001  max_mem: 15030M
[04/15 22:53:18] d2.utils.events INFO:  eta: 0:27:03  iter: 20679  total_loss: 0.09959    time: 0.4894  last_time: 0.5131  data_time: 0.0043  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:53:28] d2.utils.events INFO:  eta: 0:26:54  iter: 20699  total_loss: 0.09981    time: 0.4894  last_time: 0.4777  data_time: 0.0044  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:53:38] d2.utils.events INFO:  eta: 0:26:45  iter: 20719  total_loss: 0.09636    time: 0.4894  last_time: 0.4934  data_time: 0.0085  last_data_time: 0.0189   lr: 0.001  max_mem: 15030M
[04/15 22:53:48] d2.utils.events INFO:  eta: 0:26:36  iter: 20739  total_loss: 0.1054    time: 0.4894  last_time: 0.4820  data_time: 0.0066  last_data_time: 0.0028   lr: 0.001  max_mem: 15030M
[04/15 22:53:58] d2.utils.events INFO:  eta: 0:26:26  iter: 20759  total_loss: 0.1044    time: 0.4894  last_time: 0.5009  data_time: 0.0062  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:54:08] d2.utils.events INFO:  eta: 0:26:17  iter: 20779  total_loss: 0.09531    time: 0.4894  last_time: 0.5107  data_time: 0.0050  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:54:17] d2.utils.events INFO:  eta: 0:26:07  iter: 20799  total_loss: 0.09593    time: 0.4894  last_time: 0.4858  data_time: 0.0088  last_data_time: 0.0440   lr: 0.001  max_mem: 15030M
[04/15 22:54:27] d2.utils.events INFO:  eta: 0:25:57  iter: 20819  total_loss: 0.09889    time: 0.4894  last_time: 0.4595  data_time: 0.0080  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 22:54:37] d2.utils.events INFO:  eta: 0:25:48  iter: 20839  total_loss: 0.1065    time: 0.4894  last_time: 0.4974  data_time: 0.0080  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:54:47] d2.utils.events INFO:  eta: 0:25:38  iter: 20859  total_loss: 0.09538    time: 0.4894  last_time: 0.4739  data_time: 0.0052  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:54:57] d2.utils.events INFO:  eta: 0:25:28  iter: 20879  total_loss: 0.09627    time: 0.4894  last_time: 0.5107  data_time: 0.0084  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:55:07] d2.utils.events INFO:  eta: 0:25:19  iter: 20899  total_loss: 0.1039    time: 0.4894  last_time: 0.5012  data_time: 0.0075  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 22:55:16] d2.utils.events INFO:  eta: 0:25:10  iter: 20919  total_loss: 0.09629    time: 0.4894  last_time: 0.4882  data_time: 0.0096  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:55:26] d2.utils.events INFO:  eta: 0:25:00  iter: 20939  total_loss: 0.09408    time: 0.4894  last_time: 0.4951  data_time: 0.0063  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:55:36] d2.utils.events INFO:  eta: 0:24:50  iter: 20959  total_loss: 0.09612    time: 0.4894  last_time: 0.4994  data_time: 0.0085  last_data_time: 0.0040   lr: 0.001  max_mem: 15030M
[04/15 22:55:46] d2.utils.events INFO:  eta: 0:24:41  iter: 20979  total_loss: 0.09847    time: 0.4894  last_time: 0.4927  data_time: 0.0063  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:55:56] d2.utils.events INFO:  eta: 0:24:31  iter: 20999  total_loss: 0.09578    time: 0.4894  last_time: 0.4916  data_time: 0.0055  last_data_time: 0.0144   lr: 0.001  max_mem: 15030M
[04/15 22:56:06] d2.utils.events INFO:  eta: 0:24:21  iter: 21019  total_loss: 0.09232    time: 0.4894  last_time: 0.5312  data_time: 0.0066  last_data_time: 0.0376   lr: 0.001  max_mem: 15030M
[04/15 22:56:15] d2.utils.events INFO:  eta: 0:24:12  iter: 21039  total_loss: 0.1005    time: 0.4894  last_time: 0.4803  data_time: 0.0045  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:56:25] d2.utils.events INFO:  eta: 0:24:02  iter: 21059  total_loss: 0.09937    time: 0.4894  last_time: 0.5035  data_time: 0.0076  last_data_time: 0.0028   lr: 0.001  max_mem: 15030M
[04/15 22:56:35] d2.utils.events INFO:  eta: 0:23:52  iter: 21079  total_loss: 0.1025    time: 0.4894  last_time: 0.5029  data_time: 0.0123  last_data_time: 0.0024   lr: 0.001  max_mem: 15030M
[04/15 22:56:45] d2.utils.events INFO:  eta: 0:23:42  iter: 21099  total_loss: 0.1042    time: 0.4894  last_time: 0.4963  data_time: 0.0070  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 22:56:55] d2.utils.events INFO:  eta: 0:23:32  iter: 21119  total_loss: 0.09884    time: 0.4894  last_time: 0.4781  data_time: 0.0072  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:57:05] d2.utils.events INFO:  eta: 0:23:23  iter: 21139  total_loss: 0.09074    time: 0.4894  last_time: 0.4948  data_time: 0.0069  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:57:15] d2.utils.events INFO:  eta: 0:23:13  iter: 21159  total_loss: 0.1056    time: 0.4894  last_time: 0.5005  data_time: 0.0086  last_data_time: 0.0143   lr: 0.001  max_mem: 15030M
[04/15 22:57:24] d2.utils.events INFO:  eta: 0:23:03  iter: 21179  total_loss: 0.0943    time: 0.4894  last_time: 0.4828  data_time: 0.0085  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:57:34] d2.utils.events INFO:  eta: 0:22:54  iter: 21199  total_loss: 0.09991    time: 0.4894  last_time: 0.4619  data_time: 0.0123  last_data_time: 0.0063   lr: 0.001  max_mem: 15030M
[04/15 22:57:44] d2.utils.events INFO:  eta: 0:22:44  iter: 21219  total_loss: 0.09985    time: 0.4894  last_time: 0.4992  data_time: 0.0085  last_data_time: 0.0190   lr: 0.001  max_mem: 15030M
[04/15 22:57:55] d2.utils.events INFO:  eta: 0:22:33  iter: 21239  total_loss: 0.09867    time: 0.4895  last_time: 0.4894  data_time: 0.0040  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:58:05] d2.utils.events INFO:  eta: 0:22:23  iter: 21259  total_loss: 0.1058    time: 0.4895  last_time: 0.5072  data_time: 0.0059  last_data_time: 0.0186   lr: 0.001  max_mem: 15030M
[04/15 22:58:15] d2.utils.events INFO:  eta: 0:22:14  iter: 21279  total_loss: 0.09777    time: 0.4895  last_time: 0.4838  data_time: 0.0072  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 22:58:25] d2.utils.events INFO:  eta: 0:22:04  iter: 21299  total_loss: 0.09998    time: 0.4895  last_time: 0.5030  data_time: 0.0050  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:58:35] d2.utils.events INFO:  eta: 0:21:54  iter: 21319  total_loss: 0.1009    time: 0.4895  last_time: 0.4807  data_time: 0.0112  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 22:58:45] d2.utils.events INFO:  eta: 0:21:44  iter: 21339  total_loss: 0.1074    time: 0.4895  last_time: 0.4913  data_time: 0.0077  last_data_time: 0.0103   lr: 0.001  max_mem: 15030M
[04/15 22:58:54] d2.utils.events INFO:  eta: 0:21:34  iter: 21359  total_loss: 0.0865    time: 0.4895  last_time: 0.4739  data_time: 0.0124  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 22:59:04] d2.utils.events INFO:  eta: 0:21:25  iter: 21379  total_loss: 0.09674    time: 0.4895  last_time: 0.4933  data_time: 0.0090  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:59:14] d2.utils.events INFO:  eta: 0:21:15  iter: 21399  total_loss: 0.09563    time: 0.4895  last_time: 0.4759  data_time: 0.0070  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 22:59:24] d2.utils.events INFO:  eta: 0:21:05  iter: 21419  total_loss: 0.09353    time: 0.4895  last_time: 0.4934  data_time: 0.0076  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 22:59:34] d2.utils.events INFO:  eta: 0:20:56  iter: 21439  total_loss: 0.09199    time: 0.4895  last_time: 0.5116  data_time: 0.0090  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 22:59:44] d2.utils.events INFO:  eta: 0:20:46  iter: 21459  total_loss: 0.09753    time: 0.4895  last_time: 0.5112  data_time: 0.0036  last_data_time: 0.0093   lr: 0.001  max_mem: 15030M
[04/15 22:59:54] d2.utils.events INFO:  eta: 0:20:36  iter: 21479  total_loss: 0.0947    time: 0.4895  last_time: 0.4909  data_time: 0.0075  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:00:04] d2.utils.events INFO:  eta: 0:20:26  iter: 21499  total_loss: 0.1002    time: 0.4895  last_time: 0.4910  data_time: 0.0054  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:00:14] d2.utils.events INFO:  eta: 0:20:17  iter: 21519  total_loss: 0.09442    time: 0.4895  last_time: 0.4876  data_time: 0.0048  last_data_time: 0.0041   lr: 0.001  max_mem: 15030M
[04/15 23:00:23] d2.utils.events INFO:  eta: 0:20:07  iter: 21539  total_loss: 0.1095    time: 0.4895  last_time: 0.4907  data_time: 0.0097  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:00:33] d2.utils.events INFO:  eta: 0:19:57  iter: 21559  total_loss: 0.09479    time: 0.4895  last_time: 0.4715  data_time: 0.0046  last_data_time: 0.0258   lr: 0.001  max_mem: 15030M
[04/15 23:00:43] d2.utils.events INFO:  eta: 0:19:46  iter: 21579  total_loss: 0.09443    time: 0.4895  last_time: 0.5046  data_time: 0.0077  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:00:53] d2.utils.events INFO:  eta: 0:19:36  iter: 21599  total_loss: 0.09268    time: 0.4895  last_time: 0.4961  data_time: 0.0077  last_data_time: 0.0188   lr: 0.001  max_mem: 15030M
[04/15 23:01:03] d2.utils.events INFO:  eta: 0:19:27  iter: 21619  total_loss: 0.1017    time: 0.4896  last_time: 0.4946  data_time: 0.0074  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:01:13] d2.utils.events INFO:  eta: 0:19:17  iter: 21639  total_loss: 0.09614    time: 0.4896  last_time: 0.4920  data_time: 0.0067  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 23:01:23] d2.utils.events INFO:  eta: 0:19:07  iter: 21659  total_loss: 0.09692    time: 0.4895  last_time: 0.4952  data_time: 0.0117  last_data_time: 0.0187   lr: 0.001  max_mem: 15030M
[04/15 23:01:32] d2.utils.events INFO:  eta: 0:18:57  iter: 21679  total_loss: 0.09313    time: 0.4896  last_time: 0.4856  data_time: 0.0048  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:01:42] d2.utils.events INFO:  eta: 0:18:47  iter: 21699  total_loss: 0.09726    time: 0.4895  last_time: 0.4933  data_time: 0.0050  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 23:01:52] d2.utils.events INFO:  eta: 0:18:37  iter: 21719  total_loss: 0.08921    time: 0.4895  last_time: 0.4947  data_time: 0.0074  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:02:02] d2.utils.events INFO:  eta: 0:18:27  iter: 21739  total_loss: 0.1011    time: 0.4896  last_time: 0.4927  data_time: 0.0052  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:02:12] d2.utils.events INFO:  eta: 0:18:18  iter: 21759  total_loss: 0.1034    time: 0.4896  last_time: 0.4910  data_time: 0.0071  last_data_time: 0.0218   lr: 0.001  max_mem: 15030M
[04/15 23:02:22] d2.utils.events INFO:  eta: 0:18:08  iter: 21779  total_loss: 0.09301    time: 0.4896  last_time: 0.4851  data_time: 0.0083  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:02:31] d2.utils.events INFO:  eta: 0:17:58  iter: 21799  total_loss: 0.09548    time: 0.4896  last_time: 0.5043  data_time: 0.0066  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:02:41] d2.utils.events INFO:  eta: 0:17:49  iter: 21819  total_loss: 0.09572    time: 0.4896  last_time: 0.4876  data_time: 0.0064  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:02:51] d2.utils.events INFO:  eta: 0:17:39  iter: 21839  total_loss: 0.09389    time: 0.4896  last_time: 0.4875  data_time: 0.0058  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:03:01] d2.utils.events INFO:  eta: 0:17:29  iter: 21859  total_loss: 0.09744    time: 0.4896  last_time: 0.4834  data_time: 0.0086  last_data_time: 0.0038   lr: 0.001  max_mem: 15030M
[04/15 23:03:11] d2.utils.events INFO:  eta: 0:17:19  iter: 21879  total_loss: 0.09476    time: 0.4896  last_time: 0.4774  data_time: 0.0055  last_data_time: 0.0094   lr: 0.001  max_mem: 15030M
[04/15 23:03:21] d2.utils.events INFO:  eta: 0:17:09  iter: 21899  total_loss: 0.09843    time: 0.4896  last_time: 0.5006  data_time: 0.0089  last_data_time: 0.0227   lr: 0.001  max_mem: 15030M
[04/15 23:03:31] d2.utils.events INFO:  eta: 0:16:59  iter: 21919  total_loss: 0.0996    time: 0.4896  last_time: 0.4826  data_time: 0.0022  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:03:41] d2.utils.events INFO:  eta: 0:16:50  iter: 21939  total_loss: 0.09557    time: 0.4896  last_time: 0.4628  data_time: 0.0055  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:03:51] d2.utils.events INFO:  eta: 0:16:40  iter: 21959  total_loss: 0.09323    time: 0.4896  last_time: 0.5060  data_time: 0.0079  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:04:00] d2.utils.events INFO:  eta: 0:16:30  iter: 21979  total_loss: 0.09882    time: 0.4896  last_time: 0.5291  data_time: 0.0064  last_data_time: 0.0256   lr: 0.001  max_mem: 15030M
[04/15 23:04:10] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 23:04:11] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 23:04:11] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 23:04:11] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 23:04:11] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 23:04:11] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/15 23:04:12] d2.utils.events INFO:  eta: 0:16:20  iter: 21999  total_loss: 0.09784    time: 0.4896  last_time: 0.4960  data_time: 0.0074  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:04:21] d2.utils.events INFO:  eta: 0:16:10  iter: 22019  total_loss: 0.09574    time: 0.4896  last_time: 0.5010  data_time: 0.0048  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 23:04:31] d2.utils.events INFO:  eta: 0:16:00  iter: 22039  total_loss: 0.09854    time: 0.4896  last_time: 0.5035  data_time: 0.0112  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:04:41] d2.utils.events INFO:  eta: 0:15:51  iter: 22059  total_loss: 0.09859    time: 0.4896  last_time: 0.4782  data_time: 0.0051  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:04:51] d2.utils.events INFO:  eta: 0:15:41  iter: 22079  total_loss: 0.1018    time: 0.4896  last_time: 0.4881  data_time: 0.0049  last_data_time: 0.0257   lr: 0.001  max_mem: 15030M
[04/15 23:05:01] d2.utils.events INFO:  eta: 0:15:31  iter: 22099  total_loss: 0.09544    time: 0.4896  last_time: 0.4774  data_time: 0.0035  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:05:11] d2.utils.events INFO:  eta: 0:15:21  iter: 22119  total_loss: 0.1005    time: 0.4896  last_time: 0.5128  data_time: 0.0069  last_data_time: 0.0270   lr: 0.001  max_mem: 15030M
[04/15 23:05:21] d2.utils.events INFO:  eta: 0:15:11  iter: 22139  total_loss: 0.1006    time: 0.4896  last_time: 0.5050  data_time: 0.0093  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:05:31] d2.utils.events INFO:  eta: 0:15:02  iter: 22159  total_loss: 0.1043    time: 0.4896  last_time: 0.4839  data_time: 0.0074  last_data_time: 0.0230   lr: 0.001  max_mem: 15030M
[04/15 23:05:40] d2.utils.events INFO:  eta: 0:14:52  iter: 22179  total_loss: 0.09407    time: 0.4896  last_time: 0.4955  data_time: 0.0071  last_data_time: 0.0186   lr: 0.001  max_mem: 15030M
[04/15 23:05:50] d2.utils.events INFO:  eta: 0:14:42  iter: 22199  total_loss: 0.09902    time: 0.4896  last_time: 0.4917  data_time: 0.0073  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:06:00] d2.utils.events INFO:  eta: 0:14:33  iter: 22219  total_loss: 0.1034    time: 0.4896  last_time: 0.4690  data_time: 0.0057  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:06:10] d2.utils.events INFO:  eta: 0:14:23  iter: 22239  total_loss: 0.09112    time: 0.4896  last_time: 0.4944  data_time: 0.0036  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:06:20] d2.utils.events INFO:  eta: 0:14:13  iter: 22259  total_loss: 0.1077    time: 0.4896  last_time: 0.4841  data_time: 0.0031  last_data_time: 0.0025   lr: 0.001  max_mem: 15030M
[04/15 23:06:30] d2.utils.events INFO:  eta: 0:14:04  iter: 22279  total_loss: 0.1004    time: 0.4896  last_time: 0.4856  data_time: 0.0031  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:06:40] d2.utils.events INFO:  eta: 0:13:54  iter: 22299  total_loss: 0.09478    time: 0.4896  last_time: 0.4936  data_time: 0.0099  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:06:49] d2.utils.events INFO:  eta: 0:13:44  iter: 22319  total_loss: 0.1019    time: 0.4896  last_time: 0.4628  data_time: 0.0083  last_data_time: 0.0028   lr: 0.001  max_mem: 15030M
[04/15 23:06:59] d2.utils.events INFO:  eta: 0:13:34  iter: 22339  total_loss: 0.09645    time: 0.4896  last_time: 0.4863  data_time: 0.0055  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:07:09] d2.utils.events INFO:  eta: 0:13:24  iter: 22359  total_loss: 0.09437    time: 0.4896  last_time: 0.4972  data_time: 0.0075  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:07:19] d2.utils.events INFO:  eta: 0:13:15  iter: 22379  total_loss: 0.101    time: 0.4896  last_time: 0.5057  data_time: 0.0140  last_data_time: 0.0379   lr: 0.001  max_mem: 15030M
[04/15 23:07:29] d2.utils.events INFO:  eta: 0:13:05  iter: 22399  total_loss: 0.1055    time: 0.4896  last_time: 0.4835  data_time: 0.0065  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:07:39] d2.utils.events INFO:  eta: 0:12:55  iter: 22419  total_loss: 0.09744    time: 0.4896  last_time: 0.4975  data_time: 0.0031  last_data_time: 0.0033   lr: 0.001  max_mem: 15030M
[04/15 23:07:48] d2.utils.events INFO:  eta: 0:12:45  iter: 22439  total_loss: 0.09699    time: 0.4896  last_time: 0.4870  data_time: 0.0100  last_data_time: 0.0026   lr: 0.001  max_mem: 15030M
[04/15 23:07:58] d2.utils.events INFO:  eta: 0:12:35  iter: 22459  total_loss: 0.1022    time: 0.4896  last_time: 0.4887  data_time: 0.0071  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:08:08] d2.utils.events INFO:  eta: 0:12:25  iter: 22479  total_loss: 0.08919    time: 0.4896  last_time: 0.4795  data_time: 0.0076  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:08:18] d2.utils.events INFO:  eta: 0:12:15  iter: 22499  total_loss: 0.09437    time: 0.4896  last_time: 0.5356  data_time: 0.0081  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 23:08:28] d2.utils.events INFO:  eta: 0:12:05  iter: 22519  total_loss: 0.1002    time: 0.4896  last_time: 0.4868  data_time: 0.0076  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:08:38] d2.utils.events INFO:  eta: 0:11:55  iter: 22539  total_loss: 0.09453    time: 0.4896  last_time: 0.4952  data_time: 0.0051  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:08:47] d2.utils.events INFO:  eta: 0:11:46  iter: 22559  total_loss: 0.1008    time: 0.4896  last_time: 0.5025  data_time: 0.0054  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:08:57] d2.utils.events INFO:  eta: 0:11:36  iter: 22579  total_loss: 0.1006    time: 0.4896  last_time: 0.4790  data_time: 0.0082  last_data_time: 0.0259   lr: 0.001  max_mem: 15030M
[04/15 23:09:07] d2.utils.events INFO:  eta: 0:11:26  iter: 22599  total_loss: 0.089    time: 0.4896  last_time: 0.5157  data_time: 0.0081  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:09:17] d2.utils.events INFO:  eta: 0:11:16  iter: 22619  total_loss: 0.09797    time: 0.4896  last_time: 0.4863  data_time: 0.0073  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:09:27] d2.utils.events INFO:  eta: 0:11:07  iter: 22639  total_loss: 0.08945    time: 0.4896  last_time: 0.4977  data_time: 0.0127  last_data_time: 0.0148   lr: 0.001  max_mem: 15030M
[04/15 23:09:37] d2.utils.events INFO:  eta: 0:10:57  iter: 22659  total_loss: 0.1001    time: 0.4896  last_time: 0.4960  data_time: 0.0030  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:09:47] d2.utils.events INFO:  eta: 0:10:47  iter: 22679  total_loss: 0.09689    time: 0.4896  last_time: 0.5082  data_time: 0.0065  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:09:57] d2.utils.events INFO:  eta: 0:10:38  iter: 22699  total_loss: 0.09435    time: 0.4896  last_time: 0.4972  data_time: 0.0067  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 23:10:06] d2.utils.events INFO:  eta: 0:10:28  iter: 22719  total_loss: 0.09647    time: 0.4896  last_time: 0.4759  data_time: 0.0112  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:10:16] d2.utils.events INFO:  eta: 0:10:18  iter: 22739  total_loss: 0.09677    time: 0.4896  last_time: 0.4799  data_time: 0.0065  last_data_time: 0.0190   lr: 0.001  max_mem: 15030M
[04/15 23:10:26] d2.utils.events INFO:  eta: 0:10:08  iter: 22759  total_loss: 0.09323    time: 0.4896  last_time: 0.4864  data_time: 0.0091  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:10:36] d2.utils.events INFO:  eta: 0:09:58  iter: 22779  total_loss: 0.09952    time: 0.4896  last_time: 0.4790  data_time: 0.0098  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:10:46] d2.utils.events INFO:  eta: 0:09:48  iter: 22799  total_loss: 0.09773    time: 0.4896  last_time: 0.5006  data_time: 0.0093  last_data_time: 0.0191   lr: 0.001  max_mem: 15030M
[04/15 23:10:56] d2.utils.events INFO:  eta: 0:09:38  iter: 22819  total_loss: 0.0957    time: 0.4896  last_time: 0.4862  data_time: 0.0077  last_data_time: 0.0152   lr: 0.001  max_mem: 15030M
[04/15 23:11:06] d2.utils.events INFO:  eta: 0:09:28  iter: 22839  total_loss: 0.09298    time: 0.4896  last_time: 0.5082  data_time: 0.0091  last_data_time: 0.0046   lr: 0.001  max_mem: 15030M
[04/15 23:11:15] d2.utils.events INFO:  eta: 0:09:19  iter: 22859  total_loss: 0.09779    time: 0.4896  last_time: 0.4991  data_time: 0.0075  last_data_time: 0.0275   lr: 0.001  max_mem: 15030M
[04/15 23:11:25] d2.utils.events INFO:  eta: 0:09:09  iter: 22879  total_loss: 0.09512    time: 0.4896  last_time: 0.4810  data_time: 0.0036  last_data_time: 0.0193   lr: 0.001  max_mem: 15030M
[04/15 23:11:35] d2.utils.events INFO:  eta: 0:08:59  iter: 22899  total_loss: 0.09792    time: 0.4896  last_time: 0.4821  data_time: 0.0114  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 23:11:45] d2.utils.events INFO:  eta: 0:08:49  iter: 22919  total_loss: 0.1044    time: 0.4896  last_time: 0.4919  data_time: 0.0060  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:11:55] d2.utils.events INFO:  eta: 0:08:39  iter: 22939  total_loss: 0.09262    time: 0.4896  last_time: 0.4979  data_time: 0.0057  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 23:12:05] d2.utils.events INFO:  eta: 0:08:30  iter: 22959  total_loss: 0.101    time: 0.4896  last_time: 0.4679  data_time: 0.0084  last_data_time: 0.0137   lr: 0.001  max_mem: 15030M
[04/15 23:12:14] d2.utils.events INFO:  eta: 0:08:20  iter: 22979  total_loss: 0.1026    time: 0.4896  last_time: 0.4716  data_time: 0.0096  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:12:24] d2.utils.events INFO:  eta: 0:08:10  iter: 22999  total_loss: 0.088    time: 0.4897  last_time: 0.5004  data_time: 0.0075  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:12:34] d2.utils.events INFO:  eta: 0:08:00  iter: 23019  total_loss: 0.09688    time: 0.4897  last_time: 0.4471  data_time: 0.0062  last_data_time: 0.0081   lr: 0.001  max_mem: 15030M
[04/15 23:12:44] d2.utils.events INFO:  eta: 0:07:50  iter: 23039  total_loss: 0.1074    time: 0.4896  last_time: 0.4936  data_time: 0.0087  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:12:54] d2.utils.events INFO:  eta: 0:07:41  iter: 23059  total_loss: 0.1004    time: 0.4896  last_time: 0.4914  data_time: 0.0065  last_data_time: 0.0261   lr: 0.001  max_mem: 15030M
[04/15 23:13:04] d2.utils.events INFO:  eta: 0:07:31  iter: 23079  total_loss: 0.09133    time: 0.4897  last_time: 0.5015  data_time: 0.0056  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:13:13] d2.utils.events INFO:  eta: 0:07:21  iter: 23099  total_loss: 0.09771    time: 0.4897  last_time: 0.4843  data_time: 0.0072  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 23:13:23] d2.utils.events INFO:  eta: 0:07:11  iter: 23119  total_loss: 0.1056    time: 0.4896  last_time: 0.4770  data_time: 0.0142  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:13:33] d2.utils.events INFO:  eta: 0:07:01  iter: 23139  total_loss: 0.1003    time: 0.4896  last_time: 0.4838  data_time: 0.0099  last_data_time: 0.0039   lr: 0.001  max_mem: 15030M
[04/15 23:13:43] d2.utils.events INFO:  eta: 0:06:51  iter: 23159  total_loss: 0.0965    time: 0.4897  last_time: 0.4906  data_time: 0.0040  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:13:53] d2.utils.events INFO:  eta: 0:06:41  iter: 23179  total_loss: 0.09984    time: 0.4897  last_time: 0.4865  data_time: 0.0079  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:14:02] d2.utils.events INFO:  eta: 0:06:32  iter: 23199  total_loss: 0.0919    time: 0.4896  last_time: 0.5013  data_time: 0.0049  last_data_time: 0.0054   lr: 0.001  max_mem: 15030M
[04/15 23:14:12] d2.utils.events INFO:  eta: 0:06:22  iter: 23219  total_loss: 0.09171    time: 0.4897  last_time: 0.4927  data_time: 0.0040  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:14:22] d2.utils.events INFO:  eta: 0:06:12  iter: 23239  total_loss: 0.09497    time: 0.4897  last_time: 0.4762  data_time: 0.0114  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:14:32] d2.utils.events INFO:  eta: 0:06:02  iter: 23259  total_loss: 0.09819    time: 0.4897  last_time: 0.4952  data_time: 0.0061  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:14:42] d2.utils.events INFO:  eta: 0:05:52  iter: 23279  total_loss: 0.09989    time: 0.4897  last_time: 0.4916  data_time: 0.0093  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:14:52] d2.utils.events INFO:  eta: 0:05:43  iter: 23299  total_loss: 0.08973    time: 0.4897  last_time: 0.4836  data_time: 0.0052  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 23:15:01] d2.utils.events INFO:  eta: 0:05:33  iter: 23319  total_loss: 0.0998    time: 0.4897  last_time: 0.5064  data_time: 0.0067  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:15:11] d2.utils.events INFO:  eta: 0:05:23  iter: 23339  total_loss: 0.09374    time: 0.4897  last_time: 0.4992  data_time: 0.0138  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:15:21] d2.utils.events INFO:  eta: 0:05:13  iter: 23359  total_loss: 0.09853    time: 0.4897  last_time: 0.4950  data_time: 0.0079  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:15:31] d2.utils.events INFO:  eta: 0:05:04  iter: 23379  total_loss: 0.09224    time: 0.4897  last_time: 0.5048  data_time: 0.0112  last_data_time: 0.0187   lr: 0.001  max_mem: 15030M
[04/15 23:15:41] d2.utils.events INFO:  eta: 0:04:54  iter: 23399  total_loss: 0.1031    time: 0.4897  last_time: 0.4907  data_time: 0.0075  last_data_time: 0.0022   lr: 0.001  max_mem: 15030M
[04/15 23:15:51] d2.utils.events INFO:  eta: 0:04:44  iter: 23419  total_loss: 0.09378    time: 0.4897  last_time: 0.4922  data_time: 0.0072  last_data_time: 0.0151   lr: 0.001  max_mem: 15030M
[04/15 23:16:01] d2.utils.events INFO:  eta: 0:04:34  iter: 23439  total_loss: 0.09372    time: 0.4897  last_time: 0.4712  data_time: 0.0061  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:16:10] d2.utils.events INFO:  eta: 0:04:24  iter: 23459  total_loss: 0.1058    time: 0.4897  last_time: 0.5225  data_time: 0.0058  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:16:20] d2.utils.events INFO:  eta: 0:04:14  iter: 23479  total_loss: 0.09278    time: 0.4897  last_time: 0.4869  data_time: 0.0052  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:16:30] d2.utils.events INFO:  eta: 0:04:05  iter: 23499  total_loss: 0.1015    time: 0.4897  last_time: 0.4907  data_time: 0.0160  last_data_time: 0.0186   lr: 0.001  max_mem: 15030M
[04/15 23:16:40] d2.utils.events INFO:  eta: 0:03:55  iter: 23519  total_loss: 0.09971    time: 0.4897  last_time: 0.4827  data_time: 0.0079  last_data_time: 0.0213   lr: 0.001  max_mem: 15030M
[04/15 23:16:50] d2.utils.events INFO:  eta: 0:03:45  iter: 23539  total_loss: 0.09784    time: 0.4897  last_time: 0.4724  data_time: 0.0061  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:16:59] d2.utils.events INFO:  eta: 0:03:35  iter: 23559  total_loss: 0.09927    time: 0.4897  last_time: 0.4760  data_time: 0.0140  last_data_time: 0.0023   lr: 0.001  max_mem: 15030M
[04/15 23:17:09] d2.utils.events INFO:  eta: 0:03:26  iter: 23579  total_loss: 0.09209    time: 0.4897  last_time: 0.5111  data_time: 0.0041  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:17:19] d2.utils.events INFO:  eta: 0:03:16  iter: 23599  total_loss: 0.09849    time: 0.4897  last_time: 0.4836  data_time: 0.0053  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:17:29] d2.utils.events INFO:  eta: 0:03:06  iter: 23619  total_loss: 0.09516    time: 0.4897  last_time: 0.5254  data_time: 0.0102  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:17:39] d2.utils.events INFO:  eta: 0:02:56  iter: 23639  total_loss: 0.1041    time: 0.4897  last_time: 0.4886  data_time: 0.0043  last_data_time: 0.0169   lr: 0.001  max_mem: 15030M
[04/15 23:17:49] d2.utils.events INFO:  eta: 0:02:46  iter: 23659  total_loss: 0.08435    time: 0.4897  last_time: 0.4984  data_time: 0.0037  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:17:59] d2.utils.events INFO:  eta: 0:02:36  iter: 23679  total_loss: 0.09221    time: 0.4897  last_time: 0.4875  data_time: 0.0051  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:18:08] d2.utils.events INFO:  eta: 0:02:27  iter: 23699  total_loss: 0.09694    time: 0.4897  last_time: 0.4955  data_time: 0.0046  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:18:18] d2.utils.events INFO:  eta: 0:02:17  iter: 23719  total_loss: 0.09765    time: 0.4897  last_time: 0.4915  data_time: 0.0047  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:18:28] d2.utils.events INFO:  eta: 0:02:07  iter: 23739  total_loss: 0.09798    time: 0.4897  last_time: 0.4736  data_time: 0.0081  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:18:38] d2.utils.events INFO:  eta: 0:01:57  iter: 23759  total_loss: 0.0995    time: 0.4897  last_time: 0.4942  data_time: 0.0099  last_data_time: 0.0391   lr: 0.001  max_mem: 15030M
[04/15 23:18:48] d2.utils.events INFO:  eta: 0:01:47  iter: 23779  total_loss: 0.09748    time: 0.4897  last_time: 0.4965  data_time: 0.0087  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:18:58] d2.utils.events INFO:  eta: 0:01:38  iter: 23799  total_loss: 0.09593    time: 0.4897  last_time: 0.5023  data_time: 0.0079  last_data_time: 0.0259   lr: 0.001  max_mem: 15030M
[04/15 23:19:07] d2.utils.events INFO:  eta: 0:01:28  iter: 23819  total_loss: 0.09657    time: 0.4897  last_time: 0.4755  data_time: 0.0097  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:19:17] d2.utils.events INFO:  eta: 0:01:18  iter: 23839  total_loss: 0.09193    time: 0.4897  last_time: 0.4924  data_time: 0.0072  last_data_time: 0.0018   lr: 0.001  max_mem: 15030M
[04/15 23:19:27] d2.utils.events INFO:  eta: 0:01:08  iter: 23859  total_loss: 0.08939    time: 0.4897  last_time: 0.5095  data_time: 0.0094  last_data_time: 0.0390   lr: 0.001  max_mem: 15030M
[04/15 23:19:37] d2.utils.events INFO:  eta: 0:00:58  iter: 23879  total_loss: 0.1008    time: 0.4897  last_time: 0.4957  data_time: 0.0045  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:19:47] d2.utils.events INFO:  eta: 0:00:49  iter: 23899  total_loss: 0.1001    time: 0.4897  last_time: 0.4817  data_time: 0.0136  last_data_time: 0.0019   lr: 0.001  max_mem: 15030M
[04/15 23:19:57] d2.utils.events INFO:  eta: 0:00:39  iter: 23919  total_loss: 0.09711    time: 0.4897  last_time: 0.4861  data_time: 0.0091  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:20:07] d2.utils.events INFO:  eta: 0:00:29  iter: 23939  total_loss: 0.09695    time: 0.4897  last_time: 0.4843  data_time: 0.0045  last_data_time: 0.0021   lr: 0.001  max_mem: 15030M
[04/15 23:20:17] d2.utils.events INFO:  eta: 0:00:19  iter: 23959  total_loss: 0.1043    time: 0.4897  last_time: 0.5051  data_time: 0.0065  last_data_time: 0.0218   lr: 0.001  max_mem: 15030M
[04/15 23:20:26] d2.utils.events INFO:  eta: 0:00:09  iter: 23979  total_loss: 0.0983    time: 0.4897  last_time: 0.4803  data_time: 0.0065  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:20:36] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/r50/model_final.pth
[04/15 23:20:37] d2.utils.events INFO:  eta: 0:00:00  iter: 23999  total_loss: 0.09535    time: 0.4897  last_time: 0.4910  data_time: 0.0053  last_data_time: 0.0020   lr: 0.001  max_mem: 15030M
[04/15 23:20:37] d2.engine.hooks INFO: Overall training speed: 23998 iterations in 3:15:51 (0.4897 s / it)
[04/15 23:20:37] d2.engine.hooks INFO: Total training time: 3:37:41 (0:21:49 on hooks)
[04/15 23:20:37] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/15 23:20:38] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/15 23:20:38] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/15 23:20:38] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/15 23:20:38] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/15 23:20:38] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/16 08:32:16] detectron2 INFO: Rank of current process: 0. World size: 4
[04/16 08:32:19] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2,3                      Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/16 08:32:19] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=4, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/16 08:32:19] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/16 08:32:19] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/16 08:32:19] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/16 08:32:19] d2.utils.env INFO: Using a generated random seed 19308360
[04/16 08:32:19] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/16 08:32:19] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/16 08:32:19] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/16 08:32:21] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/16 08:32:32] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/16 08:32:32] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/16 08:32:32] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/16 08:32:32] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/16 08:32:32] d2.engine.defaults WARNING: No evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[04/16 09:15:28] detectron2 INFO: Rank of current process: 0. World size: 1
[04/16 09:15:31] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/16 09:15:31] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/16 09:15:31] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/16 09:15:31] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/16 09:15:31] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/16 09:15:31] d2.utils.env INFO: Using a generated random seed 31804999
[04/16 09:15:37] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/16 09:15:37] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/16 09:15:37] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/16 09:15:39] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/16 09:15:51] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/16 09:15:51] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/16 09:15:51] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/16 09:15:51] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/16 09:17:32] detectron2 INFO: Rank of current process: 0. World size: 1
[04/16 09:17:32] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/16 09:17:32] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/16 09:17:32] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/16 09:17:32] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/16 09:17:32] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/16 09:17:32] d2.utils.env INFO: Using a generated random seed 33003550
[04/16 09:17:34] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/16 09:17:34] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/16 09:17:34] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/16 09:17:34] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/16 09:17:35] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/16 09:17:35] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/16 09:17:35] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/16 09:17:35] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/16 09:17:35] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/16 09:17:35] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_e32h2qis ...
[04/16 09:17:45] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.8008 s/iter. Inference: 8.7472 s/iter. Eval: 0.3761 s/iter. Total: 9.9245 s/iter. ETA=1:22:32
[04/16 09:17:50] d2.evaluation.evaluator INFO: Inference done 37/500. Dataloading: 0.0021 s/iter. Inference: 0.0686 s/iter. Eval: 0.0706 s/iter. Total: 0.1413 s/iter. ETA=0:01:05
[04/16 09:17:55] d2.evaluation.evaluator INFO: Inference done 73/500. Dataloading: 0.0022 s/iter. Inference: 0.0675 s/iter. Eval: 0.0711 s/iter. Total: 0.1409 s/iter. ETA=0:01:00
[04/16 09:18:00] d2.evaluation.evaluator INFO: Inference done 109/500. Dataloading: 0.0022 s/iter. Inference: 0.0667 s/iter. Eval: 0.0718 s/iter. Total: 0.1408 s/iter. ETA=0:00:55
[04/16 09:18:05] d2.evaluation.evaluator INFO: Inference done 145/500. Dataloading: 0.0023 s/iter. Inference: 0.0668 s/iter. Eval: 0.0716 s/iter. Total: 0.1408 s/iter. ETA=0:00:49
[04/16 09:18:10] d2.evaluation.evaluator INFO: Inference done 181/500. Dataloading: 0.0025 s/iter. Inference: 0.0668 s/iter. Eval: 0.0714 s/iter. Total: 0.1408 s/iter. ETA=0:00:44
[04/16 09:18:15] d2.evaluation.evaluator INFO: Inference done 216/500. Dataloading: 0.0025 s/iter. Inference: 0.0670 s/iter. Eval: 0.0716 s/iter. Total: 0.1412 s/iter. ETA=0:00:40
[04/16 09:18:20] d2.evaluation.evaluator INFO: Inference done 252/500. Dataloading: 0.0026 s/iter. Inference: 0.0669 s/iter. Eval: 0.0716 s/iter. Total: 0.1412 s/iter. ETA=0:00:35
[04/16 09:18:25] d2.evaluation.evaluator INFO: Inference done 288/500. Dataloading: 0.0027 s/iter. Inference: 0.0669 s/iter. Eval: 0.0715 s/iter. Total: 0.1412 s/iter. ETA=0:00:29
[04/16 09:18:31] d2.evaluation.evaluator INFO: Inference done 324/500. Dataloading: 0.0026 s/iter. Inference: 0.0669 s/iter. Eval: 0.0716 s/iter. Total: 0.1413 s/iter. ETA=0:00:24
[04/16 09:18:36] d2.evaluation.evaluator INFO: Inference done 360/500. Dataloading: 0.0026 s/iter. Inference: 0.0670 s/iter. Eval: 0.0716 s/iter. Total: 0.1413 s/iter. ETA=0:00:19
[04/16 09:18:41] d2.evaluation.evaluator INFO: Inference done 395/500. Dataloading: 0.0026 s/iter. Inference: 0.0670 s/iter. Eval: 0.0717 s/iter. Total: 0.1414 s/iter. ETA=0:00:14
[04/16 09:18:46] d2.evaluation.evaluator INFO: Inference done 431/500. Dataloading: 0.0026 s/iter. Inference: 0.0669 s/iter. Eval: 0.0717 s/iter. Total: 0.1414 s/iter. ETA=0:00:09
[04/16 09:18:51] d2.evaluation.evaluator INFO: Inference done 467/500. Dataloading: 0.0026 s/iter. Inference: 0.0670 s/iter. Eval: 0.0716 s/iter. Total: 0.1413 s/iter. ETA=0:00:04
[04/16 09:18:55] d2.evaluation.evaluator INFO: Total inference time: 0:01:09.652536 (0.140712 s / iter per device, on 1 devices)
[04/16 09:18:55] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:33 (0.066768 s / iter per device, on 1 devices)
[04/16 09:18:55] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_e32h2qis ...
[04/16 09:20:18] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/16 09:20:18] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/16 09:20:18] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/16 09:20:18] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/22 07:31:39] detectron2 INFO: Rank of current process: 0. World size: 1
[04/22 07:31:42] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/22 07:31:42] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/22 07:31:42] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/22 07:31:42] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/22 07:31:42] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/22 07:31:42] d2.utils.env INFO: Using a generated random seed 42911099
[04/22 07:31:50] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/22 07:31:50] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 07:31:50] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 07:31:52] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/22 07:32:04] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/22 07:32:04] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/22 07:32:04] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/22 07:32:04] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/22 07:32:04] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/22 07:32:04] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_xmcmq7mi ...
[04/22 07:32:14] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.5513 s/iter. Inference: 9.7427 s/iter. Eval: 0.2766 s/iter. Total: 10.5710 s/iter. ETA=1:27:54
[04/22 07:32:19] d2.evaluation.evaluator INFO: Inference done 39/500. Dataloading: 0.0021 s/iter. Inference: 0.0640 s/iter. Eval: 0.0681 s/iter. Total: 0.1342 s/iter. ETA=0:01:01
[04/22 07:32:24] d2.evaluation.evaluator INFO: Inference done 77/500. Dataloading: 0.0021 s/iter. Inference: 0.0643 s/iter. Eval: 0.0665 s/iter. Total: 0.1329 s/iter. ETA=0:00:56
[04/22 07:32:30] d2.evaluation.evaluator INFO: Inference done 117/500. Dataloading: 0.0021 s/iter. Inference: 0.0641 s/iter. Eval: 0.0650 s/iter. Total: 0.1313 s/iter. ETA=0:00:50
[04/22 07:32:35] d2.evaluation.evaluator INFO: Inference done 154/500. Dataloading: 0.0021 s/iter. Inference: 0.0647 s/iter. Eval: 0.0657 s/iter. Total: 0.1325 s/iter. ETA=0:00:45
[04/22 07:32:40] d2.evaluation.evaluator INFO: Inference done 191/500. Dataloading: 0.0022 s/iter. Inference: 0.0652 s/iter. Eval: 0.0665 s/iter. Total: 0.1339 s/iter. ETA=0:00:41
[04/22 07:32:45] d2.evaluation.evaluator INFO: Inference done 227/500. Dataloading: 0.0023 s/iter. Inference: 0.0655 s/iter. Eval: 0.0674 s/iter. Total: 0.1353 s/iter. ETA=0:00:36
[04/22 07:32:50] d2.evaluation.evaluator INFO: Inference done 266/500. Dataloading: 0.0023 s/iter. Inference: 0.0653 s/iter. Eval: 0.0666 s/iter. Total: 0.1343 s/iter. ETA=0:00:31
[04/22 07:32:55] d2.evaluation.evaluator INFO: Inference done 307/500. Dataloading: 0.0023 s/iter. Inference: 0.0647 s/iter. Eval: 0.0656 s/iter. Total: 0.1327 s/iter. ETA=0:00:25
[04/22 07:33:00] d2.evaluation.evaluator INFO: Inference done 347/500. Dataloading: 0.0023 s/iter. Inference: 0.0641 s/iter. Eval: 0.0656 s/iter. Total: 0.1321 s/iter. ETA=0:00:20
[04/22 07:33:05] d2.evaluation.evaluator INFO: Inference done 383/500. Dataloading: 0.0024 s/iter. Inference: 0.0643 s/iter. Eval: 0.0661 s/iter. Total: 0.1330 s/iter. ETA=0:00:15
[04/22 07:33:10] d2.evaluation.evaluator INFO: Inference done 427/500. Dataloading: 0.0024 s/iter. Inference: 0.0638 s/iter. Eval: 0.0649 s/iter. Total: 0.1312 s/iter. ETA=0:00:09
[04/22 07:33:15] d2.evaluation.evaluator INFO: Inference done 467/500. Dataloading: 0.0024 s/iter. Inference: 0.0638 s/iter. Eval: 0.0646 s/iter. Total: 0.1308 s/iter. ETA=0:00:04
[04/22 07:33:20] d2.evaluation.evaluator INFO: Total inference time: 0:01:04.718255 (0.130744 s / iter per device, on 1 devices)
[04/22 07:33:20] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:31 (0.063739 s / iter per device, on 1 devices)
[04/22 07:33:20] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_xmcmq7mi ...
[04/22 07:34:44] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/22 07:34:44] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/22 07:34:44] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/22 07:34:44] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/22 07:34:44] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 07:34:44] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 08:53:25] detectron2 INFO: Rank of current process: 0. World size: 1
[04/22 08:53:28] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/22 08:53:28] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/22 08:53:28] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/22 08:53:28] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/22 08:53:28] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/22 08:53:28] d2.utils.env INFO: Using a generated random seed 28357997
[04/22 08:53:35] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/22 08:53:35] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 08:53:35] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 08:53:38] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/22 08:53:50] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/22 08:53:50] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/22 08:53:50] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/22 08:53:50] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/22 08:53:50] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/22 08:53:50] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_0jff8clj ...
[04/22 08:54:01] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.7306 s/iter. Inference: 10.0420 s/iter. Eval: 0.1975 s/iter. Total: 10.9705 s/iter. ETA=1:31:14
[04/22 08:54:06] d2.evaluation.evaluator INFO: Inference done 35/500. Dataloading: 0.0032 s/iter. Inference: 0.0669 s/iter. Eval: 0.0798 s/iter. Total: 0.1500 s/iter. ETA=0:01:09
[04/22 08:54:11] d2.evaluation.evaluator INFO: Inference done 69/500. Dataloading: 0.0029 s/iter. Inference: 0.0669 s/iter. Eval: 0.0791 s/iter. Total: 0.1489 s/iter. ETA=0:01:04
[04/22 08:54:16] d2.evaluation.evaluator INFO: Inference done 103/500. Dataloading: 0.0030 s/iter. Inference: 0.0675 s/iter. Eval: 0.0780 s/iter. Total: 0.1485 s/iter. ETA=0:00:58
[04/22 08:54:21] d2.evaluation.evaluator INFO: Inference done 137/500. Dataloading: 0.0032 s/iter. Inference: 0.0669 s/iter. Eval: 0.0785 s/iter. Total: 0.1486 s/iter. ETA=0:00:53
[04/22 08:54:27] d2.evaluation.evaluator INFO: Inference done 171/500. Dataloading: 0.0032 s/iter. Inference: 0.0666 s/iter. Eval: 0.0786 s/iter. Total: 0.1485 s/iter. ETA=0:00:48
[04/22 08:54:32] d2.evaluation.evaluator INFO: Inference done 205/500. Dataloading: 0.0032 s/iter. Inference: 0.0667 s/iter. Eval: 0.0786 s/iter. Total: 0.1485 s/iter. ETA=0:00:43
[04/22 08:54:37] d2.evaluation.evaluator INFO: Inference done 239/500. Dataloading: 0.0032 s/iter. Inference: 0.0669 s/iter. Eval: 0.0783 s/iter. Total: 0.1485 s/iter. ETA=0:00:38
[04/22 08:54:42] d2.evaluation.evaluator INFO: Inference done 273/500. Dataloading: 0.0032 s/iter. Inference: 0.0671 s/iter. Eval: 0.0780 s/iter. Total: 0.1484 s/iter. ETA=0:00:33
[04/22 08:54:47] d2.evaluation.evaluator INFO: Inference done 308/500. Dataloading: 0.0032 s/iter. Inference: 0.0670 s/iter. Eval: 0.0778 s/iter. Total: 0.1481 s/iter. ETA=0:00:28
[04/22 08:54:52] d2.evaluation.evaluator INFO: Inference done 340/500. Dataloading: 0.0032 s/iter. Inference: 0.0669 s/iter. Eval: 0.0789 s/iter. Total: 0.1491 s/iter. ETA=0:00:23
[04/22 08:54:57] d2.evaluation.evaluator INFO: Inference done 375/500. Dataloading: 0.0031 s/iter. Inference: 0.0671 s/iter. Eval: 0.0784 s/iter. Total: 0.1487 s/iter. ETA=0:00:18
[04/22 08:55:02] d2.evaluation.evaluator INFO: Inference done 410/500. Dataloading: 0.0031 s/iter. Inference: 0.0672 s/iter. Eval: 0.0781 s/iter. Total: 0.1485 s/iter. ETA=0:00:13
[04/22 08:55:07] d2.evaluation.evaluator INFO: Inference done 445/500. Dataloading: 0.0030 s/iter. Inference: 0.0674 s/iter. Eval: 0.0778 s/iter. Total: 0.1483 s/iter. ETA=0:00:08
[04/22 08:55:12] d2.evaluation.evaluator INFO: Inference done 480/500. Dataloading: 0.0031 s/iter. Inference: 0.0672 s/iter. Eval: 0.0777 s/iter. Total: 0.1480 s/iter. ETA=0:00:02
[04/22 08:55:15] d2.evaluation.evaluator INFO: Total inference time: 0:01:12.971627 (0.147417 s / iter per device, on 1 devices)
[04/22 08:55:15] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:33 (0.066953 s / iter per device, on 1 devices)
[04/22 08:55:15] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_0jff8clj ...
[04/22 08:56:44] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/22 08:56:44] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/22 08:56:44] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/22 08:56:44] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/22 08:56:44] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 08:56:44] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:06:08] detectron2 INFO: Rank of current process: 0. World size: 1
[04/22 09:06:09] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/22 09:06:09] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/22 09:06:09] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/22 09:06:09] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/22 09:06:09] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/22 09:06:09] d2.utils.env INFO: Using a generated random seed 9761144
[04/22 09:06:11] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/22 09:06:11] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:06:11] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:06:11] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/22 09:06:12] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/22 09:06:12] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/22 09:06:12] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/22 09:06:12] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/22 09:06:12] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/22 09:06:12] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_tcmauwh9 ...
[04/22 09:06:15] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0014 s/iter. Inference: 0.0736 s/iter. Eval: 0.0563 s/iter. Total: 0.1314 s/iter. ETA=0:01:04
[04/22 09:06:20] d2.evaluation.evaluator INFO: Inference done 50/500. Dataloading: 0.0017 s/iter. Inference: 0.0691 s/iter. Eval: 0.0579 s/iter. Total: 0.1288 s/iter. ETA=0:00:57
[04/22 09:06:25] d2.evaluation.evaluator INFO: Inference done 90/500. Dataloading: 0.0017 s/iter. Inference: 0.0685 s/iter. Eval: 0.0580 s/iter. Total: 0.1283 s/iter. ETA=0:00:52
[04/22 09:06:30] d2.evaluation.evaluator INFO: Inference done 129/500. Dataloading: 0.0017 s/iter. Inference: 0.0685 s/iter. Eval: 0.0584 s/iter. Total: 0.1286 s/iter. ETA=0:00:47
[04/22 09:06:35] d2.evaluation.evaluator INFO: Inference done 169/500. Dataloading: 0.0017 s/iter. Inference: 0.0683 s/iter. Eval: 0.0584 s/iter. Total: 0.1284 s/iter. ETA=0:00:42
[04/22 09:06:41] d2.evaluation.evaluator INFO: Inference done 209/500. Dataloading: 0.0017 s/iter. Inference: 0.0681 s/iter. Eval: 0.0584 s/iter. Total: 0.1283 s/iter. ETA=0:00:37
[04/22 09:06:46] d2.evaluation.evaluator INFO: Inference done 243/500. Dataloading: 0.0026 s/iter. Inference: 0.0681 s/iter. Eval: 0.0605 s/iter. Total: 0.1312 s/iter. ETA=0:00:33
[04/22 09:06:51] d2.evaluation.evaluator INFO: Inference done 277/500. Dataloading: 0.0032 s/iter. Inference: 0.0683 s/iter. Eval: 0.0617 s/iter. Total: 0.1333 s/iter. ETA=0:00:29
[04/22 09:06:56] d2.evaluation.evaluator INFO: Inference done 311/500. Dataloading: 0.0037 s/iter. Inference: 0.0684 s/iter. Eval: 0.0631 s/iter. Total: 0.1353 s/iter. ETA=0:00:25
[04/22 09:07:01] d2.evaluation.evaluator INFO: Inference done 346/500. Dataloading: 0.0042 s/iter. Inference: 0.0683 s/iter. Eval: 0.0640 s/iter. Total: 0.1366 s/iter. ETA=0:00:21
[04/22 09:07:06] d2.evaluation.evaluator INFO: Inference done 380/500. Dataloading: 0.0045 s/iter. Inference: 0.0686 s/iter. Eval: 0.0646 s/iter. Total: 0.1377 s/iter. ETA=0:00:16
[04/22 09:07:11] d2.evaluation.evaluator INFO: Inference done 414/500. Dataloading: 0.0047 s/iter. Inference: 0.0685 s/iter. Eval: 0.0654 s/iter. Total: 0.1386 s/iter. ETA=0:00:11
[04/22 09:07:16] d2.evaluation.evaluator INFO: Inference done 448/500. Dataloading: 0.0050 s/iter. Inference: 0.0685 s/iter. Eval: 0.0657 s/iter. Total: 0.1393 s/iter. ETA=0:00:07
[04/22 09:07:21] d2.evaluation.evaluator INFO: Inference done 481/500. Dataloading: 0.0052 s/iter. Inference: 0.0686 s/iter. Eval: 0.0666 s/iter. Total: 0.1404 s/iter. ETA=0:00:02
[04/22 09:07:24] d2.evaluation.evaluator INFO: Total inference time: 0:01:09.611739 (0.140630 s / iter per device, on 1 devices)
[04/22 09:07:24] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:33 (0.068324 s / iter per device, on 1 devices)
[04/22 09:07:24] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_tcmauwh9 ...
[04/22 09:08:34] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/22 09:08:34] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/22 09:08:34] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/22 09:08:34] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/22 09:08:34] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:08:34] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:12:30] detectron2 INFO: Rank of current process: 0. World size: 1
[04/22 09:12:31] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/22 09:12:31] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/22 09:12:31] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/22 09:12:31] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/22 09:12:31] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/22 09:12:31] d2.utils.env INFO: Using a generated random seed 31273896
[04/22 09:12:47] detectron2 INFO: Rank of current process: 0. World size: 1
[04/22 09:12:48] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/22 09:12:48] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/22 09:12:48] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/22 09:12:48] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/22 09:12:48] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/22 09:12:48] d2.utils.env INFO: Using a generated random seed 48391314
[04/22 09:12:50] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/22 09:12:50] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:12:50] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:12:50] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/22 09:12:51] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/22 09:12:51] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/22 09:12:51] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/22 09:12:51] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/22 09:12:51] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/22 09:12:51] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_vnnxf0an ...
[04/22 09:12:54] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0014 s/iter. Inference: 0.0704 s/iter. Eval: 0.0604 s/iter. Total: 0.1322 s/iter. ETA=0:01:04
[04/22 09:12:59] d2.evaluation.evaluator INFO: Inference done 50/500. Dataloading: 0.0016 s/iter. Inference: 0.0675 s/iter. Eval: 0.0600 s/iter. Total: 0.1292 s/iter. ETA=0:00:58
[04/22 09:13:04] d2.evaluation.evaluator INFO: Inference done 85/500. Dataloading: 0.0036 s/iter. Inference: 0.0679 s/iter. Eval: 0.0646 s/iter. Total: 0.1361 s/iter. ETA=0:00:56
[04/22 09:13:09] d2.evaluation.evaluator INFO: Inference done 119/500. Dataloading: 0.0050 s/iter. Inference: 0.0685 s/iter. Eval: 0.0673 s/iter. Total: 0.1408 s/iter. ETA=0:00:53
[04/22 09:13:14] d2.evaluation.evaluator INFO: Inference done 153/500. Dataloading: 0.0054 s/iter. Inference: 0.0684 s/iter. Eval: 0.0687 s/iter. Total: 0.1425 s/iter. ETA=0:00:49
[04/22 09:13:19] d2.evaluation.evaluator INFO: Inference done 187/500. Dataloading: 0.0059 s/iter. Inference: 0.0689 s/iter. Eval: 0.0693 s/iter. Total: 0.1442 s/iter. ETA=0:00:45
[04/22 09:13:24] d2.evaluation.evaluator INFO: Inference done 227/500. Dataloading: 0.0052 s/iter. Inference: 0.0683 s/iter. Eval: 0.0677 s/iter. Total: 0.1412 s/iter. ETA=0:00:38
[04/22 09:13:30] d2.evaluation.evaluator INFO: Inference done 264/500. Dataloading: 0.0049 s/iter. Inference: 0.0683 s/iter. Eval: 0.0675 s/iter. Total: 0.1407 s/iter. ETA=0:00:33
[04/22 09:13:35] d2.evaluation.evaluator INFO: Inference done 299/500. Dataloading: 0.0051 s/iter. Inference: 0.0683 s/iter. Eval: 0.0679 s/iter. Total: 0.1413 s/iter. ETA=0:00:28
[04/22 09:13:40] d2.evaluation.evaluator INFO: Inference done 333/500. Dataloading: 0.0053 s/iter. Inference: 0.0683 s/iter. Eval: 0.0684 s/iter. Total: 0.1421 s/iter. ETA=0:00:23
[04/22 09:13:45] d2.evaluation.evaluator INFO: Inference done 367/500. Dataloading: 0.0054 s/iter. Inference: 0.0683 s/iter. Eval: 0.0691 s/iter. Total: 0.1429 s/iter. ETA=0:00:19
[04/22 09:13:50] d2.evaluation.evaluator INFO: Inference done 402/500. Dataloading: 0.0056 s/iter. Inference: 0.0681 s/iter. Eval: 0.0693 s/iter. Total: 0.1431 s/iter. ETA=0:00:14
[04/22 09:13:55] d2.evaluation.evaluator INFO: Inference done 437/500. Dataloading: 0.0056 s/iter. Inference: 0.0680 s/iter. Eval: 0.0694 s/iter. Total: 0.1431 s/iter. ETA=0:00:09
[04/22 09:14:00] d2.evaluation.evaluator INFO: Inference done 475/500. Dataloading: 0.0054 s/iter. Inference: 0.0681 s/iter. Eval: 0.0688 s/iter. Total: 0.1424 s/iter. ETA=0:00:03
[04/22 09:14:03] d2.evaluation.evaluator INFO: Total inference time: 0:01:10.375381 (0.142172 s / iter per device, on 1 devices)
[04/22 09:14:03] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:33 (0.067975 s / iter per device, on 1 devices)
[04/22 09:14:03] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_vnnxf0an ...
[04/22 09:15:11] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/22 09:15:11] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/22 09:15:11] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/22 09:15:11] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/22 09:15:12] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:15:12] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:48:12] detectron2 INFO: Rank of current process: 0. World size: 1
[04/22 09:48:14] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/22 09:48:14] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/22 09:48:14] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/22 09:48:14] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/22 09:48:14] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/22 09:48:15] d2.utils.env INFO: Using a generated random seed 15100026
[04/22 09:48:23] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/22 09:48:23] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:48:23] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:48:25] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/22 09:48:36] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/22 09:48:36] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/22 09:48:36] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/22 09:48:36] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/22 09:48:36] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/22 09:48:36] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_w_10afkx ...
[04/22 09:48:47] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.6716 s/iter. Inference: 9.3923 s/iter. Eval: 0.2437 s/iter. Total: 10.3080 s/iter. ETA=1:25:43
[04/22 09:48:52] d2.evaluation.evaluator INFO: Inference done 32/500. Dataloading: 0.0043 s/iter. Inference: 0.0643 s/iter. Eval: 0.0943 s/iter. Total: 0.1629 s/iter. ETA=0:01:16
[04/22 09:48:57] d2.evaluation.evaluator INFO: Inference done 67/500. Dataloading: 0.0034 s/iter. Inference: 0.0635 s/iter. Eval: 0.0856 s/iter. Total: 0.1526 s/iter. ETA=0:01:06
[04/22 09:49:02] d2.evaluation.evaluator INFO: Inference done 101/500. Dataloading: 0.0034 s/iter. Inference: 0.0641 s/iter. Eval: 0.0837 s/iter. Total: 0.1513 s/iter. ETA=0:01:00
[04/22 09:49:08] d2.evaluation.evaluator INFO: Inference done 126/500. Dataloading: 0.0248 s/iter. Inference: 0.0641 s/iter. Eval: 0.0822 s/iter. Total: 0.1711 s/iter. ETA=0:01:03
[04/22 09:49:13] d2.evaluation.evaluator INFO: Inference done 159/500. Dataloading: 0.0199 s/iter. Inference: 0.0650 s/iter. Eval: 0.0820 s/iter. Total: 0.1670 s/iter. ETA=0:00:56
[04/22 09:49:18] d2.evaluation.evaluator INFO: Inference done 194/500. Dataloading: 0.0167 s/iter. Inference: 0.0651 s/iter. Eval: 0.0810 s/iter. Total: 0.1629 s/iter. ETA=0:00:49
[04/22 09:49:23] d2.evaluation.evaluator INFO: Inference done 229/500. Dataloading: 0.0144 s/iter. Inference: 0.0655 s/iter. Eval: 0.0800 s/iter. Total: 0.1600 s/iter. ETA=0:00:43
[04/22 09:49:28] d2.evaluation.evaluator INFO: Inference done 264/500. Dataloading: 0.0128 s/iter. Inference: 0.0655 s/iter. Eval: 0.0795 s/iter. Total: 0.1578 s/iter. ETA=0:00:37
[04/22 09:49:33] d2.evaluation.evaluator INFO: Inference done 298/500. Dataloading: 0.0118 s/iter. Inference: 0.0659 s/iter. Eval: 0.0791 s/iter. Total: 0.1569 s/iter. ETA=0:00:31
[04/22 09:49:38] d2.evaluation.evaluator INFO: Inference done 333/500. Dataloading: 0.0109 s/iter. Inference: 0.0659 s/iter. Eval: 0.0786 s/iter. Total: 0.1555 s/iter. ETA=0:00:25
[04/22 09:49:43] d2.evaluation.evaluator INFO: Inference done 368/500. Dataloading: 0.0101 s/iter. Inference: 0.0661 s/iter. Eval: 0.0783 s/iter. Total: 0.1546 s/iter. ETA=0:00:20
[04/22 09:49:48] d2.evaluation.evaluator INFO: Inference done 402/500. Dataloading: 0.0095 s/iter. Inference: 0.0662 s/iter. Eval: 0.0783 s/iter. Total: 0.1540 s/iter. ETA=0:00:15
[04/22 09:49:53] d2.evaluation.evaluator INFO: Inference done 437/500. Dataloading: 0.0090 s/iter. Inference: 0.0663 s/iter. Eval: 0.0780 s/iter. Total: 0.1533 s/iter. ETA=0:00:09
[04/22 09:49:58] d2.evaluation.evaluator INFO: Inference done 472/500. Dataloading: 0.0086 s/iter. Inference: 0.0663 s/iter. Eval: 0.0778 s/iter. Total: 0.1527 s/iter. ETA=0:00:04
[04/22 09:50:02] d2.evaluation.evaluator INFO: Total inference time: 0:01:15.176319 (0.151871 s / iter per device, on 1 devices)
[04/22 09:50:02] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:32 (0.066125 s / iter per device, on 1 devices)
[04/22 09:50:02] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_w_10afkx ...
[04/22 09:51:32] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/22 09:51:32] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/22 09:51:32] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/22 09:51:32] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/22 09:51:33] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:51:33] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:55:02] detectron2 INFO: Rank of current process: 0. World size: 1
[04/22 09:55:03] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/22 09:55:03] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/22 09:55:03] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/22 09:55:03] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/22 09:55:03] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/22 09:55:03] d2.utils.env INFO: Using a generated random seed 3992124
[04/22 09:55:05] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/22 09:55:05] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:55:05] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:55:05] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/22 09:55:06] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/22 09:55:06] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/22 09:55:06] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/22 09:55:06] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/22 09:55:06] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/22 09:55:06] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_sjw5ccbv ...
[04/22 09:55:09] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0056 s/iter. Inference: 0.0656 s/iter. Eval: 0.0677 s/iter. Total: 0.1389 s/iter. ETA=0:01:07
[04/22 09:55:15] d2.evaluation.evaluator INFO: Inference done 46/500. Dataloading: 0.0067 s/iter. Inference: 0.0683 s/iter. Eval: 0.0718 s/iter. Total: 0.1468 s/iter. ETA=0:01:06
[04/22 09:55:20] d2.evaluation.evaluator INFO: Inference done 80/500. Dataloading: 0.0070 s/iter. Inference: 0.0690 s/iter. Eval: 0.0712 s/iter. Total: 0.1472 s/iter. ETA=0:01:01
[04/22 09:55:25] d2.evaluation.evaluator INFO: Inference done 114/500. Dataloading: 0.0070 s/iter. Inference: 0.0697 s/iter. Eval: 0.0719 s/iter. Total: 0.1485 s/iter. ETA=0:00:57
[04/22 09:55:30] d2.evaluation.evaluator INFO: Inference done 148/500. Dataloading: 0.0070 s/iter. Inference: 0.0699 s/iter. Eval: 0.0721 s/iter. Total: 0.1490 s/iter. ETA=0:00:52
[04/22 09:55:35] d2.evaluation.evaluator INFO: Inference done 182/500. Dataloading: 0.0071 s/iter. Inference: 0.0697 s/iter. Eval: 0.0724 s/iter. Total: 0.1493 s/iter. ETA=0:00:47
[04/22 09:55:40] d2.evaluation.evaluator INFO: Inference done 214/500. Dataloading: 0.0076 s/iter. Inference: 0.0695 s/iter. Eval: 0.0736 s/iter. Total: 0.1508 s/iter. ETA=0:00:43
[04/22 09:55:45] d2.evaluation.evaluator INFO: Inference done 244/500. Dataloading: 0.0085 s/iter. Inference: 0.0689 s/iter. Eval: 0.0756 s/iter. Total: 0.1530 s/iter. ETA=0:00:39
[04/22 09:55:50] d2.evaluation.evaluator INFO: Inference done 274/500. Dataloading: 0.0091 s/iter. Inference: 0.0689 s/iter. Eval: 0.0772 s/iter. Total: 0.1554 s/iter. ETA=0:00:35
[04/22 09:55:55] d2.evaluation.evaluator INFO: Inference done 304/500. Dataloading: 0.0096 s/iter. Inference: 0.0685 s/iter. Eval: 0.0783 s/iter. Total: 0.1565 s/iter. ETA=0:00:30
[04/22 09:56:01] d2.evaluation.evaluator INFO: Inference done 334/500. Dataloading: 0.0100 s/iter. Inference: 0.0683 s/iter. Eval: 0.0796 s/iter. Total: 0.1580 s/iter. ETA=0:00:26
[04/22 09:56:06] d2.evaluation.evaluator INFO: Inference done 364/500. Dataloading: 0.0102 s/iter. Inference: 0.0680 s/iter. Eval: 0.0805 s/iter. Total: 0.1588 s/iter. ETA=0:00:21
[04/22 09:56:11] d2.evaluation.evaluator INFO: Inference done 394/500. Dataloading: 0.0106 s/iter. Inference: 0.0678 s/iter. Eval: 0.0814 s/iter. Total: 0.1599 s/iter. ETA=0:00:16
[04/22 09:56:16] d2.evaluation.evaluator INFO: Inference done 424/500. Dataloading: 0.0108 s/iter. Inference: 0.0678 s/iter. Eval: 0.0818 s/iter. Total: 0.1606 s/iter. ETA=0:00:12
[04/22 09:56:21] d2.evaluation.evaluator INFO: Inference done 453/500. Dataloading: 0.0110 s/iter. Inference: 0.0678 s/iter. Eval: 0.0824 s/iter. Total: 0.1614 s/iter. ETA=0:00:07
[04/22 09:56:26] d2.evaluation.evaluator INFO: Inference done 483/500. Dataloading: 0.0112 s/iter. Inference: 0.0677 s/iter. Eval: 0.0829 s/iter. Total: 0.1619 s/iter. ETA=0:00:02
[04/22 09:56:28] d2.evaluation.evaluator INFO: Total inference time: 0:01:19.805934 (0.161224 s / iter per device, on 1 devices)
[04/22 09:56:28] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:33 (0.067373 s / iter per device, on 1 devices)
[04/22 09:56:28] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_sjw5ccbv ...
[04/22 09:57:39] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/22 09:57:39] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/22 09:57:39] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/22 09:57:39] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/22 09:57:39] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 09:57:39] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 13:16:54] detectron2 INFO: Rank of current process: 0. World size: 1
[04/22 13:16:57] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/22 13:16:57] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/22 13:16:57] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/22 13:16:57] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/22 13:16:57] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/22 13:16:57] d2.utils.env INFO: Using a generated random seed 57456386
[04/22 13:17:03] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/22 13:17:03] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 13:17:03] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/22 13:17:05] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/22 13:17:16] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/22 13:17:16] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/22 13:17:16] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/22 13:17:16] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/22 13:17:16] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/22 13:17:16] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_u18vnsqb ...
[04/22 13:17:27] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.7640 s/iter. Inference: 9.6298 s/iter. Eval: 0.2062 s/iter. Total: 10.6004 s/iter. ETA=1:28:09
[04/22 13:17:32] d2.evaluation.evaluator INFO: Inference done 36/500. Dataloading: 0.0021 s/iter. Inference: 0.0682 s/iter. Eval: 0.0759 s/iter. Total: 0.1462 s/iter. ETA=0:01:07
[04/22 13:17:37] d2.evaluation.evaluator INFO: Inference done 71/500. Dataloading: 0.0023 s/iter. Inference: 0.0677 s/iter. Eval: 0.0766 s/iter. Total: 0.1467 s/iter. ETA=0:01:02
[04/22 13:17:42] d2.evaluation.evaluator INFO: Inference done 106/500. Dataloading: 0.0026 s/iter. Inference: 0.0674 s/iter. Eval: 0.0759 s/iter. Total: 0.1460 s/iter. ETA=0:00:57
[04/22 13:17:47] d2.evaluation.evaluator INFO: Inference done 141/500. Dataloading: 0.0027 s/iter. Inference: 0.0675 s/iter. Eval: 0.0753 s/iter. Total: 0.1455 s/iter. ETA=0:00:52
[04/22 13:17:52] d2.evaluation.evaluator INFO: Inference done 176/500. Dataloading: 0.0026 s/iter. Inference: 0.0675 s/iter. Eval: 0.0748 s/iter. Total: 0.1450 s/iter. ETA=0:00:46
[04/22 13:17:57] d2.evaluation.evaluator INFO: Inference done 211/500. Dataloading: 0.0027 s/iter. Inference: 0.0671 s/iter. Eval: 0.0750 s/iter. Total: 0.1449 s/iter. ETA=0:00:41
[04/22 13:18:02] d2.evaluation.evaluator INFO: Inference done 246/500. Dataloading: 0.0027 s/iter. Inference: 0.0672 s/iter. Eval: 0.0747 s/iter. Total: 0.1447 s/iter. ETA=0:00:36
[04/22 13:18:08] d2.evaluation.evaluator INFO: Inference done 282/500. Dataloading: 0.0027 s/iter. Inference: 0.0675 s/iter. Eval: 0.0742 s/iter. Total: 0.1445 s/iter. ETA=0:00:31
[04/22 13:18:13] d2.evaluation.evaluator INFO: Inference done 318/500. Dataloading: 0.0028 s/iter. Inference: 0.0675 s/iter. Eval: 0.0739 s/iter. Total: 0.1443 s/iter. ETA=0:00:26
[04/22 13:18:18] d2.evaluation.evaluator INFO: Inference done 354/500. Dataloading: 0.0028 s/iter. Inference: 0.0673 s/iter. Eval: 0.0741 s/iter. Total: 0.1442 s/iter. ETA=0:00:21
[04/22 13:18:23] d2.evaluation.evaluator INFO: Inference done 384/500. Dataloading: 0.0030 s/iter. Inference: 0.0675 s/iter. Eval: 0.0755 s/iter. Total: 0.1461 s/iter. ETA=0:00:16
[04/22 13:18:28] d2.evaluation.evaluator INFO: Inference done 421/500. Dataloading: 0.0031 s/iter. Inference: 0.0671 s/iter. Eval: 0.0752 s/iter. Total: 0.1454 s/iter. ETA=0:00:11
[04/22 13:18:33] d2.evaluation.evaluator INFO: Inference done 463/500. Dataloading: 0.0030 s/iter. Inference: 0.0667 s/iter. Eval: 0.0735 s/iter. Total: 0.1433 s/iter. ETA=0:00:05
[04/22 13:18:38] d2.evaluation.evaluator INFO: Total inference time: 0:01:10.009406 (0.141433 s / iter per device, on 1 devices)
[04/22 13:18:38] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:32 (0.066143 s / iter per device, on 1 devices)
[04/22 13:18:38] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_u18vnsqb ...
[04/22 13:20:02] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/22 13:20:02] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/22 13:20:02] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/22 13:20:02] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/22 13:20:03] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/22 13:20:03] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/28 08:54:30] detectron2 INFO: Rank of current process: 0. World size: 1
[04/28 08:54:34] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/28 08:54:34] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/28 08:54:34] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/28 08:54:34] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/28 08:54:34] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/28 08:54:34] d2.utils.env INFO: Using a generated random seed 35124422
[04/28 08:54:42] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/28 08:54:42] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/28 08:54:42] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/28 08:54:44] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/28 08:54:55] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/28 08:54:55] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/28 08:54:55] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/28 08:54:55] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/28 08:54:55] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/28 08:54:55] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_brn4r4v3 ...
[04/28 08:55:06] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.7370 s/iter. Inference: 10.1291 s/iter. Eval: 0.2299 s/iter. Total: 11.0964 s/iter. ETA=1:32:17
[04/28 08:55:11] d2.evaluation.evaluator INFO: Inference done 32/500. Dataloading: 0.0032 s/iter. Inference: 0.0705 s/iter. Eval: 0.0968 s/iter. Total: 0.1705 s/iter. ETA=0:01:19
[04/28 08:55:16] d2.evaluation.evaluator INFO: Inference done 62/500. Dataloading: 0.0032 s/iter. Inference: 0.0711 s/iter. Eval: 0.0941 s/iter. Total: 0.1685 s/iter. ETA=0:01:13
[04/28 08:55:21] d2.evaluation.evaluator INFO: Inference done 91/500. Dataloading: 0.0036 s/iter. Inference: 0.0718 s/iter. Eval: 0.0948 s/iter. Total: 0.1702 s/iter. ETA=0:01:09
[04/28 08:55:26] d2.evaluation.evaluator INFO: Inference done 127/500. Dataloading: 0.0036 s/iter. Inference: 0.0697 s/iter. Eval: 0.0886 s/iter. Total: 0.1619 s/iter. ETA=0:01:00
[04/28 08:55:31] d2.evaluation.evaluator INFO: Inference done 164/500. Dataloading: 0.0047 s/iter. Inference: 0.0681 s/iter. Eval: 0.0832 s/iter. Total: 0.1561 s/iter. ETA=0:00:52
[04/28 08:55:36] d2.evaluation.evaluator INFO: Inference done 200/500. Dataloading: 0.0045 s/iter. Inference: 0.0678 s/iter. Eval: 0.0811 s/iter. Total: 0.1535 s/iter. ETA=0:00:46
[04/28 08:55:41] d2.evaluation.evaluator INFO: Inference done 235/500. Dataloading: 0.0042 s/iter. Inference: 0.0680 s/iter. Eval: 0.0798 s/iter. Total: 0.1521 s/iter. ETA=0:00:40
[04/28 08:55:46] d2.evaluation.evaluator INFO: Inference done 270/500. Dataloading: 0.0041 s/iter. Inference: 0.0681 s/iter. Eval: 0.0791 s/iter. Total: 0.1513 s/iter. ETA=0:00:34
[04/28 08:55:51] d2.evaluation.evaluator INFO: Inference done 305/500. Dataloading: 0.0039 s/iter. Inference: 0.0676 s/iter. Eval: 0.0790 s/iter. Total: 0.1505 s/iter. ETA=0:00:29
[04/28 08:55:56] d2.evaluation.evaluator INFO: Inference done 340/500. Dataloading: 0.0038 s/iter. Inference: 0.0675 s/iter. Eval: 0.0784 s/iter. Total: 0.1497 s/iter. ETA=0:00:23
[04/28 08:56:01] d2.evaluation.evaluator INFO: Inference done 376/500. Dataloading: 0.0036 s/iter. Inference: 0.0674 s/iter. Eval: 0.0777 s/iter. Total: 0.1489 s/iter. ETA=0:00:18
[04/28 08:56:07] d2.evaluation.evaluator INFO: Inference done 412/500. Dataloading: 0.0035 s/iter. Inference: 0.0674 s/iter. Eval: 0.0772 s/iter. Total: 0.1482 s/iter. ETA=0:00:13
[04/28 08:56:12] d2.evaluation.evaluator INFO: Inference done 448/500. Dataloading: 0.0036 s/iter. Inference: 0.0672 s/iter. Eval: 0.0768 s/iter. Total: 0.1477 s/iter. ETA=0:00:07
[04/28 08:56:17] d2.evaluation.evaluator INFO: Inference done 484/500. Dataloading: 0.0036 s/iter. Inference: 0.0670 s/iter. Eval: 0.0764 s/iter. Total: 0.1471 s/iter. ETA=0:00:02
[04/28 08:56:19] d2.evaluation.evaluator INFO: Total inference time: 0:01:12.509608 (0.146484 s / iter per device, on 1 devices)
[04/28 08:56:19] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:33 (0.066737 s / iter per device, on 1 devices)
[04/28 08:56:19] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_brn4r4v3 ...
[04/28 08:57:42] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/28 08:57:42] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/28 08:57:42] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/28 08:57:42] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/28 08:57:42] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/28 08:57:42] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/28 10:56:29] detectron2 INFO: Rank of current process: 0. World size: 1
[04/28 10:56:32] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/28 10:56:32] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/28 10:56:32] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/28 10:56:32] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/28 10:56:32] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/28 10:56:32] d2.utils.env INFO: Using a generated random seed 32852463
[04/28 10:56:40] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/28 10:56:40] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/28 10:56:40] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/28 10:56:42] d2.data.datasets.cityscapes INFO: 1 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/29 09:04:01] detectron2 INFO: Rank of current process: 0. World size: 1
[04/29 09:04:03] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/29 09:04:03] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/29 09:04:03] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/29 09:04:03] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/29 09:04:03] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/29 09:04:03] d2.utils.env INFO: Using a generated random seed 3923802
[04/29 09:04:10] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/29 09:04:10] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 09:04:10] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/29 09:04:12] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/29 09:04:22] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/29 09:04:22] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/29 09:04:22] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/29 09:04:22] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/29 09:04:22] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/29 09:04:22] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_7zu978zq ...
[04/29 09:04:34] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.7303 s/iter. Inference: 11.3204 s/iter. Eval: 0.2397 s/iter. Total: 12.2909 s/iter. ETA=1:42:13
[04/29 09:04:39] d2.evaluation.evaluator INFO: Inference done 38/500. Dataloading: 0.0040 s/iter. Inference: 0.0655 s/iter. Eval: 0.0671 s/iter. Total: 0.1369 s/iter. ETA=0:01:03
[04/29 09:04:44] d2.evaluation.evaluator INFO: Inference done 74/500. Dataloading: 0.0033 s/iter. Inference: 0.0671 s/iter. Eval: 0.0694 s/iter. Total: 0.1400 s/iter. ETA=0:00:59
[04/29 09:04:50] d2.evaluation.evaluator INFO: Inference done 110/500. Dataloading: 0.0029 s/iter. Inference: 0.0671 s/iter. Eval: 0.0702 s/iter. Total: 0.1403 s/iter. ETA=0:00:54
[04/29 09:04:55] d2.evaluation.evaluator INFO: Inference done 145/500. Dataloading: 0.0028 s/iter. Inference: 0.0671 s/iter. Eval: 0.0713 s/iter. Total: 0.1412 s/iter. ETA=0:00:50
[04/29 09:05:00] d2.evaluation.evaluator INFO: Inference done 175/500. Dataloading: 0.0030 s/iter. Inference: 0.0680 s/iter. Eval: 0.0754 s/iter. Total: 0.1465 s/iter. ETA=0:00:47
[04/29 09:05:05] d2.evaluation.evaluator INFO: Inference done 205/500. Dataloading: 0.0030 s/iter. Inference: 0.0688 s/iter. Eval: 0.0778 s/iter. Total: 0.1497 s/iter. ETA=0:00:44
[04/29 09:05:10] d2.evaluation.evaluator INFO: Inference done 235/500. Dataloading: 0.0030 s/iter. Inference: 0.0691 s/iter. Eval: 0.0802 s/iter. Total: 0.1524 s/iter. ETA=0:00:40
[04/29 09:05:15] d2.evaluation.evaluator INFO: Inference done 266/500. Dataloading: 0.0031 s/iter. Inference: 0.0692 s/iter. Eval: 0.0814 s/iter. Total: 0.1537 s/iter. ETA=0:00:35
[04/29 09:05:20] d2.evaluation.evaluator INFO: Inference done 296/500. Dataloading: 0.0031 s/iter. Inference: 0.0691 s/iter. Eval: 0.0828 s/iter. Total: 0.1551 s/iter. ETA=0:00:31
[04/29 09:05:25] d2.evaluation.evaluator INFO: Inference done 328/500. Dataloading: 0.0031 s/iter. Inference: 0.0692 s/iter. Eval: 0.0831 s/iter. Total: 0.1555 s/iter. ETA=0:00:26
[04/29 09:05:30] d2.evaluation.evaluator INFO: Inference done 371/500. Dataloading: 0.0029 s/iter. Inference: 0.0684 s/iter. Eval: 0.0798 s/iter. Total: 0.1512 s/iter. ETA=0:00:19
[04/29 09:05:35] d2.evaluation.evaluator INFO: Inference done 414/500. Dataloading: 0.0028 s/iter. Inference: 0.0676 s/iter. Eval: 0.0772 s/iter. Total: 0.1476 s/iter. ETA=0:00:12
[04/29 09:05:40] d2.evaluation.evaluator INFO: Inference done 456/500. Dataloading: 0.0027 s/iter. Inference: 0.0671 s/iter. Eval: 0.0752 s/iter. Total: 0.1450 s/iter. ETA=0:00:06
[04/29 09:05:45] d2.evaluation.evaluator INFO: Inference done 498/500. Dataloading: 0.0026 s/iter. Inference: 0.0664 s/iter. Eval: 0.0738 s/iter. Total: 0.1429 s/iter. ETA=0:00:00
[04/29 09:05:46] d2.evaluation.evaluator INFO: Total inference time: 0:01:10.718510 (0.142866 s / iter per device, on 1 devices)
[04/29 09:05:46] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:32 (0.066384 s / iter per device, on 1 devices)
[04/29 09:05:46] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_7zu978zq ...
[04/29 09:07:09] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/29 09:07:09] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/29 09:07:09] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/29 09:07:09] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/29 09:07:09] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 09:07:09] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/29 12:10:58] detectron2 INFO: Rank of current process: 0. World size: 1
[04/29 12:11:02] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/29 12:11:02] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/29 12:11:02] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/29 12:11:02] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/29 12:11:02] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/29 12:11:02] d2.utils.env INFO: Using a generated random seed 2204191
[04/29 12:11:09] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/29 12:11:09] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 12:11:09] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/29 12:11:11] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/29 12:11:22] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/29 12:11:22] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/29 12:11:22] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/29 12:11:22] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/29 12:11:22] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/29 12:11:22] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_098_xvha ...
[04/29 12:11:33] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.8463 s/iter. Inference: 10.4016 s/iter. Eval: 0.1934 s/iter. Total: 11.4419 s/iter. ETA=1:35:09
[04/29 12:11:38] d2.evaluation.evaluator INFO: Inference done 31/500. Dataloading: 0.0020 s/iter. Inference: 0.0653 s/iter. Eval: 0.0972 s/iter. Total: 0.1646 s/iter. ETA=0:01:17
[04/29 12:11:43] d2.evaluation.evaluator INFO: Inference done 63/500. Dataloading: 0.0021 s/iter. Inference: 0.0628 s/iter. Eval: 0.0967 s/iter. Total: 0.1616 s/iter. ETA=0:01:10
[04/29 12:11:48] d2.evaluation.evaluator INFO: Inference done 91/500. Dataloading: 0.0024 s/iter. Inference: 0.0637 s/iter. Eval: 0.1015 s/iter. Total: 0.1677 s/iter. ETA=0:01:08
[04/29 12:11:53] d2.evaluation.evaluator INFO: Inference done 121/500. Dataloading: 0.0025 s/iter. Inference: 0.0631 s/iter. Eval: 0.1019 s/iter. Total: 0.1676 s/iter. ETA=0:01:03
[04/29 12:11:59] d2.evaluation.evaluator INFO: Inference done 154/500. Dataloading: 0.0025 s/iter. Inference: 0.0625 s/iter. Eval: 0.1000 s/iter. Total: 0.1650 s/iter. ETA=0:00:57
[04/29 12:12:04] d2.evaluation.evaluator INFO: Inference done 185/500. Dataloading: 0.0025 s/iter. Inference: 0.0625 s/iter. Eval: 0.0994 s/iter. Total: 0.1644 s/iter. ETA=0:00:51
[04/29 12:12:09] d2.evaluation.evaluator INFO: Inference done 216/500. Dataloading: 0.0025 s/iter. Inference: 0.0624 s/iter. Eval: 0.0997 s/iter. Total: 0.1646 s/iter. ETA=0:00:46
[04/29 12:12:14] d2.evaluation.evaluator INFO: Inference done 248/500. Dataloading: 0.0024 s/iter. Inference: 0.0625 s/iter. Eval: 0.0988 s/iter. Total: 0.1638 s/iter. ETA=0:00:41
[04/29 12:12:19] d2.evaluation.evaluator INFO: Inference done 280/500. Dataloading: 0.0024 s/iter. Inference: 0.0626 s/iter. Eval: 0.0985 s/iter. Total: 0.1636 s/iter. ETA=0:00:35
[04/29 12:12:24] d2.evaluation.evaluator INFO: Inference done 312/500. Dataloading: 0.0024 s/iter. Inference: 0.0625 s/iter. Eval: 0.0981 s/iter. Total: 0.1631 s/iter. ETA=0:00:30
[04/29 12:12:29] d2.evaluation.evaluator INFO: Inference done 343/500. Dataloading: 0.0025 s/iter. Inference: 0.0626 s/iter. Eval: 0.0979 s/iter. Total: 0.1631 s/iter. ETA=0:00:25
[04/29 12:12:34] d2.evaluation.evaluator INFO: Inference done 374/500. Dataloading: 0.0025 s/iter. Inference: 0.0628 s/iter. Eval: 0.0980 s/iter. Total: 0.1634 s/iter. ETA=0:00:20
[04/29 12:12:39] d2.evaluation.evaluator INFO: Inference done 406/500. Dataloading: 0.0025 s/iter. Inference: 0.0628 s/iter. Eval: 0.0978 s/iter. Total: 0.1632 s/iter. ETA=0:00:15
[04/29 12:12:44] d2.evaluation.evaluator INFO: Inference done 437/500. Dataloading: 0.0025 s/iter. Inference: 0.0628 s/iter. Eval: 0.0976 s/iter. Total: 0.1630 s/iter. ETA=0:00:10
[04/29 12:12:49] d2.evaluation.evaluator INFO: Inference done 468/500. Dataloading: 0.0025 s/iter. Inference: 0.0628 s/iter. Eval: 0.0977 s/iter. Total: 0.1630 s/iter. ETA=0:00:05
[04/29 12:12:55] d2.evaluation.evaluator INFO: Inference done 500/500. Dataloading: 0.0025 s/iter. Inference: 0.0626 s/iter. Eval: 0.0976 s/iter. Total: 0.1628 s/iter. ETA=0:00:00
[04/29 12:12:55] d2.evaluation.evaluator INFO: Total inference time: 0:01:20.643939 (0.162917 s / iter per device, on 1 devices)
[04/29 12:12:55] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:30 (0.062620 s / iter per device, on 1 devices)
[04/29 12:12:55] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_098_xvha ...
[04/29 12:14:51] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/29 12:14:51] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/29 12:14:51] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/29 12:14:51] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/29 12:14:52] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 12:14:52] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/29 15:04:43] detectron2 INFO: Rank of current process: 0. World size: 1
[04/29 15:04:46] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/29 15:04:46] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/29 15:04:46] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/29 15:04:46] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/29 15:04:46] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/29 15:04:46] d2.utils.env INFO: Using a generated random seed 46352724
[04/29 15:04:55] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/29 15:04:55] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 15:04:55] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/29 15:04:58] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/29 15:05:08] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/29 15:05:08] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/29 15:05:08] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/29 15:05:08] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/29 15:05:08] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/29 15:05:08] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_bxjjz8m0 ...
[04/29 15:05:18] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.6993 s/iter. Inference: 9.5265 s/iter. Eval: 0.1842 s/iter. Total: 10.4104 s/iter. ETA=1:26:34
[04/29 15:05:23] d2.evaluation.evaluator INFO: Inference done 43/500. Dataloading: 0.0015 s/iter. Inference: 0.0615 s/iter. Eval: 0.0561 s/iter. Total: 0.1190 s/iter. ETA=0:00:54
[04/29 15:05:28] d2.evaluation.evaluator INFO: Inference done 85/500. Dataloading: 0.0015 s/iter. Inference: 0.0619 s/iter. Eval: 0.0561 s/iter. Total: 0.1196 s/iter. ETA=0:00:49
[04/29 15:05:33] d2.evaluation.evaluator INFO: Inference done 127/500. Dataloading: 0.0016 s/iter. Inference: 0.0621 s/iter. Eval: 0.0561 s/iter. Total: 0.1199 s/iter. ETA=0:00:44
[04/29 15:05:38] d2.evaluation.evaluator INFO: Inference done 169/500. Dataloading: 0.0016 s/iter. Inference: 0.0625 s/iter. Eval: 0.0560 s/iter. Total: 0.1202 s/iter. ETA=0:00:39
[04/29 15:05:44] d2.evaluation.evaluator INFO: Inference done 211/500. Dataloading: 0.0016 s/iter. Inference: 0.0628 s/iter. Eval: 0.0558 s/iter. Total: 0.1203 s/iter. ETA=0:00:34
[04/29 15:05:49] d2.evaluation.evaluator INFO: Inference done 253/500. Dataloading: 0.0016 s/iter. Inference: 0.0628 s/iter. Eval: 0.0558 s/iter. Total: 0.1202 s/iter. ETA=0:00:29
[04/29 15:05:54] d2.evaluation.evaluator INFO: Inference done 290/500. Dataloading: 0.0018 s/iter. Inference: 0.0632 s/iter. Eval: 0.0572 s/iter. Total: 0.1222 s/iter. ETA=0:00:25
[04/29 15:05:59] d2.evaluation.evaluator INFO: Inference done 325/500. Dataloading: 0.0019 s/iter. Inference: 0.0636 s/iter. Eval: 0.0594 s/iter. Total: 0.1249 s/iter. ETA=0:00:21
[04/29 15:06:04] d2.evaluation.evaluator INFO: Inference done 360/500. Dataloading: 0.0020 s/iter. Inference: 0.0639 s/iter. Eval: 0.0609 s/iter. Total: 0.1268 s/iter. ETA=0:00:17
[04/29 15:06:09] d2.evaluation.evaluator INFO: Inference done 395/500. Dataloading: 0.0021 s/iter. Inference: 0.0641 s/iter. Eval: 0.0621 s/iter. Total: 0.1283 s/iter. ETA=0:00:13
[04/29 15:06:14] d2.evaluation.evaluator INFO: Inference done 431/500. Dataloading: 0.0021 s/iter. Inference: 0.0645 s/iter. Eval: 0.0629 s/iter. Total: 0.1295 s/iter. ETA=0:00:08
[04/29 15:06:19] d2.evaluation.evaluator INFO: Inference done 467/500. Dataloading: 0.0021 s/iter. Inference: 0.0647 s/iter. Eval: 0.0635 s/iter. Total: 0.1304 s/iter. ETA=0:00:04
[04/29 15:06:23] d2.evaluation.evaluator INFO: Total inference time: 0:01:04.733166 (0.130774 s / iter per device, on 1 devices)
[04/29 15:06:23] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:31 (0.064600 s / iter per device, on 1 devices)
[04/29 15:06:24] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_bxjjz8m0 ...
[04/29 15:07:49] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/29 15:07:49] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/29 15:07:49] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/29 15:07:49] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/29 15:07:49] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 15:07:49] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/29 16:03:31] detectron2 INFO: Rank of current process: 0. World size: 1
[04/29 16:03:34] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/29 16:03:34] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/29 16:03:34] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/29 16:03:34] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/29 16:03:34] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/29 16:03:34] d2.utils.env INFO: Using a generated random seed 34240677
[04/29 16:03:41] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/29 16:03:41] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 16:03:41] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/29 16:03:46] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/29 16:03:56] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/29 16:03:56] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/29 16:03:56] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/29 16:03:56] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/29 16:03:56] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/29 16:03:56] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_3tby34pz ...
[04/29 16:04:06] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.6969 s/iter. Inference: 9.1825 s/iter. Eval: 0.2307 s/iter. Total: 10.1106 s/iter. ETA=1:24:05
[04/29 16:04:11] d2.evaluation.evaluator INFO: Inference done 33/500. Dataloading: 0.0032 s/iter. Inference: 0.0696 s/iter. Eval: 0.0878 s/iter. Total: 0.1607 s/iter. ETA=0:01:15
[04/29 16:04:16] d2.evaluation.evaluator INFO: Inference done 66/500. Dataloading: 0.0032 s/iter. Inference: 0.0692 s/iter. Eval: 0.0835 s/iter. Total: 0.1560 s/iter. ETA=0:01:07
[04/29 16:04:21] d2.evaluation.evaluator INFO: Inference done 100/500. Dataloading: 0.0031 s/iter. Inference: 0.0679 s/iter. Eval: 0.0836 s/iter. Total: 0.1546 s/iter. ETA=0:01:01
[04/29 16:04:26] d2.evaluation.evaluator INFO: Inference done 134/500. Dataloading: 0.0029 s/iter. Inference: 0.0679 s/iter. Eval: 0.0826 s/iter. Total: 0.1536 s/iter. ETA=0:00:56
[04/29 16:04:31] d2.evaluation.evaluator INFO: Inference done 169/500. Dataloading: 0.0029 s/iter. Inference: 0.0678 s/iter. Eval: 0.0814 s/iter. Total: 0.1522 s/iter. ETA=0:00:50
[04/29 16:04:36] d2.evaluation.evaluator INFO: Inference done 204/500. Dataloading: 0.0030 s/iter. Inference: 0.0679 s/iter. Eval: 0.0802 s/iter. Total: 0.1511 s/iter. ETA=0:00:44
[04/29 16:04:41] d2.evaluation.evaluator INFO: Inference done 238/500. Dataloading: 0.0031 s/iter. Inference: 0.0678 s/iter. Eval: 0.0796 s/iter. Total: 0.1505 s/iter. ETA=0:00:39
[04/29 16:04:47] d2.evaluation.evaluator INFO: Inference done 273/500. Dataloading: 0.0030 s/iter. Inference: 0.0681 s/iter. Eval: 0.0790 s/iter. Total: 0.1501 s/iter. ETA=0:00:34
[04/29 16:04:52] d2.evaluation.evaluator INFO: Inference done 304/500. Dataloading: 0.0031 s/iter. Inference: 0.0676 s/iter. Eval: 0.0807 s/iter. Total: 0.1514 s/iter. ETA=0:00:29
[04/29 16:04:57] d2.evaluation.evaluator INFO: Inference done 336/500. Dataloading: 0.0031 s/iter. Inference: 0.0677 s/iter. Eval: 0.0811 s/iter. Total: 0.1519 s/iter. ETA=0:00:24
[04/29 16:05:02] d2.evaluation.evaluator INFO: Inference done 369/500. Dataloading: 0.0031 s/iter. Inference: 0.0677 s/iter. Eval: 0.0811 s/iter. Total: 0.1519 s/iter. ETA=0:00:19
[04/29 16:05:07] d2.evaluation.evaluator INFO: Inference done 403/500. Dataloading: 0.0030 s/iter. Inference: 0.0677 s/iter. Eval: 0.0809 s/iter. Total: 0.1517 s/iter. ETA=0:00:14
[04/29 16:05:12] d2.evaluation.evaluator INFO: Inference done 443/500. Dataloading: 0.0029 s/iter. Inference: 0.0673 s/iter. Eval: 0.0791 s/iter. Total: 0.1493 s/iter. ETA=0:00:08
[04/29 16:05:17] d2.evaluation.evaluator INFO: Inference done 480/500. Dataloading: 0.0028 s/iter. Inference: 0.0671 s/iter. Eval: 0.0785 s/iter. Total: 0.1484 s/iter. ETA=0:00:02
[04/29 16:05:20] d2.evaluation.evaluator INFO: Total inference time: 0:01:13.223508 (0.147926 s / iter per device, on 1 devices)
[04/29 16:05:20] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:33 (0.066772 s / iter per device, on 1 devices)
[04/29 16:05:20] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_3tby34pz ...
[04/29 16:06:47] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/29 16:06:47] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/29 16:06:47] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/29 16:06:47] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/29 16:06:48] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 16:06:48] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/29 19:41:52] detectron2 INFO: Rank of current process: 0. World size: 1
[04/29 19:41:54] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.10 (main, Mar 21 2023, 18:45:11) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/detectron2
Compiler                         GCC 8.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.0.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla V100-SXM2-32GB (arch=7.0)
Driver version                   525.60.13
CUDA_HOME                        None - invalid!
Pillow                           9.4.0
torchvision                      0.15.0 @/ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision
torchvision arch flags           /ocean/projects/cis230005p/bansals/Anaconda/envs/dan27/lib/python3.10/site-packages/torchvision/_C.so
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[04/29 19:41:54] detectron2 INFO: Command line arguments: Namespace(config_file='configs/r50.yaml', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:55007', opts=['MODEL.WEIGHTS', 'checkpoints/model_final.pth'])
[04/29 19:41:54] detectron2 INFO: Contents of args.config_file=configs/r50.yaml:
_BASE_: "base.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  DILATED_RESNET:
    DEPTH: 50
OUTPUT_DIR: "./output/r50"

[04/29 19:41:54] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - cityscapes_fine_sem_seg_val
  TRAIN:
  - cityscapes_fine_sem_seg_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 960
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 896
  - 928
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_dilated_resnet_backbone
  DEVICE: cuda
  DILATED_RESNET:
    DEPTH: 50
    NORM: SyncBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 2
    RES5_DILATION: 4
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: SemanticSegmentor
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 8
    CONVS_DIM: 64
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res5
    LOSS_WEIGHT: 1.0
    NAME: DANetHead
    NORM: GN
    NUM_CLASSES: 19
  WEIGHTS: checkpoints/model_final.pth
OUTPUT_DIR: ./output/r50
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 4
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 24000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 18000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/29 19:41:54] detectron2 INFO: Full config saved to ./output/r50/config.yaml
[04/29 19:41:54] d2.utils.env INFO: Using a generated random seed 54808322
[04/29 19:42:00] d2.engine.defaults INFO: Model:
SemanticSegmentor(
  (backbone): DilatedResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): DANetHead(
    (res5_pam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (res5_cam): Sequential(
      (0): Conv2d(
        2048, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 64, eps=1e-05, affine=True)
      )
    )
    (predictor): Conv2d(64, 19, kernel_size=(1, 1), stride=(1, 1))
  )
)
[04/29 19:42:00] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 19:42:00] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
[04/29 19:42:02] d2.data.datasets.cityscapes INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val/'.
[04/29 19:42:12] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=960, sample_style='choice')]
[04/29 19:42:12] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[04/29 19:42:12] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[04/29 19:42:12] d2.data.common INFO: Serialized dataset takes 0.12 MiB
[04/29 19:42:12] d2.evaluation.evaluator INFO: Start inference on 500 batches
[04/29 19:42:12] d2.evaluation.cityscapes_evaluation INFO: Writing cityscapes results to temporary directory /tmp/cityscapes_eval_wd1tbz09 ...
[04/29 19:42:22] d2.evaluation.evaluator INFO: Inference done 1/500. Dataloading: 0.6382 s/iter. Inference: 9.2463 s/iter. Eval: 0.1762 s/iter. Total: 10.0612 s/iter. ETA=1:23:40
[04/29 19:42:28] d2.evaluation.evaluator INFO: Inference done 35/500. Dataloading: 0.0021 s/iter. Inference: 0.0680 s/iter. Eval: 0.0789 s/iter. Total: 0.1490 s/iter. ETA=0:01:09
[04/29 19:42:33] d2.evaluation.evaluator INFO: Inference done 68/500. Dataloading: 0.0026 s/iter. Inference: 0.0685 s/iter. Eval: 0.0796 s/iter. Total: 0.1508 s/iter. ETA=0:01:05
[04/29 19:42:38] d2.evaluation.evaluator INFO: Inference done 102/500. Dataloading: 0.0025 s/iter. Inference: 0.0686 s/iter. Eval: 0.0787 s/iter. Total: 0.1499 s/iter. ETA=0:00:59
[04/29 19:42:43] d2.evaluation.evaluator INFO: Inference done 136/500. Dataloading: 0.0024 s/iter. Inference: 0.0681 s/iter. Eval: 0.0787 s/iter. Total: 0.1493 s/iter. ETA=0:00:54
[04/29 19:42:48] d2.evaluation.evaluator INFO: Inference done 171/500. Dataloading: 0.0024 s/iter. Inference: 0.0684 s/iter. Eval: 0.0781 s/iter. Total: 0.1490 s/iter. ETA=0:00:49
[04/29 19:42:53] d2.evaluation.evaluator INFO: Inference done 205/500. Dataloading: 0.0024 s/iter. Inference: 0.0682 s/iter. Eval: 0.0781 s/iter. Total: 0.1489 s/iter. ETA=0:00:43
[04/29 19:42:58] d2.evaluation.evaluator INFO: Inference done 239/500. Dataloading: 0.0026 s/iter. Inference: 0.0682 s/iter. Eval: 0.0780 s/iter. Total: 0.1488 s/iter. ETA=0:00:38
[04/29 19:43:03] d2.evaluation.evaluator INFO: Inference done 274/500. Dataloading: 0.0026 s/iter. Inference: 0.0681 s/iter. Eval: 0.0773 s/iter. Total: 0.1481 s/iter. ETA=0:00:33
[04/29 19:43:08] d2.evaluation.evaluator INFO: Inference done 308/500. Dataloading: 0.0026 s/iter. Inference: 0.0681 s/iter. Eval: 0.0773 s/iter. Total: 0.1481 s/iter. ETA=0:00:28
[04/29 19:43:13] d2.evaluation.evaluator INFO: Inference done 343/500. Dataloading: 0.0026 s/iter. Inference: 0.0680 s/iter. Eval: 0.0771 s/iter. Total: 0.1478 s/iter. ETA=0:00:23
[04/29 19:43:18] d2.evaluation.evaluator INFO: Inference done 378/500. Dataloading: 0.0026 s/iter. Inference: 0.0681 s/iter. Eval: 0.0768 s/iter. Total: 0.1475 s/iter. ETA=0:00:17
[04/29 19:43:23] d2.evaluation.evaluator INFO: Inference done 412/500. Dataloading: 0.0026 s/iter. Inference: 0.0680 s/iter. Eval: 0.0768 s/iter. Total: 0.1475 s/iter. ETA=0:00:12
[04/29 19:43:28] d2.evaluation.evaluator INFO: Inference done 448/500. Dataloading: 0.0026 s/iter. Inference: 0.0680 s/iter. Eval: 0.0765 s/iter. Total: 0.1471 s/iter. ETA=0:00:07
[04/29 19:43:33] d2.evaluation.evaluator INFO: Inference done 483/500. Dataloading: 0.0026 s/iter. Inference: 0.0678 s/iter. Eval: 0.0764 s/iter. Total: 0.1469 s/iter. ETA=0:00:02
[04/29 19:43:35] d2.evaluation.evaluator INFO: Total inference time: 0:01:12.421883 (0.146307 s / iter per device, on 1 devices)
[04/29 19:43:35] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:33 (0.067626 s / iter per device, on 1 devices)
[04/29 19:43:36] d2.evaluation.cityscapes_evaluation INFO: Evaluating results under /tmp/cityscapes_eval_wd1tbz09 ...
[04/29 19:45:00] d2.engine.defaults INFO: Evaluation results for cityscapes_fine_sem_seg_val in csv format:
[04/29 19:45:00] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[04/29 19:45:00] d2.evaluation.testing INFO: copypaste: IoU,iIoU,IoU_sup,iIoU_sup
[04/29 19:45:00] d2.evaluation.testing INFO: copypaste: 66.1421,40.5956,83.4174,64.0820
[04/29 19:45:00] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from checkpoints/model_final.pth ...
[04/29 19:45:00] fvcore.common.checkpoint INFO: [Checkpointer] Loading from checkpoints/model_final.pth ...
